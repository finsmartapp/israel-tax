{"version":3,"sources":["utils/validationText.js","prop-types/index.js","components/page-container/index.js","components/hero/index.js","pages/home/index.js","contexts/LanguageContext.js","components/navbar/language-selector/index.js","components/navbar/NavbarMenus.js","components/navbar/index.js","components/footer/index.js","utils/conditionalWrapper.js","utils/caseConvertor.js","components/form-inputs/InputWrapper.js","components/form-inputs/InputSelect.js","components/buttons/PayrollYear.js","utils/keypadDisplay.js","components/form-inputs/InputField.js","utils/comparisons.js","pages/net-pay/form-sections/Income.js","components/form-inputs/InputRadio.js","utils/tax-calculators/pensionLegalMin.js","pages/net-pay/form-sections/Contributions.js","pages/net-pay/form-sections/Allowances.js","pages/net-pay/form-sections/Incentives.js","pages/net-pay/Form.js","utils/tax-calculators/incomeTax.js","utils/tax-calculators/bituachLeumi.js","utils/tax-calculators/incomeTaxBands.js","utils/tax-calculators/nationalInsuranceSelfEmp.js","utils/formatNumber.js","utils/tax-calculators/pensionContribution.js","utils/tax-calculators/pensionReliefSelfEmp.js","utils/tax-calculators/studyFund.js","utils/tax-calculators/studyFundAllowances.js","utils/formatCurrency.js","components/table-breakdown/BreakdownRows.js","components/table-breakdown/index.js","components/info-card/Card.js","components/info-card/index.js","pages/net-pay/ResultsEmployee.js","pages/net-pay/ResultsEmployeeInfo.js","utils/tax-calculators/pensionReliefEmployee.js","pages/net-pay/ResultsSelfEmployed.js","utils/scrollToRef.js","pages/net-pay/Calculator.js","pages/net-pay/index.js","pages/end-of-year/form-sections/Revenue.js","pages/end-of-year/form-sections/Pension.js","pages/end-of-year/form-sections/StudyFund.js","pages/end-of-year/Form.js","pages/end-of-year/Results.js","pages/end-of-year/Calculator.js","pages/end-of-year/index.js","pages/tax-bands/TableRates.js","pages/tax-bands/Table.js","pages/tax-bands/index.js","pages/credit-points/TableValues.js","pages/credit-points/ShowMoreBtn.js","pages/credit-points/Table.js","pages/credit-points/index.js","utils/globalVariables.js","pages/pension-self-employed/Deposit.js","pages/pension-self-employed/DepositExamples.js","pages/pension-self-employed/TaxRelief.js","pages/pension-self-employed/TaxReliefExamples.js","pages/pension-self-employed/index.js","pages/pension-employee/Deposit.js","pages/pension-employee/index.js","pages/study-fund-self-employed/Deposit.js","pages/study-fund-self-employed/Examples.js","pages/study-fund-self-employed/index.js","pages/study-fund-employee/Deposit.js","pages/study-fund-employee/Examples.js","pages/study-fund-employee/index.js","app/App.js","serviceWorker.js","index.js","images/cards/iphone-calulator.jpg","images/cards/shekel-money-bag.jpg","images/cards/hour-glass-coins.jpeg","images/cards/seedling-coins.jpg"],"names":["module","exports","invalidNum","invalidPercent","shape","func","isRequired","object","oneOf","string","bool","oneOfType","array","number","any","PageContainer","props","Container","as","Row","className","Col","xs","sm","md","children","Hero","fluid","h1","Home","Card","Img","variant","src","calculator","Body","Title","to","taxTable","pension","studyFund","LanguageContext","React","createContext","LanguageSelector","Consumer","value","Dropdown","onSelect","setLanguage","Toggle","language","Menu","Item","eventKey","NavigationMenu","Navbar","ref","nav","expand","sticky","exact","Brand","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Navigation","screensize","window","innerWidth","noheroStyling","heroHeight","shortlHero","innerHeight","addEventListener","scrollY","current","classList","add","remove","createRef","this","Component","Footer","ConditionalWrapper","condition","wrapper","camelToKebab","split","join","toLowerCase","InputWrapper","label","name","horizontal","labelColumns","type","horizontalForm","undefined","arrayToLiteral","e","reduce","i","match","inputColumns","map","num","replace","Form","Group","controlId","Label","column","InputSelect","startIndex","dataSource","dataKey","handleChange","controlled","required","error","placeholder","defaultValue","ariaHelp","Select","onChange","aria-describedby","disabled","key","Control","Feedback","PayrollTaxYearBtn","yearLabelColumns","columnSize","taxData","keypadDisplay","InputField","symbol","min","max","step","help","controls","pattern","inputMode","parseFloat","appendSymbol","aria","ariaError","ariaSymbol","InputGroup","hasValidation","Text","muted","isZeroOrGreater","val","NetPayIncome","stateData","baseIncome","creditPoints","employmentType","formSize","InputRadio","state","btnValue","btnLabel","inline","helpInput","helpCondition","btnId","Check","checked","pensionMinCalc","taxYearIndex","income","eoy","averageSalaryMonth","bituachLeumi","averageSalary","averageSalaryHalf","legalMin","selfEmployed","reducedRate","fullRate","employeeMin","employee","NetPayContributions","pensionOption","pensionType","pensionAmount","studyFundType","studyFundAmount","pensionMin","toFixed","pensionMinPecrcent","NetPayAllowances","travelAllowance","foodAllowance","otherAllowance","NetPayIncentives","annualBonus","commission","overtime","NetPayForm","noValidate","validated","onSubmit","handleSubmit","Button","incomeTaxCalc","taxableIncome","credits","employment","taxBands","Object","keys","incomeTax","hasBonus","calculateTax","taxDue","forEach","taxBand","rate","minimum","annualTax","annualWithBonus","bonusTax","finalAnnual","finalMonthly","annualIncomeTax","bituachLeumiCalc","insuranceType","prisa","incomes","push","bonus","taxes","months","bandAdjustment","minProrata","maxProrata","basicTax","taxOnBonus","prisaTax","month","annual","incomeTaxBandsCalc","monthlyTax","isExptionalMonth","taxAndBand","tax","exptionalMonth","counter","fullBands","dividedBands","Math","round","bandLimit","Infinity","bands","exptionalBands","monthlyBandPayments","annualBandPayments","nationalInsuranceSelfEmp","profit","selfEmployedNationalInsuranceDiscount","nationalInsurance","reduced","band1","band2","full","decimal","thresholdMultiplier","deductible","pensionContributionCalc","option","amount","monthTotal","eoyTotal","length","filter","opt","pensionReliefCalc","pensionContribution","prorata","taxRelief","taxDeductableLimit","taxCreditLimit","taxCreditRate","eligibleIncome","ceiling","beneficiaryTrack","beneficiaryContribution","beneficiaryFellow","maxDeductableIncome","maxCreditIncome","maxDeductableCeiling","maxCreditCeiling","incomeExceedsCeiling","maxDeductableIncomeTier1","maxCreditIncomeTier1","maxDeductableIncomeTier2","maxCreditIncomeTier2","maxDeductable","maxCredit","incomeLimitByTrack","tier","deductable","credit","totalDeductible","totalCredit","deductableCalc","contribution","deductableIncomeLimit","creditIncomeLimit","taxCreditContribution","creditCalc","tier1","remainingContribution","tier2","beneficiaryTiers","pensionTaxDeductible","pensionTaxCredit","studyFundCalc","studyFundTaxAllowance","options","studyFundContribution","studyFundTaxDeductible","studyFundAllowances","maxCeilingCalc","maxCeiling","profitCeiling","formatCurrency","country","decimalPoint","currency","Intl","NumberFormat","style","maximumFractionDigits","format","TableBreakdownRows","rowHeader","annualTotal","monthBreakdown","annualBreakdown","active","handleClick","hasTax","monthColumn","aria-pressed","onClick","display","monthlyBand","values","isAnnual","TableBreakdown","event","showBreakdown","target","ariaPressed","setState","InfoCards","body","close","border","Header","CloseButton","InfoCard","NetPayResultsEmployee","showResultsTable","allowance","pensionableIncome","paycheckGross","annualNationalInsurance","healthInsurance","annualHealthInsurance","creditPointsTaxCredit","creditPoint","percentLimit","shekelLimit","shekelPercent","scrollPoint","Table","striped","bordered","NetPayResultsSelfEmployed","pensionReliefCalcSelfEmp","bituachLeumiDeductible","incomeTaxTaxableIncome","scrollToRef","reference","scrollIntoView","behavior","NetPayCalculator","currentTarget","checkValidity","setTimeout","preventDefault","stopPropagation","prevProps","NetPay","s","toUpperCase","EndOfYearRevenue","expenses","formIndex","EndOfYearPension","fiscalPeriod","EndOfYearStudyFund","studyFundOption","EndOfYearForm","ButtonGroup","period","ToggleButton","forms","fullWidth","paddingBottom","EndOfYearResults","total","filteredArray","Boolean","previousValue","currentValue","totalIncome","totalExpenses","totalProfit","EndOfYearCalculator","stateIndex","parseInt","stateName","updateArray","stateID","changedValue","isNaN","newValue","profitValue","prevState","indexes","Array","fill","EndOfYear","TaxBandRates","TaxBandsTable","TaxBands","CreditPointsTableValues","displayItems","allItems","displayYears","year","taxYear","CreditPointsTableShowMore","CreditPointsTable","items","totalItems","CreditPoints","href","rel","currentYearIndex","currentYear","SelfEmployedPensionDeposit","averageWage","reducedMax","fullMax","SelfEmployedPensionDepositExamples","averageWageHalf","SelfEmployedPensionTaxRelief","maxContribution","beneficiaryPayment","recognisedExpense","taxCredit","SelfEmployedPensionTaxReliefExamples","tierLimit","eligibleDeductable","eligibleCredit","currentYearData","SelfEmployedPension","EmployeePensionDeposit","latestPensionData","employer","severance","employerMax","severanceMax","EmployeePension","pensionData","SelfEmployedStudyFundDeposit","capitalGainsLimit","maxDeposit","SelfEmployedStudyExamples","exmpleAboveCeiling","exmpleBelowCeiling","exampleBelowMaxDeposit","SelfEmployedStudyFund","EmployeeStudyFundDeposit","employeeRate","employerRate","EmployeeStudyFundExamples","maxEmployeeDeposit","maxEmployerDeposit","exampleBelowMaxDepositEmployee","exampleBelowMaxDepositEmployer","EmployeeStudyFund","App","getLanguage","curentLanguage","localStorage","getItem","isoCode","setItem","basename","Provider","path","component","render","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f654c16f.chunk.js","sourcesContent":["module.exports = {\n\tinvalidNum: 'Enter a valid number (Up to 2 decimal places).',\n\tinvalidPercent: 'Enter a valid percentage (Up to 2 decimal places).'\n};\n","import {\n\tfunc,\n\tstring,\n\toneOf,\n\tarray,\n\toneOfType,\n\tnumber,\n\tbool,\n\tobject,\n\tshape,\n\tany\n} from 'prop-types';\n\nexport const globalProps = {\n\tshape,\n\thandleSubmit: func.isRequired,\n\thandleChange: func.isRequired,\n\thandleClick: func.isRequired,\n\tstateData: object.isRequired,\n\temploymentType: oneOf(['employee', 'selfEmployed']).isRequired,\n\temploymentTypeOptional: oneOf(['employee', 'selfEmployed']),\n\tlanguage: string.isRequired,\n\tdisplay: bool.isRequired,\n\tchildren: oneOfType([array, object]).isRequired,\n\tscrollPoint: object.isRequired,\n\tshowResultsTable: bool.isRequired,\n\tdisplayItems: number.isRequired,\n\trate: number.isRequired,\n\tactive: bool.isRequired,\n\tcurrentYear: number.isRequired\n};\n\nexport const payrollProps = {\n\ttaxData: array.isRequired,\n\ttaxYearIndex: oneOfType([string, number]).isRequired,\n\tbaseIncome: oneOfType([string, number]).isRequired,\n\tcreditPoints: oneOfType([string, number, array]).isRequired,\n\tpensionOption: oneOfType([string, array]).isRequired,\n\tpensionType: oneOfType([string, array]).isRequired,\n\tpensionAmount: oneOfType([string, number, array]).isRequired,\n\tstudyFundType: oneOfType([string, array]).isRequired,\n\tstudyFundAmount: oneOfType([string, number, array]).isRequired,\n\ttravelAllowance: oneOfType([string, number]).isRequired,\n\tfoodAllowance: oneOfType([string, number]).isRequired,\n\totherAllowance: oneOfType([string, number]).isRequired,\n\tannualBonus: oneOfType([string, number]).isRequired,\n\tcommission: oneOfType([string, number]).isRequired,\n\tovertime: oneOfType([string, number]).isRequired,\n\tfiscalPeriod: string.isRequired\n};\n\nexport const panelProps = {\n\ttype: string.isRequired,\n\ttitle: string.isRequired,\n\ttext: string.isRequired\n};\n\nexport const cardProps = {\n\ttype: string.isRequired,\n\ttitle: string.isRequired,\n\ttext: string.isRequired,\n\tbody: object.isRequired,\n\tclose: bool\n};\n\nexport const formProps = {\n\tformSize: array.isRequired,\n\tlabel: string.isRequired,\n\tname: string.isRequired,\n\tvalue: oneOfType([string, number]).isRequired,\n\tsymbol: string,\n\tmin: number,\n\tmax: number,\n\tstep: number,\n\thorizontal: bool,\n\tlabelColumns: array.isRequired,\n\trequired: bool.isRequired,\n\terror: string.isRequired,\n\thelp: string,\n\thelpInput: string,\n\thelpCondition: bool,\n\tinline: bool,\n\tbtnValue: array.isRequired,\n\tbtnLabel: array.isRequired,\n\tdisabled: array,\n\tstate: any.isRequired,\n\tdataSource: array.isRequired,\n\tdataKey: string.isRequired,\n\tcontrolled: bool,\n\ttype: string,\n\tformIndex: number.isRequired,\n\tvalidated: bool.isRequired,\n\tyearLabelColumns: array,\n\tstartIndex: function (props, propName, componentName) {\n\t\tif (props['controlled'] === true && props[propName] === undefined) {\n\t\t\treturn new Error(`${propName} supplied to ${componentName} is undefined. Validation failed.`);\n\t\t}\n\t}\n};\n\nexport const heroProps = {\n\th1: string.isRequired\n};\n\nexport const breakdownProps = {\n\trowHeader: string.isRequired,\n\tmonthTotal: function (props, propName, componentName) {\n\t\tif (props['eoy'] === undefined && props[propName] === undefined) {\n\t\t\treturn new Error(`${propName} supplied to ${componentName} is undefined. Validation failed.`);\n\t\t}\n\t},\n\tannualTotal: number,\n\tmonthBreakdown: array.isRequired,\n\tannualBreakdown: array.isRequired,\n\teoy: bool\n};\n\nexport const pensionProps = {\n\tpensionData: array.isRequired,\n\tlatestPensionData: object.isRequired,\n\taverageWage: number.isRequired,\n\taverageWageHalf: number.isRequired,\n\treducedRate: number.isRequired,\n\tfullRate: number.isRequired,\n\treducedMax: number.isRequired,\n\tfullMax: number.isRequired,\n\ttaxDeductableLimit: number.isRequired,\n\ttaxCreditLimit: number.isRequired,\n\teligibleIncome: number.isRequired,\n\tceiling: number.isRequired,\n\tmaxContribution: number.isRequired,\n\tbeneficiaryPayment: number.isRequired,\n\trecognisedExpense: number.isRequired,\n\ttaxCredit: number.isRequired,\n\ttaxCreditRate: number.isRequired,\n\ttierLimit: number.isRequired\n};\n\nexport const studyProps = {\n\tceiling: number.isRequired,\n\trate: number.isRequired,\n\tcapitalGainsLimit: number.isRequired,\n\tmaxDeposit: number.isRequired,\n\temployeeRate: number.isRequired,\n\temployerRate: number.isRequired\n};\n","import React from 'react';\nimport { globalProps } from '../../prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction PageContainer(props) {\n\treturn (\n\t\t<Container as=\"main\">\n\t\t\t<Row className=\"justify-content-center\">\n\t\t\t\t<Col xs={12} sm={10} md={8}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nPageContainer.propTypes = {\n\tchildren: globalProps.children\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { heroProps } from '../../prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport '../hero/hero.scss';\n\nfunction Hero(props) {\n\treturn (\n\t\t<Container fluid={true}>\n\t\t\t<Row>\n\t\t\t\t<Col xs={12} className=\"hero\">\n\t\t\t\t\t<h1>{props.h1}</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nHero.propTypes = {\n\th1: heroProps.h1\n};\n\nexport default Hero;\n","import React from 'react';\nimport './home.scss';\nimport { Link } from 'react-router-dom';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport Card from 'react-bootstrap/Card';\nimport calculator from '../../images/cards/iphone-calulator.jpg';\nimport taxTable from '../../images/cards/shekel-money-bag.jpg';\nimport pension from '../../images/cards/hour-glass-coins.jpeg';\nimport studyFund from '../../images/cards/seedling-coins.jpg';\n\nfunction Home() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Israel Tax Information' />\n\t\t\t<PageContainer>\n\t\t\t\t<section className='home-cards plain-links flush-list'>\n\t\t\t\t\t<h2 className='visually-hidden'>Website Categories</h2>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={calculator} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Calculators</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/employee/net-pay-calculator'>Employee Net Pay</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/net-pay-calculator'>Self-employed Net Pay</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/end-of-year-calculator'>Self-employed End of Year</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={taxTable} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Tax Rate Tables</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/tax-rates/income-tax'>Income Tax</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/tax-rates/credit-points'>Credit Points</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={pension} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Pensions</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/employee/pension'>Workplace Pension</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/pension'>Self-employed Pension</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={studyFund} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Study Funds</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/employee/study-fund'>Employee Study Fund</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/study-fund'>Self-employed Study Fund</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</section>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\n\nconst LanguageContext = React.createContext();\n\nexport default LanguageContext;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './language-selector.scss';\nimport LanguageContext from '../../../contexts/LanguageContext';\n\nfunction LanguageSelector() {\n\treturn (\n\t\t<LanguageContext.Consumer>\n\t\t\t{value => (\n\t\t\t\t<Dropdown onSelect={value.setLanguage} className=\"language-selector\">\n\t\t\t\t\t<Dropdown.Toggle as=\"div\" className={`flag-${value.language}`}>\n\t\t\t\t\t\t&nbsp;<span className=\"visually-hidden\">Select a language</span>\n\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"en\" className=\"flag-en\">\n\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"za\" className=\"flag-za\">\n\t\t\t\t\t\t\tSouth African\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t</Dropdown>\n\t\t\t)}\n\t\t</LanguageContext.Consumer>\n\t);\n}\n\nexport default LanguageSelector;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport LanguageSelector from '../navbar/language-selector';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nfunction NavigationMenu(props) {\n\treturn (\n\t\t<Navbar ref={props.nav} expand='lg' sticky='top'>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer exact to='/'>\n\t\t\t\t\t<Navbar.Brand>IsraelTax</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<LanguageSelector />\n\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\n\t\t\t\t\t<Nav className='mr-auto'>\n\t\t\t\t\t\t<LinkContainer exact to='/'>\n\t\t\t\t\t\t\t<Nav.Link>Home</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<NavDropdown title='Employee'>\n\t\t\t\t\t\t\t<LinkContainer to='/employee/net-pay-calculator'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Net Pay Calculator</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/employee/pension'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Pension</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/employee/study-fund'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Study Fund</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<NavDropdown title='Self-employed'>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/net-pay-calculator'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Net Pay Calculator</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/pension'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Pension</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/study-fund'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Study Fund</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/end-of-year-calculator'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>End of Year Calculator</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<NavDropdown title='Tax Rates & Bands'>\n\t\t\t\t\t\t\t<LinkContainer to='/tax-rates/income-tax'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Income Tax</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/tax-rates/credit-points'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Credit Points</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t);\n}\n\nNavigationMenu.propTypes = {\n\tnav: object.isRequired\n};\n\nexport default NavigationMenu;\n","import React, { Component } from 'react';\nimport './navbar.scss';\nimport NavigationMenu from './NavbarMenus';\n\nclass Navigation extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.nav = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.noheroStyling();\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.noheroStyling();\n\t\t});\n\t}\n\n\tscreensize = () => {\n\t\tconst view = window.innerWidth;\n\t\treturn view < 1200 ? true : false;\n\t};\n\n\tnoheroStyling = () => {\n\t\tconst shortlHero = this.screensize();\n\t\tlet heroHeight;\n\n\t\theroHeight = shortlHero ? window.innerHeight * 0.25 : window.innerHeight * 0.35;\n\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tlet fromTop = window.scrollY;\n\n\t\t\tfromTop >= heroHeight\n\t\t\t\t? this.nav.current.classList.add('navbar--nohero')\n\t\t\t\t: this.nav.current.classList.remove('navbar--nohero');\n\t\t});\n\t};\n\n\trender() {\n\t\treturn <NavigationMenu nav={this.nav} />;\n\t}\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './footer.scss';\n\nfunction Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<Container fluid={true} className='footer-inner container'>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<p>The information on this site is intended as a guide only.</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAll monthly tax calculators presume your income is the same each month and that you\n\t\t\t\t\t\t\thaven't reached retirement age.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;\n","const ConditionalWrapper = ({ condition, wrapper, children }) =>\n\tcondition ? wrapper(children) : children;\n\nexport default ConditionalWrapper;\n","export function camelToKebab(string) {\n\treturn string\n\t\t.split(/(?=[A-Z])/)\n\t\t.join('-')\n\t\t.toLowerCase();\n}\n\nexport function kebabToCamel(string) {\n\treturn string.replace(/-./g, s => s.toUpperCase()[1]);\n}\n\nexport function capitaliseFirst(string) {\n\treturn string.replace(/^[a-z]/, s => s.toUpperCase());\n}\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport ConditionalWrapper from '../../utils/conditionalWrapper';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nfunction InputWrapper(props) {\n\tconst { label, name, horizontal, labelColumns, type } = props;\n\tconst radio = {\n\t\tas: 'legend' //workaround as ternary doesn't work with as\n\t};\n\tconst horizontalForm = horizontal === undefined ? true : horizontal;\n\tconst id = camelToKebab(name);\n\t//Processes colum size attributes passed as xx=# in an array and returns as literal\n\tconst arrayToLiteral = e => {\n\t\treturn [...e].reduce(\n\t\t\t(array, i) => ({ ...array, [i.match(/.*(?==)/)]: i.match(/[^=]*$/)[0] }),\n\t\t\t{}\n\t\t);\n\t};\n\tconst inputColumns = labelColumns.map(e => {\n\t\tconst num = /\\d+/;\n\t\treturn e.replace(num, 12 - e.match(num));\n\t});\n\n\treturn (\n\t\t<Form.Group\n\t\t\tclassName='mb-3'\n\t\t\tas={horizontalForm ? Row : Col}\n\t\t\t{...(!horizontalForm && arrayToLiteral(labelColumns))}\n\t\t\tcontrolId={id}\n\t\t>\n\t\t\t<ConditionalWrapper\n\t\t\t\tcondition={!horizontalForm && type === 'radio'}\n\t\t\t\twrapper={children => <fieldset>{children}</fieldset>}\n\t\t\t>\n\t\t\t\t<Form.Label\n\t\t\t\t\tcolumn={horizontalForm ? true : false}\n\t\t\t\t\t{...(horizontalForm && arrayToLiteral(labelColumns))}\n\t\t\t\t\t{...(type === 'radio' && radio)}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Form.Label>\n\t\t\t\t<ConditionalWrapper\n\t\t\t\t\tcondition={horizontalForm}\n\t\t\t\t\twrapper={children => <Col {...arrayToLiteral(inputColumns)}>{children}</Col>}\n\t\t\t\t>\n\t\t\t\t\t{props.children}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t</ConditionalWrapper>\n\t\t</Form.Group>\n\t);\n}\n\nInputWrapper.propTypes = {\n\tlabel: formProps.label,\n\tname: formProps.name,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\ttype: formProps.type,\n\tchildren: globalProps.children\n};\n\nexport default InputWrapper;\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputWrapper from './InputWrapper';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nfunction InputSelect(props) {\n\tconst {\n\t\tlabel,\n\t\tname,\n\t\tstartIndex,\n\t\tdataSource,\n\t\tdataKey,\n\t\thorizontal,\n\t\tlabelColumns,\n\t\thandleChange,\n\t\tcontrolled,\n\t\trequired,\n\t\terror\n\t} = props;\n\tconst placeholder = controlled ? { value: startIndex } : { defaultValue: '' };\n\tconst ariaHelp = `${camelToKebab(name)}-help`;\n\n\treturn (\n\t\t<InputWrapper name={name} label={label} labelColumns={labelColumns} horizontal={horizontal}>\n\t\t\t<Form.Select\n\t\t\t\tname={name}\n\t\t\t\t{...placeholder}\n\t\t\t\tonChange={handleChange}\n\t\t\t\trequired={required}\n\t\t\t\taria-describedby={ariaHelp}\n\t\t\t>\n\t\t\t\t<option disabled value=''>\n\t\t\t\t\tSelect\n\t\t\t\t</option>\n\t\t\t\t{dataSource.map((e, i) => (\n\t\t\t\t\t<option key={i} value={i}>\n\t\t\t\t\t\t{e[dataKey]}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</Form.Select>\n\t\t\t<Form.Control.Feedback type='invalid' id={ariaHelp}>\n\t\t\t\t{error}\n\t\t\t</Form.Control.Feedback>\n\t\t</InputWrapper>\n\t);\n}\n\nInputSelect.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlabel: formProps.label,\n\tname: formProps.name,\n\tstartIndex: formProps.startIndex,\n\tdataSource: formProps.dataSource,\n\tdataKey: formProps.dataKey,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\tcontrolled: formProps.controlled,\n\trequired: formProps.required,\n\terror: formProps.error\n};\n\nexport default InputSelect;\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport InputSelect from '../form-inputs/InputSelect';\nimport taxData from '../../data/payroll.json';\n\nfunction PayrollTaxYearBtn(props) {\n\tconst { controlled, startIndex, yearLabelColumns, horizontal, handleChange } = props;\n\tconst columnSize = yearLabelColumns === undefined ? ['xs=auto'] : yearLabelColumns;\n\n\treturn (\n\t\t<InputSelect\n\t\t\tlabel='Tax year'\n\t\t\tname='taxYearIndex'\n\t\t\t// dataSource={controlled ? taxData : [...taxData].reverse()}\n\t\t\tdataSource={taxData}\n\t\t\tdataKey='taxYear'\n\t\t\tcontrolled={controlled}\n\t\t\tstartIndex={startIndex}\n\t\t\tlabelColumns={columnSize}\n\t\t\thorizontal={horizontal}\n\t\t\thandleChange={handleChange}\n\t\t\trequired={true}\n\t\t\terror='Select a tax year.'\n\t\t/>\n\t);\n}\n\nPayrollTaxYearBtn.propTypes = {\n\tcontrolled: formProps.controlled,\n\tstartIndex: formProps.startIndex,\n\tyearLabelColumns: formProps.yearLabelColumns,\n\thorizontal: formProps.horizontal,\n\thandleChange: globalProps.handleChange\n};\n\nexport default PayrollTaxYearBtn;\n","export function keypadDisplay(language) {\n\tif (language === 'za') {\n\t\treturn '';\n\t} else {\n\t\treturn 'decimal';\n\t}\n}\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport ConditionalWrapper from '../../utils/conditionalWrapper';\nimport InputWrapper from './InputWrapper';\nimport { keypadDisplay } from '../../utils/keypadDisplay';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nfunction InputField(props) {\n\tconst {\n\t\tlanguage,\n\t\tlabel,\n\t\tname,\n\t\tvalue,\n\t\tsymbol,\n\t\tmin,\n\t\tmax,\n\t\tstep,\n\t\thorizontal,\n\t\tlabelColumns,\n\t\thandleChange,\n\t\thelp,\n\t\trequired,\n\t\terror\n\t} = props;\n\tconst controls = {\n\t\ttype: 'number',\n\t\tpattern: '[0-9]',\n\t\tinputMode: keypadDisplay(language),\n\t\tmin: min === undefined ? 0 : parseFloat(min),\n\t\tmax: max === undefined ? undefined : max,\n\t\tstep: step === undefined ? 0.01 : step\n\t};\n\tconst appendSymbol = symbol === undefined ? false : true;\n\tconst aria = camelToKebab(name);\n\tconst ariaError = `${aria}-error`;\n\tconst ariaSymbol = appendSymbol ? `${aria}-symbol` : '';\n\n\treturn (\n\t\t<InputWrapper name={name} label={label} labelColumns={labelColumns} horizontal={horizontal}>\n\t\t\t<ConditionalWrapper\n\t\t\t\tcondition={appendSymbol}\n\t\t\t\twrapper={children => <InputGroup hasValidation>{children}</InputGroup>}\n\t\t\t>\n\t\t\t\t<Form.Control\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\t{...controls}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired={required}\n\t\t\t\t\taria-describedby={`${ariaError} ${ariaSymbol}`}\n\t\t\t\t/>\n\t\t\t\t{appendSymbol && <InputGroup.Text id={ariaSymbol}>{symbol}</InputGroup.Text>}\n\t\t\t\t{help !== undefined && (\n\t\t\t\t\t<Form.Text id='passwordHelpBlock' muted>\n\t\t\t\t\t\t{help}\n\t\t\t\t\t</Form.Text>\n\t\t\t\t)}\n\t\t\t\t<Form.Control.Feedback type='invalid' id={ariaError}>\n\t\t\t\t\t{error}\n\t\t\t\t</Form.Control.Feedback>\n\t\t\t</ConditionalWrapper>\n\t\t</InputWrapper>\n\t);\n}\n\nInputField.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tlabel: formProps.label,\n\tname: formProps.name,\n\tvalue: formProps.value,\n\tsymbol: formProps.symbol,\n\tmin: formProps.min,\n\tmax: formProps.max,\n\tstep: formProps.step,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\trequired: formProps.required,\n\terror: formProps.error,\n\thelp: formProps.help\n};\n\nexport default InputField;\n","export function isZeroOrGreater(val) {\n\treturn val === 0 || val > 0 ? true : false;\n}\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport PayrollTaxYearBtn from '../../../components/buttons/PayrollYear';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction NetPayIncome(props) {\n\tconst { baseIncome, creditPoints } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst employmentType = props.employmentType;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Tax</Form.Label>\n\t\t\t<PayrollTaxYearBtn handleChange={handleChange} yearLabelColumns={formSize} />\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel={employmentType === 'employee' ? 'Base salary' : 'Profit'}\n\t\t\t\tname='baseIncome'\n\t\t\t\tvalue={baseIncome}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={true}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Tax credit points'\n\t\t\t\tname='creditPoints'\n\t\t\t\tvalue={creditPoints}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\tstep={0.25}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(creditPoints)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t</fieldset>\n\t);\n}\n\nNetPayIncome.propTypes = {\n\thandleChange: globalProps.handleChange,\n\temploymentType: globalProps.employmentType,\n\tlanguage: globalProps.language,\n\tstateData: globalProps.shape({\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tcreditPoints: payrollProps.creditPoints\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayIncome;\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputWrapper from './InputWrapper';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nimport ConditionalWrapper from '../../utils/conditionalWrapper';\n\nfunction InputRadio(props) {\n\tconst {\n\t\tlabel,\n\t\tname,\n\t\tstate,\n\t\tbtnValue,\n\t\tbtnLabel,\n\t\tdisabled,\n\t\tlabelColumns,\n\t\thorizontal,\n\t\tinline,\n\t\thandleChange,\n\t\thelp,\n\t\thelpInput,\n\t\thelpCondition\n\t} = props;\n\tconst id = camelToKebab(name);\n\tconst btnId = btnValue.map(e => {\n\t\treturn `${id}-${camelToKebab(e)}`;\n\t});\n\tconst ariaHelp = `${id}-help`;\n\n\treturn (\n\t\t<ConditionalWrapper\n\t\t\tcondition={horizontal || horizontal === undefined}\n\t\t\twrapper={children => <fieldset>{children}</fieldset>}\n\t\t>\n\t\t\t<InputWrapper\n\t\t\t\tname={name}\n\t\t\t\tlabel={label}\n\t\t\t\tlabelColumns={labelColumns}\n\t\t\t\thorizontal={horizontal}\n\t\t\t\ttype='radio'\n\t\t\t>\n\t\t\t\t{btnValue.map((e, i) => (\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tinline={inline === undefined ? true : inline}\n\t\t\t\t\t\tlabel={btnLabel[i]}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tvalue={e}\n\t\t\t\t\t\tdisabled={disabled === undefined ? false : disabled[i]}\n\t\t\t\t\t\tid={btnId[i]}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={state === btnValue[i]}\n\t\t\t\t\t\taria-describedby={e === helpInput ? ariaHelp : undefined}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{helpCondition || (helpCondition === undefined && help !== undefined) ? (\n\t\t\t\t\t<Form.Text className='text-muted' id={ariaHelp}>\n\t\t\t\t\t\t{help}\n\t\t\t\t\t</Form.Text>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</InputWrapper>\n\t\t</ConditionalWrapper>\n\t);\n}\n\nInputRadio.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlabel: formProps.label,\n\tname: formProps.name,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\thelp: formProps.help,\n\thelpCondition: formProps.helpCondition,\n\thelpInput: formProps.helpInput,\n\tinline: formProps.inline,\n\tbtnValue: formProps.btnValue,\n\tbtnLabel: formProps.btnLabel,\n\tdisabled: formProps.disabled,\n\tstate: formProps.state\n};\n\nexport default InputRadio;\n","export function pensionMinCalc(taxData, taxYearIndex, income, employmentType, eoy) {\n\t//Employees pay a fixed percent of monthly base salary before any extra earnings\n\t//Self employed pay different percentages on earnings above and below the national average salary mid-point\n\n\tconst averageSalaryMonth = taxData[taxYearIndex].bituachLeumi.averageSalary;\n\tconst averageSalary = eoy ? averageSalaryMonth * 12 : averageSalaryMonth;\n\tconst averageSalaryHalf = averageSalary / 2;\n\tconst { reducedRate, fullRate } = taxData[taxYearIndex].pension.legalMin.selfEmployed;\n\tconst employeeMin = taxData[taxYearIndex].pension.legalMin.employee;\n\tlet pensionLegalMin;\n\n\tif (employmentType === 'employee') {\n\t\tpensionLegalMin = income * (employeeMin / 100);\n\t} else {\n\t\tif (income >= averageSalaryHalf) {\n\t\t\tif (income >= averageSalary) {\n\t\t\t\tpensionLegalMin =\n\t\t\t\t\taverageSalaryHalf * (reducedRate / 100) + averageSalaryHalf * (fullRate / 100);\n\t\t\t} else {\n\t\t\t\tpensionLegalMin =\n\t\t\t\t\taverageSalaryHalf * (reducedRate / 100) + (income - averageSalaryHalf) * (fullRate / 100);\n\t\t\t}\n\t\t} else {\n\t\t\tpensionLegalMin = income * (reducedRate / 100);\n\t\t}\n\t}\n\n\treturn pensionLegalMin;\n}\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputRadio from '../../../components/form-inputs/InputRadio';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum, invalidPercent } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\nimport { pensionMinCalc } from '../../../utils/tax-calculators/pensionLegalMin';\n\nfunction NetPayContributions(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tpensionOption,\n\t\tpensionType,\n\t\tpensionAmount,\n\t\tstudyFundType,\n\t\tstudyFundAmount\n\t} = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst employmentType = props.employmentType;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\tconst pensionMin = pensionMinCalc(taxData, taxYearIndex, baseIncome, employmentType).toFixed(2);\n\tconst pensionMinPecrcent = ((pensionMin / baseIncome) * 100).toFixed(2);\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Contributions</Form.Label>\n\t\t\t<fieldset>\n\t\t\t\t<Form.Label as='legend'>Pension</Form.Label>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Option'\n\t\t\t\t\tname='pensionOption'\n\t\t\t\t\tstate={pensionOption}\n\t\t\t\t\tbtnLabel={['Legal minium', 'Custom']}\n\t\t\t\t\tbtnValue={['legalMin', 'custom']}\n\t\t\t\t\tdisabled={[false, baseIncome >= 1 ? false : true]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\thelp={\n\t\t\t\t\t\temploymentType === 'employee'\n\t\t\t\t\t\t\t? 'Enter a base salary to select custom.'\n\t\t\t\t\t\t\t: 'Enter profit to select custom.'\n\t\t\t\t\t}\n\t\t\t\t\thelpInput='custom'\n\t\t\t\t\thelpCondition={baseIncome < 1}\n\t\t\t\t/>\n\t\t\t\t{pensionOption === 'custom' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{employmentType === 'selfEmployed' && (\n\t\t\t\t\t\t\t<InputRadio\n\t\t\t\t\t\t\t\tlabel='Type'\n\t\t\t\t\t\t\t\tname='pensionType'\n\t\t\t\t\t\t\t\tstate={pensionType}\n\t\t\t\t\t\t\t\tbtnLabel={['Percent', 'Shekel']}\n\t\t\t\t\t\t\t\tbtnValue={['percent', 'shekel']}\n\t\t\t\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tlabel='Amount'\n\t\t\t\t\t\t\tname='pensionAmount'\n\t\t\t\t\t\t\tvalue={pensionAmount}\n\t\t\t\t\t\t\tsymbol={pensionType === 'percent' ? '%' : '₪'}\n\t\t\t\t\t\t\tmin={\n\t\t\t\t\t\t\t\tpensionType === 'percent' ? parseFloat(pensionMinPecrcent) : parseFloat(pensionMin)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmax={pensionType === 'percent' ? 100 : undefined}\n\t\t\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\tpensionType === 'percent'\n\t\t\t\t\t\t\t\t\t? `${invalidPercent} The legal minimum is ${pensionMinPecrcent}%.`\n\t\t\t\t\t\t\t\t\t: `${invalidNum} The legal minimum is ${pensionMin}₪.`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</fieldset>\n\t\t\t<fieldset>\n\t\t\t\t<Form.Label as='legend'>Study fund</Form.Label>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Type'\n\t\t\t\t\tname='studyFundType'\n\t\t\t\t\tstate={studyFundType}\n\t\t\t\t\tbtnLabel={['Percent', 'Shekel']}\n\t\t\t\t\tbtnValue={['percent', 'shekel']}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Amount'\n\t\t\t\t\tname='studyFundAmount'\n\t\t\t\t\tvalue={studyFundAmount}\n\t\t\t\t\tsymbol={studyFundType === 'percent' ? '%' : '₪'}\n\t\t\t\t\tmax={studyFundType === 'percent' ? 100 : undefined}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(studyFundAmount)}\n\t\t\t\t\terror={studyFundType === 'percent' ? `${invalidPercent}` : `${invalidNum}`}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t</fieldset>\n\t);\n}\n\nNetPayContributions.propTypes = {\n\thandleChange: globalProps.handleChange,\n\temploymentType: globalProps.employmentType,\n\tlanguage: globalProps.language,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayContributions;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction NetPayAllowances(props) {\n\tconst { travelAllowance, foodAllowance, otherAllowance } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Allowances</Form.Label>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Transport'\n\t\t\t\tname='travelAllowance'\n\t\t\t\tvalue={travelAllowance}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(travelAllowance)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='10bis / Cibus / Other Card'\n\t\t\t\tname='foodAllowance'\n\t\t\t\tvalue={foodAllowance}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(foodAllowance)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Other'\n\t\t\t\tname='otherAllowance'\n\t\t\t\tvalue={otherAllowance}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(otherAllowance)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t</fieldset>\n\t);\n}\n\nNetPayAllowances.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tstateData: globalProps.shape({\n\t\ttravelAllowance: payrollProps.travelAllowance,\n\t\tfoodAllowance: payrollProps.foodAllowance,\n\t\totherAllowance: payrollProps.otherAllowance\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayAllowances;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction NetPayIncentives(props) {\n\tconst { annualBonus, commission, overtime } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Incentives</Form.Label>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='One-time bonus or gift'\n\t\t\t\tname='annualBonus'\n\t\t\t\tvalue={annualBonus}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(annualBonus)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Commission'\n\t\t\t\tname='commission'\n\t\t\t\tvalue={commission}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(commission)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Overtime'\n\t\t\t\tname='overtime'\n\t\t\t\tvalue={overtime}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(overtime)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t</fieldset>\n\t);\n}\n\nNetPayIncentives.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tstateData: globalProps.shape({\n\t\tannualBonus: payrollProps.annualBonus,\n\t\tcommission: payrollProps.commission,\n\t\tovertime: payrollProps.overtime\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayIncentives;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../prop-types';\nimport { Form, Button } from 'react-bootstrap';\nimport NetPayIncome from './form-sections/Income';\nimport NetPayContributions from './form-sections/Contributions';\nimport NetPayAllowances from './form-sections/Allowances';\nimport NetPayIncentives from './form-sections/Incentives';\nimport LanguageContext from '../../contexts/LanguageContext';\n\nfunction NetPayForm(props) {\n\tconst { employmentType, taxData, stateData, handleChange } = props;\n\tconst formSize = ['xs=7', 'md=6'];\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Calculator</h2>\n\t\t\t<Form\n\t\t\t\tid={`${employmentType}-netpay-form`}\n\t\t\t\tnoValidate\n\t\t\t\tvalidated={stateData.validated}\n\t\t\t\tonSubmit={props.handleSubmit}\n\t\t\t\tclassName='horizontal-form'\n\t\t\t>\n\t\t\t\t<LanguageContext.Consumer>\n\t\t\t\t\t{value => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NetPayIncome\n\t\t\t\t\t\t\t\temploymentType={employmentType}\n\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<NetPayContributions\n\t\t\t\t\t\t\t\temploymentType={employmentType}\n\t\t\t\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{employmentType === 'employee' && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<NetPayAllowances\n\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<NetPayIncentives\n\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</LanguageContext.Consumer>\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tCalculate\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</section>\n\t);\n}\n\nNetPayForm.propTypes = {\n\thandleSubmit: globalProps.handleSubmit,\n\thandleChange: globalProps.handleChange,\n\ttaxData: payrollProps.taxData,\n\temploymentType: globalProps.employmentType,\n\tstateData: globalProps.shape({\n\t\tvalidated: formProps.validated\n\t})\n};\n\nexport default NetPayForm;\n","export function incomeTaxCalc(\n\ttaxData,\n\ttaxYearIndex,\n\ttaxableIncome,\n\tannualBonus,\n\tcredits,\n\temployment,\n\teoy\n) {\n\t//Income tax uses annual tax bands\n\t//Bonus calculated separatly to ensure tax that month isn't multipled by 12 for yearly total\n\n\tconst taxBands = Object.keys(taxData[taxYearIndex].incomeTax);\n\tconst hasBonus = annualBonus > 0;\n\tannualBonus = hasBonus ? annualBonus : 0;\n\tconst calculateTax = income => {\n\t\tlet taxDue = 0;\n\n\t\ttaxBands.forEach(taxBand => {\n\t\t\tconst { rate, min: minimum, max } = taxData[taxYearIndex].incomeTax[taxBand];\n\t\t\tconst bandAdjustment = minimum === 0 ? 0 : 1;\n\t\t\tconst min = minimum - bandAdjustment;\n\n\t\t\tif (income >= min) {\n\t\t\t\tif (max === undefined) {\n\t\t\t\t\tconst tax = (income - min) * (rate / 100);\n\t\t\t\t\ttaxDue += tax;\n\t\t\t\t} else if (income >= max) {\n\t\t\t\t\tconst tax = (max - min) * (rate / 100);\n\t\t\t\t\ttaxDue += tax;\n\t\t\t\t} else {\n\t\t\t\t\tconst tax = (income - min) * (rate / 100);\n\t\t\t\t\ttaxDue += tax;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn taxDue;\n\t};\n\n\tconst annualTax = calculateTax(eoy ? taxableIncome : (taxableIncome - annualBonus) * 12);\n\tconst annualWithBonus =\n\t\thasBonus && calculateTax((taxableIncome - annualBonus) * 12 + annualBonus);\n\tconst bonusTax = hasBonus ? annualWithBonus - annualTax : 0;\n\tconst finalAnnual = annualTax + bonusTax - credits * (eoy ? 1 : 12);\n\tconst finalMonthly = annualTax / 12 + bonusTax - credits;\n\n\treturn {\n\t\tincomeTax: finalMonthly > 0 ? finalMonthly : 0,\n\t\tannualIncomeTax: finalAnnual > 0 ? finalAnnual : 0\n\t};\n}\n","export function bituachLeumiCalc(\n\ttaxData,\n\ttaxYearIndex,\n\temploymentType,\n\ttaxableIncome,\n\tinsuranceType,\n\tannualBonus,\n\tprisa,\n\teoy\n) {\n\t//Batuach Leumi uses monthly tax bands\n\t//Bonus calculated separatly to ensure tax that month isn't multipled by 12 for yearly total\n\t//If a payment's received over x percent of the usually monthly amount, prisa splits it over the last 12 months to ensure tax is paid (doesn't take you over BL tax-free limit), but deducted from current month\n\n\tlet incomes =\n\t\temploymentType === 'selfEmployed'\n\t\t\t? [taxableIncome]\n\t\t\t: [taxableIncome - annualBonus, taxableIncome];\n\tprisa && incomes.push(((taxableIncome - annualBonus) * 12 + annualBonus) / 12);\n\tconst bonus = annualBonus > 0 && true;\n\tlet taxes = [];\n\n\tincomes.forEach(income => {\n\t\tlet taxDue = 0;\n\t\tconst taxBands = Object.keys(taxData[taxYearIndex].bituachLeumi[insuranceType]);\n\t\tconst months = eoy ? 12 : 1;\n\n\t\ttaxBands.forEach(taxBand => {\n\t\t\tconst { min, max } = taxData[taxYearIndex].bituachLeumi[insuranceType][taxBand];\n\t\t\tconst minProrata = min * months;\n\t\t\tconst maxProrata = max * months;\n\t\t\tconst rate = taxData[taxYearIndex].bituachLeumi[insuranceType][taxBand].rate[employmentType];\n\t\t\tlet bandAdjustment;\n\t\t\t//Adjust as min band is inclusive and is lost during x - min\n\t\t\tminProrata === 0 ? (bandAdjustment = 0) : (bandAdjustment = 1);\n\n\t\t\tif (income >= minProrata) {\n\t\t\t\tif (income >= maxProrata) {\n\t\t\t\t\ttaxDue += (maxProrata - minProrata + bandAdjustment) * (rate / 100);\n\t\t\t\t} else {\n\t\t\t\t\ttaxDue += (income - minProrata + bandAdjustment) * (rate / 100);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttaxes.push(taxDue);\n\t});\n\n\tconst basicTax = taxes[0];\n\tconst taxOnBonus = bonus ? taxes[1] - taxes[0] : 0;\n\tconst prisaTax = prisa ? taxes[2] : 0;\n\n\tif (prisa) {\n\t\treturn {\n\t\t\tmonth: basicTax + (prisaTax - basicTax) * 12,\n\t\t\tannual: prisaTax * 12\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tmonth: basicTax + taxOnBonus,\n\t\t\tannual: basicTax * 12 + taxOnBonus\n\t\t};\n\t}\n}\n","export function incomeTaxBandsCalc(taxData, taxYearIndex, annualTax, monthlyTax) {\n\t//An expetional month is where payment's received for that month only, so the annual tax can't be evenly divided\n\tconst isExptionalMonth = monthlyTax * 12 > annualTax;\n\n\tconst taxAndBand = (tax, exptionalMonth) => {\n\t\tconst taxBands = Object.keys(taxData[taxYearIndex].incomeTax);\n\t\tlet counter = tax;\n\t\tlet fullBands = [];\n\t\tlet dividedBands = [];\n\n\t\ttaxBands.forEach(taxBand => {\n\t\t\tconst { rate, min, max } = taxData[taxYearIndex].incomeTax[taxBand];\n\t\t\tconst bandAdjustment = min === 0 ? 0 : 1;\n\t\t\tconst minimum = exptionalMonth ? Math.round(min / 12) : min - bandAdjustment;\n\t\t\tconst maximum = max === undefined ? Infinity : exptionalMonth ? max / 12 : max;\n\t\t\tconst bandLimit = (maximum - minimum) * (rate / 100);\n\n\t\t\tif (counter > 0) {\n\t\t\t\tif (counter >= bandLimit) {\n\t\t\t\t\tfullBands.push({ [rate]: bandLimit });\n\t\t\t\t\tdividedBands.push({ [rate]: bandLimit / 12 });\n\t\t\t\t\tcounter -= bandLimit;\n\t\t\t\t} else if (counter < bandLimit) {\n\t\t\t\t\tfullBands.push({ [rate]: counter });\n\t\t\t\t\tdividedBands.push({ [rate]: counter / 12 });\n\t\t\t\t\tcounter -= counter;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn [fullBands, dividedBands];\n\t};\n\n\tconst bands = taxAndBand(annualTax);\n\tconst exptionalBands = isExptionalMonth && taxAndBand(monthlyTax, isExptionalMonth);\n\n\treturn {\n\t\tmonthlyBandPayments: isExptionalMonth ? exptionalBands[0] : bands[1],\n\t\tannualBandPayments: bands[0]\n\t};\n}\n","import { formatNumberPlain } from '../formatNumber';\n\nexport function nationalInsuranceSelfEmp(taxData, taxYearIndex, profit, eoy) {\n\t//Only a percentage of national insurance is tax deductible, but the below (from Bituach Leumi's site) calculates total taxable amount. National and health insurance is then calculated using the standard formula\n\n\tconst months = eoy ? 12 : 1;\n\tconst {\n\t\taverageSalary,\n\t\tselfEmployedNationalInsuranceDiscount,\n\t\tnationalInsurance: {\n\t\t\tband1: {\n\t\t\t\trate: { selfEmployed: reduced }\n\t\t\t},\n\t\t\tband2: {\n\t\t\t\trate: { selfEmployed: full },\n\t\t\t\tmin,\n\t\t\t\tmax\n\t\t\t}\n\t\t}\n\t} = taxData[taxYearIndex].bituachLeumi;\n\tconst minProrata = min * months;\n\tconst maxProrata = max * months;\n\tprofit = profit > maxProrata ? maxProrata : profit;\n\tconst thresholdMultiplier = formatNumberPlain((min / averageSalary) * months, 1);\n\tconst reducedRate = reduced / 100;\n\tconst fullRate = full / 100;\n\tconst deductible = selfEmployedNationalInsuranceDiscount / 100;\n\tlet taxable;\n\n\tif (profit < minProrata) {\n\t\ttaxable = profit / (1 + deductible * reducedRate);\n\t} else {\n\t\ttaxable =\n\t\t\t(profit + thresholdMultiplier * averageSalary * (fullRate - reducedRate) * deductible) /\n\t\t\t(1 + deductible * fullRate);\n\t}\n\n\treturn profit - taxable;\n}\n","export function formatNumber(number, decimal) {\n\t//Thousand separator and decimal places\n\tdecimal = decimal === undefined ? 0 : decimal;\n\n\treturn number.toFixed(decimal).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport function formatNumberPlain(number, decimal) {\n\t//Decimal places and no thousand separator\n\tdecimal = decimal === undefined ? 0 : decimal;\n\n\treturn parseFloat(number.toFixed(decimal));\n}\n","export function pensionContributionCalc(income, legalMin, option, amount, type, eoy) {\n\tconst monthTotal =\n\t\toption === 'legalMin'\n\t\t\t? legalMin\n\t\t\t: option === 'custom' && type === 'shekel'\n\t\t\t? amount\n\t\t\t: income * (amount / 100);\n\tlet eoyTotal = 0;\n\n\tif (eoy) {\n\t\teoyTotal += (legalMin / option.length) * option.filter(opt => opt.match(/legalMin/)).length;\n\n\t\toption.forEach((opt, i) => {\n\t\t\tif (opt === 'custom') {\n\t\t\t\tif (type[i] === 'shekel') {\n\t\t\t\t\teoyTotal += amount[i];\n\t\t\t\t} else {\n\t\t\t\t\teoyTotal += income[i] * (amount[i] / 100);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn eoy ? eoyTotal : monthTotal;\n}\n","export function pensionReliefCalc(taxData, taxYearIndex, income, pensionContribution, eoy) {\n\t//Tax benefit available to a fixed percentage of profit up to a ceiling based. Part of that can be deducted as an expense and the remaining part a tax credit, up to ceilings. Different salary cielings and calculation methods depending on profit and contribution amounts.\n\n\t//Up to the eligible income tax relief is calculated on whole amount - above it's tiered\n\t//Tier 1 is calculated on whole amount\n\t//Beneficiary contribution, which includes a non tax benefit proportion, has to be paid before eligible for tier 2\n\n\tconst prorata = eoy ? 1 : 12;\n\tincome = eoy ? income : income * 12;\n\tpensionContribution = eoy ? pensionContribution : pensionContribution * 12;\n\tconst { taxDeductableLimit, taxCreditLimit, taxCreditRate, eligibleIncome, ceiling } =\n\t\ttaxData[taxYearIndex].pension.taxRelief.selfEmployed;\n\tconst beneficiaryTrack = income > eligibleIncome;\n\tconst beneficiaryContribution = taxData[taxYearIndex].bituachLeumi.averageSalary * 0.16 * 12;\n\tconst beneficiaryFellow = pensionContribution >= beneficiaryContribution;\n\t//Baseline limits\n\tconst maxDeductableIncome = income * (taxDeductableLimit / 100);\n\tconst maxCreditIncome = income * (taxCreditLimit / 100);\n\tconst maxDeductableEligibleIncome = eligibleIncome * (taxDeductableLimit / 100);\n\tconst maxCreditEligibleIncome = eligibleIncome * (taxCreditLimit / 100);\n\tconst maxDeductableCeiling = (ceiling * (taxDeductableLimit / 100)) / 2;\n\tconst maxCreditCeiling = (ceiling * (taxCreditLimit / 100)) / 2;\n\t//End\n\t//Beneficiary baseline limits\n\tconst incomeExceedsCeiling = income > ceiling;\n\tconst maxDeductableIncomeTier1 = maxDeductableCeiling;\n\tconst maxCreditIncomeTier1 = maxCreditCeiling;\n\tconst maxDeductableIncomeTier2 = incomeExceedsCeiling\n\t\t? maxDeductableCeiling\n\t\t: (income - ceiling / 2) * (taxDeductableLimit / 100);\n\tconst maxCreditIncomeTier2 = incomeExceedsCeiling\n\t\t? maxCreditCeiling\n\t\t: (income - ceiling / 2) * (taxCreditLimit / 100);\n\t//End\n\t//Absolute limits based on track\n\tconst maxDeductable = beneficiaryTrack ? maxDeductableCeiling : maxDeductableEligibleIncome;\n\tconst maxCredit = beneficiaryTrack ? maxCreditCeiling : maxCreditEligibleIncome;\n\t//End\n\t//Limits based on income total for track type\n\tconst incomeLimitByTrack = tier => {\n\t\tlet deductable;\n\t\tlet credit;\n\n\t\tif (tier === 1) {\n\t\t\tdeductable = maxDeductableIncomeTier1;\n\t\t\tcredit = maxCreditIncomeTier1;\n\t\t} else if (tier === 2) {\n\t\t\tdeductable = maxDeductableIncomeTier2;\n\t\t\tcredit = maxCreditIncomeTier2;\n\t\t} else {\n\t\t\tdeductable = maxDeductableIncome;\n\t\t\tcredit = maxCreditIncome;\n\t\t}\n\n\t\treturn {\n\t\t\tdeductable,\n\t\t\tcredit\n\t\t};\n\t};\n\t//End\n\tlet totalDeductible = 0;\n\tlet totalCredit = 0;\n\n\tconst creditCalc = (contribution, tier) => {\n\t\tconst { credit: creditIncomeLimit, deductable: deductableIncomeLimit } =\n\t\t\tincomeLimitByTrack(tier);\n\t\tconst taxCreditContribution = contribution - deductableIncomeLimit;\n\n\t\tif (taxCreditContribution > creditIncomeLimit) {\n\t\t\tif (creditIncomeLimit > maxCredit) {\n\t\t\t\ttotalCredit += maxCredit;\n\t\t\t} else {\n\t\t\t\ttotalCredit += creditIncomeLimit;\n\t\t\t}\n\t\t} else if (taxCreditContribution > maxCredit) {\n\t\t\ttotalCredit += maxCredit;\n\t\t} else {\n\t\t\ttotalCredit += taxCreditContribution;\n\t\t}\n\t};\n\n\tconst deductableCalc = (contribution, tier) => {\n\t\tconst { deductable: deductableIncomeLimit } = incomeLimitByTrack(tier);\n\n\t\tif (contribution > deductableIncomeLimit) {\n\t\t\tcreditCalc(contribution, tier);\n\t\t\tif (deductableIncomeLimit > maxDeductable) {\n\t\t\t\ttotalDeductible += maxDeductable;\n\t\t\t} else {\n\t\t\t\ttotalDeductible += deductableIncomeLimit;\n\t\t\t}\n\t\t} else if (contribution > maxDeductable) {\n\t\t\ttotalDeductible += maxDeductable;\n\t\t} else {\n\t\t\ttotalDeductible += contribution;\n\t\t}\n\t};\n\n\tconst beneficiaryTiers = () => {\n\t\tconst max = maxDeductable + maxCredit;\n\t\tconst tier1 = pensionContribution > max ? max : pensionContribution;\n\t\tconst noTaxBenefit = beneficiaryContribution - max;\n\t\tconst remainingContribution = pensionContribution - tier1 - noTaxBenefit;\n\t\tconst tier2 = remainingContribution > max ? max : remainingContribution;\n\n\t\tdeductableCalc(tier1, 1);\n\t\tbeneficiaryFellow && deductableCalc(tier2, 2);\n\t};\n\n\tbeneficiaryTrack ? beneficiaryTiers() : deductableCalc(pensionContribution);\n\n\treturn {\n\t\tpensionTaxDeductible: totalDeductible / prorata,\n\t\tpensionTaxCredit: (totalCredit * (taxCreditRate / 100)) / prorata\n\t};\n}\n","export function studyFundCalc(\n\tincome,\n\temployment,\n\tamount,\n\ttype,\n\tstudyFundTaxAllowance,\n\toptions,\n\teoy\n) {\n\tlet eoyTotal = 0;\n\n\tif (eoy) {\n\t\teoyTotal +=\n\t\t\t(studyFundTaxAllowance / options.length) *\n\t\t\toptions.filter(option => option.match(/maximum/)).length;\n\n\t\toptions.forEach((option, i) => {\n\t\t\tif (option === 'custom') {\n\t\t\t\tif (type[i] === 'shekel') {\n\t\t\t\t\teoyTotal += amount[i];\n\t\t\t\t} else {\n\t\t\t\t\teoyTotal += income[i] * (amount[i] / 100);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconst contribution = eoy ? eoyTotal : type === 'shekel' ? amount : income * (amount / 100);\n\n\tif (employment === 'employee') {\n\t\treturn contribution;\n\t} else {\n\t\treturn {\n\t\t\tstudyFundContribution: contribution,\n\t\t\tstudyFundTaxDeductible:\n\t\t\t\tcontribution > studyFundTaxAllowance ? studyFundTaxAllowance : contribution\n\t\t};\n\t}\n}\n","export function studyFundAllowances(taxData, taxYearIndex, profit, employment, eoy) {\n\t//Education fund is a tax deductible expense up to a ceiling for self-employed\n\t//Employees contribution is taxed, but aren't taxed on the employers contribution (tax deductible expense for them)\n\t//Different ceilings for capital gains relief\n\n\tconst { rate, ceiling } = taxData[taxYearIndex].studyFund[employment];\n\tconst maxCeilingCalc = ceiling * (rate / 100);\n\tconst maxCeiling = eoy ? maxCeilingCalc : maxCeilingCalc / 12;\n\tconst profitCeiling = profit * (rate / 100);\n\n\treturn profitCeiling > maxCeiling ? maxCeiling : profitCeiling;\n}\n","export function formatCurrency(country, number, decimal) {\n\tconst decimalPoint = decimal === undefined ? 2 : decimal;\n\n\tif (country === 'il') {\n\t\tvar language = 'en-IL';\n\t\tvar currency = 'ILS';\n\t}\n\treturn new Intl.NumberFormat(language, {\n\t\tstyle: 'currency',\n\t\tcurrency: currency,\n\t\tmaximumFractionDigits: decimalPoint\n\t}).format(number);\n}\n","import React from 'react';\nimport { globalProps, breakdownProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction TableBreakdownRows(props) {\n\tconst {\n\t\trowHeader,\n\t\tmonthTotal,\n\t\tannualTotal,\n\t\tmonthBreakdown,\n\t\tannualBreakdown,\n\t\tactive,\n\t\thandleClick,\n\t\teoy\n\t} = props;\n\tconst hasTax = annualTotal > 0;\n\tconst monthColumn = eoy ? false : true;\n\n\treturn (\n\t\t<>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{rowHeader}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn-link btn-link--breakdown'\n\t\t\t\t\t\taria-pressed={active ? 'true' : 'false'}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\tstyle={{ display: hasTax ? 'inline-block' : 'none' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tBREAKDOWN\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t\t{monthColumn && <td>{formatCurrency('il', monthTotal)}</td>}\n\t\t\t\t<td>{formatCurrency('il', annualTotal)}</td>\n\t\t\t</tr>\n\t\t\t{active && (\n\t\t\t\t<>\n\t\t\t\t\t{monthBreakdown.map((monthlyBand, i) => {\n\t\t\t\t\t\tconst rate = Object.keys(monthlyBand);\n\t\t\t\t\t\tconst tax = Object.values(monthlyBand);\n\t\t\t\t\t\tconst isAnnual = i <= annualBreakdown.length - 1;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={i} className='breakdown-row'>\n\t\t\t\t\t\t\t\t<td>{rate}% Rate</td>\n\t\t\t\t\t\t\t\t{monthColumn && <td>{formatCurrency('il', tax)}</td>}\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', isAnnual ? annualBreakdown[i][rate] : 0)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nTableBreakdownRows.propTypes = {\n\thandleClick: globalProps.handleClick,\n\tactive: globalProps.active,\n\trowHeader: breakdownProps.rowHeader,\n\tmonthTotal: breakdownProps.monthTotal,\n\tannualTotal: breakdownProps.annualTotal,\n\tmonthBreakdown: breakdownProps.monthBreakdown,\n\tannualBreakdown: breakdownProps.annualBreakdown,\n\teoy: breakdownProps.eoy\n};\n\nexport default TableBreakdownRows;\n","import React, { Component } from 'react';\nimport { breakdownProps } from '../../prop-types';\nimport TableBreakdownRows from './BreakdownRows.js';\nimport './table-breakdown.scss';\n\nclass TableBreakdown extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactive: false\n\t\t};\n\t}\n\n\thandleClick = event => {\n\t\tconst showBreakdown = event.target.ariaPressed === 'true' ? true : false;\n\t\tthis.setState({ active: showBreakdown ? false : true });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<TableBreakdownRows\n\t\t\t\tactive={this.state.active}\n\t\t\t\trowHeader={this.props.rowHeader}\n\t\t\t\tmonthTotal={this.props.monthTotal}\n\t\t\t\tannualTotal={this.props.annualTotal}\n\t\t\t\tmonthBreakdown={this.props.monthBreakdown}\n\t\t\t\tannualBreakdown={this.props.annualBreakdown}\n\t\t\t\thandleClick={this.handleClick}\n\t\t\t\teoy={this.props.eoy}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nTableBreakdown.propTypes = {\n\trowHeader: breakdownProps.rowHeader,\n\tmonthTotal: breakdownProps.monthTotal,\n\tannualTotal: breakdownProps.annualTotal,\n\tmonthBreakdown: breakdownProps.monthBreakdown,\n\tannualBreakdown: breakdownProps.annualBreakdown,\n\teoy: breakdownProps.eoy\n};\n\nexport default TableBreakdown;\n","import React from 'react';\nimport { cardProps, globalProps } from '../../prop-types';\nimport Card from 'react-bootstrap/Card';\nimport CloseButton from 'react-bootstrap/CloseButton';\n\nfunction InfoCards(props) {\n\tconst { type, display, title, body, close, handleClick } = props;\n\treturn (\n\t\t<Card\n\t\t\tborder={type}\n\t\t\tstyle={{\n\t\t\t\tdisplay: display === true ? 'block' : 'none'\n\t\t\t}}\n\t\t>\n\t\t\t<Card.Header>\n\t\t\t\t<Card.Title className={`card-icon card-icon--${type}`}>{title}</Card.Title>\n\t\t\t\t{close && <CloseButton onClick={handleClick} />}\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<div className='card-text'>{body}</div>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n\nInfoCards.propTypes = {\n\ttype: cardProps.type,\n\ttitle: cardProps.title,\n\tbody: cardProps.body,\n\tclose: cardProps.close,\n\tdisplay: globalProps.display,\n\thandleClick: globalProps.handleClick\n};\n\nexport default InfoCards;\n","import React, { Component } from 'react';\nimport { cardProps } from '../../prop-types';\nimport InfoCards from './Card';\nimport './info-card.scss';\n\nclass InfoCard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdisplay: true\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tthis.setState({ display: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<InfoCards\n\t\t\t\tdisplay={this.state.display}\n\t\t\t\ttype={this.props.type}\n\t\t\t\ttitle={this.props.title}\n\t\t\t\tbody={this.props.body}\n\t\t\t\tclose={this.props.close}\n\t\t\t\thandleClick={this.handleClick}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nInfoCard.propTypes = {\n\ttype: cardProps.type,\n\ttitle: cardProps.title,\n\tbody: cardProps.body,\n\tclose: cardProps.close\n};\n\nexport default InfoCard;\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport {\n\tbituachLeumiCalc,\n\tpensionMinCalc,\n\tpensionContributionCalc,\n\tpensionReliefCalc,\n\tstudyFundCalc,\n\tincomeTaxCalc,\n\tincomeTaxBandsCalc\n} from '../../utils/tax-calculators';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport TableBreakdown from '../../components/table-breakdown';\nimport { foodAllowanceInfo } from './ResultsEmployeeInfo';\n\nfunction NetPayResultsEmployee(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tcreditPoints,\n\t\tpensionOption,\n\t\tpensionAmount,\n\t\tstudyFundType,\n\t\tstudyFundAmount,\n\t\ttravelAllowance,\n\t\tfoodAllowance,\n\t\totherAllowance,\n\t\tovertime,\n\t\tannualBonus,\n\t\tcommission,\n\t\tshowResultsTable\n\t} = props.stateData;\n\tconst employmentType = props.employmentType;\n\tconst studyFundContribution = studyFundCalc(\n\t\tbaseIncome,\n\t\temploymentType,\n\t\tstudyFundAmount,\n\t\tstudyFundType\n\t);\n\tlet taxableIncome = 0;\n\t[\n\t\tbaseIncome,\n\t\ttravelAllowance,\n\t\tfoodAllowance,\n\t\totherAllowance,\n\t\tannualBonus,\n\t\tcommission,\n\t\tovertime\n\t].forEach(e => {\n\t\ttaxableIncome += typeof e === 'number' && e;\n\t});\n\tconst pensionableIncome = taxableIncome - travelAllowance - annualBonus - overtime;\n\tconst paycheckGross = taxableIncome - foodAllowance;\n\tconst prisa = annualBonus > (taxableIncome - annualBonus) * 0.25;\n\tconst { month: nationalInsurance, annual: annualNationalInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome,\n\t\t'nationalInsurance',\n\t\tannualBonus,\n\t\tprisa\n\t);\n\tconst { month: healthInsurance, annual: annualHealthInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome,\n\t\t'healthInsurance',\n\t\tannualBonus,\n\t\tprisa\n\t);\n\tconst creditPointsTaxCredit = creditPoints * taxData[taxYearIndex].creditPoint;\n\tconst pensionLegalMin = pensionMinCalc(taxData, taxYearIndex, pensionableIncome, employmentType);\n\tconst pensionContribution = pensionContributionCalc(\n\t\tpensionableIncome,\n\t\tpensionLegalMin,\n\t\tpensionOption,\n\t\tpensionAmount\n\t);\n\tconst pensionTaxCredit = pensionReliefCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tpensionContribution,\n\t\tpensionableIncome\n\t);\n\tconst credits = creditPointsTaxCredit + pensionTaxCredit;\n\tconst { incomeTax, annualIncomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttaxableIncome,\n\t\tannualBonus,\n\t\tcredits,\n\t\temploymentType\n\t);\n\tconst { monthlyBandPayments, annualBandPayments } = incomeTaxBandsCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tannualIncomeTax,\n\t\tincomeTax\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{showResultsTable && (\n\t\t\t\t<section>\n\t\t\t\t\t<h2 ref={props.scrollPoint}>Results</h2>\n\t\t\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th>Month</th>\n\t\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Basic Salary</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Taxable Income</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', taxableIncome)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', (taxableIncome - annualBonus) * 12 + annualBonus)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<TableBreakdown\n\t\t\t\t\t\t\t\trowHeader={'Income Tax'}\n\t\t\t\t\t\t\t\tmonthTotal={incomeTax}\n\t\t\t\t\t\t\t\tannualTotal={annualIncomeTax}\n\t\t\t\t\t\t\t\tmonthBreakdown={monthlyBandPayments}\n\t\t\t\t\t\t\t\tannualBreakdown={annualBandPayments}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>National Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', nationalInsurance)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualNationalInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Health Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', healthInsurance)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualHealthInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pension</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{studyFundContribution > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Study Fund</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution * 12)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{annualBonus > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Bonus</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualBonus)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualBonus)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t\t\t<td>Net</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\tpaycheckGross -\n\t\t\t\t\t\t\t\t\t\t\tincomeTax -\n\t\t\t\t\t\t\t\t\t\t\tnationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\thealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\tpensionContribution -\n\t\t\t\t\t\t\t\t\t\t\tstudyFundContribution\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\t(paycheckGross - annualBonus) * 12 +\n\t\t\t\t\t\t\t\t\t\t\tannualBonus -\n\t\t\t\t\t\t\t\t\t\t\tannualIncomeTax -\n\t\t\t\t\t\t\t\t\t\t\tannualNationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\tannualHealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\t(pensionContribution + studyFundContribution) * 12\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{foodAllowance > 0 && showResultsTable === true && foodAllowanceInfo(foodAllowance)}\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nNetPayResultsEmployee.propTypes = {\n\temploymentType: globalProps.employmentType,\n\tscrollPoint: globalProps.scrollPoint,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount,\n\t\ttravelAllowance: payrollProps.travelAllowance,\n\t\tfoodAllowance: payrollProps.foodAllowance,\n\t\totherAllowance: payrollProps.otherAllowance,\n\t\tovertime: payrollProps.overtime,\n\t\tannualBonus: payrollProps.annualBonus,\n\t\tcommission: payrollProps.commission,\n\t\tshowResultsTable: globalProps.showResultsTable\n\t})\n};\n\nexport default NetPayResultsEmployee;\n","import React from 'react';\nimport InfoCard from '../../components/info-card';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nexport function foodAllowanceInfo(allowance) {\n\treturn (\n\t\t<InfoCard\n\t\t\ttype='info'\n\t\t\ttitle='10bis or Cibus'\n\t\t\tbody={\n\t\t\t\t<p>\n\t\t\t\t\tYour allowance of {formatCurrency('il', allowance)} has been added to your taxable income,\n\t\t\t\t\tbut as it's not included in your salary payment, it doesn't form part of your net income.\n\t\t\t\t\tIt should still be considered desposible income though.\n\t\t\t\t</p>\n\t\t\t}\n\t\t\tclose={true}\n\t\t/>\n\t);\n}\n","export function pensionReliefCalc(taxData, taxYearIndex, pensionContribution, income) {\n\t//Tax benefit is available as a percent of monthly contributions up to a fixed shekel limit\n\n\tconst { percentLimit, shekelLimit, taxCreditRate } =\n\t\ttaxData[taxYearIndex].pension.taxRelief.employee;\n\tconst shekelPercent = income * (percentLimit / 100);\n\tconst ceiling = shekelLimit > shekelPercent ? shekelPercent : shekelLimit;\n\n\tlet pensionTaxCredit;\n\n\tif (pensionContribution >= ceiling) {\n\t\tpensionTaxCredit = ceiling * (taxCreditRate / 100);\n\t} else {\n\t\tpensionTaxCredit = pensionContribution * (taxCreditRate / 100);\n\t}\n\n\treturn pensionTaxCredit;\n}\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types';\nimport Table from 'react-bootstrap/table';\nimport {\n\tbituachLeumiCalc,\n\tnationalInsuranceSelfEmp,\n\tpensionMinCalc,\n\tpensionContributionCalc,\n\tpensionReliefCalcSelfEmp,\n\tstudyFundAllowances,\n\tstudyFundCalc,\n\tincomeTaxCalc,\n\tincomeTaxBandsCalc\n} from '../../utils/tax-calculators';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport TableBreakdown from '../../components/table-breakdown';\n\nfunction NetPayResultsSelfEmployed(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tcreditPoints,\n\t\tpensionOption,\n\t\tpensionType,\n\t\tpensionAmount,\n\t\tstudyFundType,\n\t\tstudyFundAmount,\n\t\tshowResultsTable\n\t} = props.stateData;\n\tconst employmentType = props.employmentType;\n\tconst studyFundTaxAllowance = studyFundAllowances(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\temploymentType\n\t);\n\tconst { studyFundContribution, studyFundTaxDeductible } = studyFundCalc(\n\t\tbaseIncome,\n\t\temploymentType,\n\t\tstudyFundAmount,\n\t\tstudyFundType,\n\t\tstudyFundTaxAllowance\n\t);\n\tconst pensionLegalMin = pensionMinCalc(taxData, taxYearIndex, baseIncome, employmentType);\n\tconst pensionContribution = pensionContributionCalc(\n\t\tbaseIncome,\n\t\tpensionLegalMin,\n\t\tpensionOption,\n\t\tpensionAmount,\n\t\tpensionType\n\t);\n\tconst { pensionTaxDeductible, pensionTaxCredit } = pensionReliefCalcSelfEmp(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tpensionContribution\n\t);\n\tconst taxableIncome = baseIncome - studyFundTaxDeductible - pensionTaxDeductible;\n\tconst bituachLeumiDeductible = nationalInsuranceSelfEmp(taxData, taxYearIndex, taxableIncome);\n\tconst { month: nationalInsurance, annual: annualNationalInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'nationalInsurance'\n\t);\n\tconst { month: healthInsurance, annual: annualHealthInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'healthInsurance'\n\t);\n\tconst creditPointsTaxCredit = creditPoints * taxData[taxYearIndex].creditPoint;\n\tconst incomeTaxTaxableIncome =\n\t\ttaxableIncome -\n\t\tnationalInsurance *\n\t\t\t(taxData[taxYearIndex].bituachLeumi.selfEmployedNationalInsuranceDiscount / 100);\n\tconst credits = creditPointsTaxCredit + pensionTaxCredit;\n\tconst { incomeTax, annualIncomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTaxTaxableIncome,\n\t\t0,\n\t\tcredits,\n\t\temploymentType\n\t);\n\tconst { monthlyBandPayments, annualBandPayments } = incomeTaxBandsCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tannualIncomeTax\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{showResultsTable && (\n\t\t\t\t<section>\n\t\t\t\t\t<h2 ref={props.scrollPoint}>Results</h2>\n\t\t\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th>Month</th>\n\t\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Profit</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Taxable Income</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', incomeTaxTaxableIncome)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', incomeTaxTaxableIncome * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<TableBreakdown\n\t\t\t\t\t\t\t\trowHeader={'Income Tax'}\n\t\t\t\t\t\t\t\tmonthTotal={incomeTax}\n\t\t\t\t\t\t\t\tannualTotal={annualIncomeTax}\n\t\t\t\t\t\t\t\tmonthBreakdown={monthlyBandPayments}\n\t\t\t\t\t\t\t\tannualBreakdown={annualBandPayments}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>National Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', nationalInsurance)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualNationalInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Health Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', healthInsurance)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualHealthInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pension</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{studyFundContribution > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Study Fund</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution * 12)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr className='table_total'>\n\t\t\t\t\t\t\t\t<td>Net</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\tbaseIncome -\n\t\t\t\t\t\t\t\t\t\t\tincomeTax -\n\t\t\t\t\t\t\t\t\t\t\tnationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\thealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\tpensionContribution -\n\t\t\t\t\t\t\t\t\t\t\tstudyFundContribution\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\tbaseIncome * 12 -\n\t\t\t\t\t\t\t\t\t\t\tannualIncomeTax -\n\t\t\t\t\t\t\t\t\t\t\tannualNationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\tannualHealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\t(pensionContribution + studyFundContribution) * 12\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nNetPayResultsSelfEmployed.propTypes = {\n\temploymentType: globalProps.employmentType,\n\tscrollPoint: globalProps.scrollPoint,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount,\n\t\tshowResultsTable: globalProps.showResultsTable\n\t})\n};\n\nexport default NetPayResultsSelfEmployed;\n","export function scrollToRef(reference) {\n\treference.scrollIntoView({\n\t\tbehavior: 'smooth'\n\t});\n}\n","import React, { Component } from 'react';\nimport { globalProps } from '../../prop-types';\nimport taxData from '../../data/payroll';\nimport NetPayForm from './Form';\nimport NetPayResultsEmployee from './ResultsEmployee';\nimport NetPayResultsSelfEmployed from './ResultsSelfEmployed';\nimport { scrollToRef } from '../../utils/scrollToRef';\n\nclass NetPayCalculator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttaxYearIndex: 0,\n\t\t\tbaseIncome: '',\n\t\t\tcreditPoints: '',\n\t\t\tpensionOption: 'legalMin',\n\t\t\tpensionType: props.employmentType === 'employee' ? 'percent' : 'shekel',\n\t\t\tpensionAmount: '',\n\t\t\tstudyFundType: props.employmentType === 'employee' ? 'percent' : 'shekel',\n\t\t\tstudyFundAmount: '',\n\t\t\ttravelAllowance: '',\n\t\t\tfoodAllowance: '',\n\t\t\totherAllowance: '',\n\t\t\tannualBonus: '',\n\t\t\tcommission: '',\n\t\t\tovertime: '',\n\t\t\tvalidated: false,\n\t\t\tshowResultsTable: false\n\t\t};\n\t\tthis.scrollPoint = React.createRef();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t//Reset state when change forms\n\t\tif (prevProps.employmentType !== this.props.employmentType) {\n\t\t\tthis.setState({\n\t\t\t\tbaseIncome: '',\n\t\t\t\tcreditPoints: '',\n\t\t\t\tpensionOption: 'legalMin',\n\t\t\t\tpensionAmount: '',\n\t\t\t\tstudyFundAmount: '',\n\t\t\t\tvalidated: false,\n\t\t\t\tshowResultsTable: false\n\t\t\t});\n\t\t\tif (this.props.employmentType === 'employee') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpensionType: 'percent',\n\t\t\t\t\tstudyFundType: 'percent'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpensionType: 'shekel',\n\t\t\t\t\tstudyFundType: 'shekel',\n\t\t\t\t\ttravelAllowance: '',\n\t\t\t\t\tfoodAllowance: '',\n\t\t\t\t\totherAllowance: '',\n\t\t\t\t\tannualBonus: '',\n\t\t\t\t\tcommission: '',\n\t\t\t\t\tovertime: ''\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = event => {\n\t\tconst { name, value, type } = event.target;\n\t\tthis.setState({\n\t\t\t[name]: type === 'number' ? parseFloat(value) || '' : value,\n\t\t\tshowResultsTable: false\n\t\t});\n\n\t\tif (name === 'baseIncome' && value === '') {\n\t\t\tthis.setState({\n\t\t\t\tpensionOption: 'legalMin'\n\t\t\t});\n\t\t}\n\t};\n\n\thandleSubmit = event => {\n\t\tconst form = event.currentTarget;\n\n\t\tif (form.checkValidity() === true) {\n\t\t\tthis.setState({\n\t\t\t\tshowResultsTable: true,\n\t\t\t\tvalidated: false //Hides validation text\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tscrollToRef(this.scrollPoint.current);\n\t\t\t}, 150);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tvalidated: true\n\t\t\t});\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<NetPayForm\n\t\t\t\t\temploymentType={this.props.employmentType}\n\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\tstateData={this.state}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t\t{this.props.employmentType === 'employee' && (\n\t\t\t\t\t<NetPayResultsEmployee\n\t\t\t\t\t\temploymentType={this.props.employmentType}\n\t\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\t\tstateData={this.state}\n\t\t\t\t\t\tscrollPoint={this.scrollPoint}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.props.employmentType === 'selfEmployed' && (\n\t\t\t\t\t<NetPayResultsSelfEmployed\n\t\t\t\t\t\temploymentType={this.props.employmentType}\n\t\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\t\tstateData={this.state}\n\t\t\t\t\t\tscrollPoint={this.scrollPoint}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nNetPayCalculator.propTypes = {\n\temploymentType: globalProps.employmentType\n};\n\nexport default NetPayCalculator;\n","import React from 'react';\nimport { globalProps } from '../../prop-types';\nimport './net-pay.scss';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport NetPayCalculator from './Calculator';\nimport { camelToKebab, capitaliseFirst } from '../../utils/caseConvertor';\n\nfunction NetPay(props) {\n\tconst employment = props.employmentType;\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1={`${capitaliseFirst(camelToKebab(employment))} Net Pay Calculator`} />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Net Pay</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUse the calculator to determine your net pay, which is the amount you're left with after\n\t\t\t\t\t\tall tax and other deductions have been applied.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tEnter your monthly financials, but it's important to be aware that final taxes are\n\t\t\t\t\t\tcalculated on your annual income.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<NetPayCalculator employmentType={employment} />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nNetPay.propTypes = {\n\temploymentType: globalProps.employmentType\n};\n\nexport default NetPay;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form, Row } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction EndOfYearRevenue(props) {\n\tconst { income, expenses, profit, creditPoints } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formSize = ['xs=6', 'md=3'];\n\tconst formIndex = props.formIndex;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Revenue</Form.Label>\n\t\t\t<Row className='eoy-income'>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Total Income'\n\t\t\t\t\tname={`income${formIndex}`}\n\t\t\t\t\tvalue={income[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(income[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Expenses'\n\t\t\t\t\tname={`expenses${formIndex}`}\n\t\t\t\t\tvalue={expenses[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(expenses[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Profit'\n\t\t\t\t\tname={`profit${formIndex}`}\n\t\t\t\t\tvalue={profit[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={true}\n\t\t\t\t\terror={profit[formIndex] < 0 ? 'Profit cannot be minus.' : invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Tax credit points'\n\t\t\t\t\tname={`creditPoints${formIndex}`}\n\t\t\t\t\tvalue={creditPoints[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(creditPoints[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t</fieldset>\n\t);\n}\n\nEndOfYearRevenue.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tformIndex: formProps.formIndex,\n\tstateData: globalProps.shape({\n\t\tincome: payrollProps.income,\n\t\texpenses: payrollProps.expenses,\n\t\tprofit: payrollProps.profit,\n\t\tcreditPoints: payrollProps.creditPoints\n\t})\n};\n\nexport default EndOfYearRevenue;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form, Row } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport InputRadio from '../../../components/form-inputs/InputRadio';\nimport { invalidNum } from '../../../utils/validationText';\nimport { invalidPercent } from '../../../utils/validationText';\n\nfunction EndOfYearPension(props) {\n\tconst { fiscalPeriod, profit, pensionOption, pensionType, pensionAmount } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formIndex = props.formIndex;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Pension</Form.Label>\n\t\t\t<Row className='hideLabels'>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Option'\n\t\t\t\t\tname={`pensionOption${formIndex}`}\n\t\t\t\t\tstate={pensionOption[formIndex]}\n\t\t\t\t\tbtnLabel={[`${fiscalPeriod === 'annual' ? 'Minium' : 'Minimum\\u{0002A}'}`, 'Custom']}\n\t\t\t\t\tbtnValue={['legalMin', 'custom']}\n\t\t\t\t\tdisabled={[false, profit[formIndex] <= 0]}\n\t\t\t\t\tlabelColumns={pensionOption[formIndex] === 'legalMin' ? ['xs=12'] : ['md=4', 'lg=5']}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\thelp='Enter income or profit to select custom.'\n\t\t\t\t\thelpInput='custom'\n\t\t\t\t\thelpCondition={profit[formIndex] <= 0}\n\t\t\t\t/>\n\t\t\t\t{pensionOption[formIndex] === 'custom' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InputRadio\n\t\t\t\t\t\t\tlabel='Type'\n\t\t\t\t\t\t\tname={`pensionType${formIndex}`}\n\t\t\t\t\t\t\tstate={pensionType[formIndex]}\n\t\t\t\t\t\t\tbtnLabel={['Percent', 'Shekel']}\n\t\t\t\t\t\t\tbtnValue={['percent', 'shekel']}\n\t\t\t\t\t\t\tlabelColumns={['xs=7', 'md=4', 'lg=4']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tlabel='Amount'\n\t\t\t\t\t\t\tname={`pensionAmount${formIndex}`}\n\t\t\t\t\t\t\tvalue={pensionAmount[formIndex]}\n\t\t\t\t\t\t\tsymbol={pensionType[formIndex] === 'percent' ? '%' : '₪'}\n\t\t\t\t\t\t\tmax={pensionType[formIndex] === 'percent' ? 100 : undefined}\n\t\t\t\t\t\t\tlabelColumns={['xs=5', 'md=4', 'lg=3']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terror={pensionType[formIndex] === 'percent' ? `${invalidPercent}` : `${invalidNum}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Row>\n\t\t</fieldset>\n\t);\n}\n\nEndOfYearPension.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tformIndex: formProps.formIndex,\n\tstateData: globalProps.shape({\n\t\tfiscalPeriod: payrollProps.fiscalPeriod,\n\t\tprofit: payrollProps.profit,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount\n\t})\n};\n\nexport default EndOfYearPension;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form, Row } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport InputRadio from '../../../components/form-inputs/InputRadio';\nimport { invalidNum } from '../../../utils/validationText';\nimport { invalidPercent } from '../../../utils/validationText';\n\nfunction EndOfYearStudyFund(props) {\n\tconst { studyFundOption, studyFundType, studyFundAmount } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formIndex = props.formIndex;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Study Fund</Form.Label>\n\t\t\t<Row className='hideLabels'>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Option'\n\t\t\t\t\tname={`studyFundOption${formIndex}`}\n\t\t\t\t\tstate={studyFundOption[formIndex]}\n\t\t\t\t\tbtnLabel={['None', 'Maximum\\u{0002A}\\u{0002A}', 'Custom']}\n\t\t\t\t\tbtnValue={['none', 'maximum', 'custom']}\n\t\t\t\t\tlabelColumns={studyFundOption[formIndex] === 'custom' ? ['md=4', 'lg=5'] : ['xs=12']}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t{studyFundOption[formIndex] === 'custom' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InputRadio\n\t\t\t\t\t\t\tlabel='Type'\n\t\t\t\t\t\t\tname={`studyFundType${formIndex}`}\n\t\t\t\t\t\t\tstate={studyFundType[formIndex]}\n\t\t\t\t\t\t\tbtnLabel={['Shekel', 'Percent']}\n\t\t\t\t\t\t\tbtnValue={['shekel', 'percent']}\n\t\t\t\t\t\t\tlabelColumns={['xs=7', 'md=4', 'lg=4']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tlabel='Amount'\n\t\t\t\t\t\t\tname={`studyFundAmount${formIndex}`}\n\t\t\t\t\t\t\tvalue={studyFundAmount[formIndex]}\n\t\t\t\t\t\t\tsymbol={studyFundType[formIndex] === 'percent' ? '%' : '₪'}\n\t\t\t\t\t\t\tmax={studyFundType[formIndex] === 'percent' ? 100 : undefined}\n\t\t\t\t\t\t\tlabelColumns={['xs=5', 'md=4', 'lg=3']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terror={studyFundType[formIndex] === 'percent' ? `${invalidPercent}` : `${invalidNum}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Row>\n\t\t</fieldset>\n\t);\n}\n\nEndOfYearStudyFund.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tformIndex: formProps.formIndex,\n\tstateData: globalProps.shape({\n\t\tstudyFundOption: payrollProps.studyFundOption,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount\n\t})\n};\n\nexport default EndOfYearStudyFund;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../prop-types/index';\nimport { Form, ButtonGroup, ToggleButton, Button, Row, Col } from 'react-bootstrap';\nimport LanguageContext from '../../contexts/LanguageContext';\nimport EndOfYearRevenue from './form-sections/Revenue';\nimport EndOfYearPension from './form-sections/Pension';\nimport EndOfYearStudyFund from './form-sections/StudyFund';\nimport PayrollTaxYearBtn from '../../components/buttons/PayrollYear';\n\nfunction EndOfYearForm(props) {\n\tconst stateData = props.stateData;\n\tconst { fiscalPeriod, pensionOption, studyFundOption, validated } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst months = [\n\t\t'January',\n\t\t'February',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December'\n\t];\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Calculator</h2>\n\t\t\t<Row className='justify-content-center mb-3'>\n\t\t\t\t<Col xs={'auto'}>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t{['Annual', 'Quarterly', 'Monthly'].map((period, i) => (\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tid={`fiscal-period-${i}`}\n\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\tvariant='outline-primary'\n\t\t\t\t\t\t\t\tname='fiscalPeriod'\n\t\t\t\t\t\t\t\tvalue={period.toLowerCase()}\n\t\t\t\t\t\t\t\tchecked={fiscalPeriod === period.toLowerCase()}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{period}\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Form\n\t\t\t\tid='endofyear-form'\n\t\t\t\tnoValidate\n\t\t\t\tvalidated={validated}\n\t\t\t\tonSubmit={props.handleSubmit}\n\t\t\t\tclassName='vertical-form'\n\t\t\t>\n\t\t\t\t<PayrollTaxYearBtn handleChange={handleChange} />\n\n\t\t\t\t{pensionOption.map((forms, i) => {\n\t\t\t\t\tconst fullWidth =\n\t\t\t\t\t\tpensionOption[i] === 'custom' || (studyFundOption[i] === 'custom' && true);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<fieldset key={i} className='mb-3'>\n\t\t\t\t\t\t\t<Form.Label as='legend' className={fiscalPeriod === 'annual' && 'visually-hidden'}>\n\t\t\t\t\t\t\t\t{fiscalPeriod === 'annual'\n\t\t\t\t\t\t\t\t\t? 'Annual'\n\t\t\t\t\t\t\t\t\t: fiscalPeriod === 'quarterly'\n\t\t\t\t\t\t\t\t\t? `Quarter ${i + 1}`\n\t\t\t\t\t\t\t\t\t: months[i]}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<LanguageContext.Consumer>\n\t\t\t\t\t\t\t\t{value => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<EndOfYearRevenue\n\t\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tformIndex={i}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={fullWidth && 12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<EndOfYearPension\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tformIndex={i}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={fullWidth && 12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<EndOfYearStudyFund\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tformIndex={i}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</LanguageContext.Consumer>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<small style={{ display: 'block', paddingBottom: '1rem' }}>\n\t\t\t\t\t<sup>&#42;&#42;</sup>Calculated pro rata based on tax deductible.\n\t\t\t\t</small>\n\t\t\t\t{fiscalPeriod !== 'annual' && (\n\t\t\t\t\t<small style={{ display: 'block', paddingBottom: '1rem' }}>\n\t\t\t\t\t\t<sup>&#42;</sup>Calculated pro rata.\n\t\t\t\t\t</small>\n\t\t\t\t)}\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tCalculate\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</section>\n\t);\n}\n\nEndOfYearForm.propTypes = {\n\thandleSubmit: globalProps.handleSubmit,\n\thandleChange: globalProps.handleChange,\n\tstateData: globalProps.shape({\n\t\tfiscalPeriod: payrollProps.fiscalPeriod,\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tstudyFundOption: payrollProps.studyFundOption,\n\t\tvalidated: formProps.validated\n\t})\n};\n\nexport default EndOfYearForm;\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types/index';\nimport { Table } from 'react-bootstrap';\nimport {\n\tincomeTaxCalc,\n\tbituachLeumiCalc,\n\tnationalInsuranceSelfEmp,\n\tpensionMinCalc,\n\tpensionContributionCalc,\n\tpensionReliefCalcSelfEmp,\n\tstudyFundAllowances,\n\tstudyFundCalc,\n\tincomeTaxBandsCalc\n} from '../../utils/tax-calculators';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport TableBreakdown from '../../components/table-breakdown';\n\nfunction EndOfYearResults(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tincome,\n\t\texpenses,\n\t\tprofit,\n\t\tcreditPoints,\n\t\tpensionOption,\n\t\tpensionType,\n\t\tpensionAmount,\n\t\tstudyFundOption,\n\t\tstudyFundType,\n\t\tstudyFundAmount,\n\t\tshowResultsTable\n\t} = props.stateData;\n\tconst total = array => {\n\t\tconst filteredArray = array.filter(Boolean);\n\n\t\tif (filteredArray.length === 0 && filteredArray[0] === undefined) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn filteredArray.reduce((previousValue, currentValue) => previousValue + currentValue);\n\t\t}\n\t};\n\tconst totalIncome = total(income);\n\tconst totalExpenses = total(expenses);\n\tconst totalProfit = total(profit);\n\tconst creditPointsTaxCredit = total(creditPoints) * taxData[taxYearIndex].creditPoint;\n\tconst employmentType = 'selfEmployed';\n\tconst eoy = true;\n\tconst pensionLegalMin = pensionMinCalc(taxData, taxYearIndex, totalProfit, employmentType, eoy);\n\tconst pensionContribution = pensionContributionCalc(\n\t\tprofit,\n\t\tpensionLegalMin,\n\t\tpensionOption,\n\t\tpensionAmount,\n\t\tpensionType,\n\t\teoy\n\t);\n\tconst { pensionTaxDeductible, pensionTaxCredit } = pensionReliefCalcSelfEmp(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttotalProfit,\n\t\tpensionContribution,\n\t\teoy\n\t);\n\tconst studyFundTaxAllowance = studyFundAllowances(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttotalProfit,\n\t\temploymentType,\n\t\teoy\n\t);\n\tconst { studyFundContribution, studyFundTaxDeductible } = studyFundCalc(\n\t\tprofit,\n\t\temploymentType,\n\t\tstudyFundAmount,\n\t\tstudyFundType,\n\t\tstudyFundTaxAllowance,\n\t\tstudyFundOption,\n\t\teoy\n\t);\n\tconst taxableIncome = totalProfit - studyFundTaxDeductible - pensionTaxDeductible;\n\tconst bituachLeumiDeductible = nationalInsuranceSelfEmp(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttaxableIncome,\n\t\teoy\n\t);\n\tconst { month: nationalInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'nationalInsurance',\n\t\t0,\n\t\tfalse,\n\t\teoy\n\t);\n\tconst { month: healthInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'healthInsurance',\n\t\t0,\n\t\tfalse,\n\t\teoy\n\t);\n\tconst incomeTaxTaxableIncome =\n\t\ttaxableIncome -\n\t\tnationalInsurance *\n\t\t\t(taxData[taxYearIndex].bituachLeumi.selfEmployedNationalInsuranceDiscount / 100);\n\tconst credits = creditPointsTaxCredit + pensionTaxCredit;\n\tconst { annualIncomeTax: incomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTaxTaxableIncome,\n\t\t0,\n\t\tcredits,\n\t\temploymentType,\n\t\teoy\n\t);\n\tconst { monthlyBandPayments, annualBandPayments } = incomeTaxBandsCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTax\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{showResultsTable && (\n\t\t\t\t<section>\n\t\t\t\t\t<h2 ref={props.scrollPoint}>Results</h2>\n\t\t\t\t\t<Table striped bordered className='table--col-2'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th>Total</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{totalIncome > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Income</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', totalIncome)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{totalExpenses > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Expenses</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', totalExpenses)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Profit</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', totalProfit)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Taxable Income</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', incomeTaxTaxableIncome)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<TableBreakdown\n\t\t\t\t\t\t\t\trowHeader={'Income Tax'}\n\t\t\t\t\t\t\t\tannualTotal={incomeTax}\n\t\t\t\t\t\t\t\tmonthBreakdown={monthlyBandPayments}\n\t\t\t\t\t\t\t\tannualBreakdown={annualBandPayments}\n\t\t\t\t\t\t\t\teoy={eoy}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>National Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', nationalInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Health insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', healthInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pension</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{studyFundContribution > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Study Fund</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr className='table_total'>\n\t\t\t\t\t\t\t\t<td>Net</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\ttotalProfit -\n\t\t\t\t\t\t\t\t\t\t\tincomeTax -\n\t\t\t\t\t\t\t\t\t\t\tnationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\thealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\tpensionContribution -\n\t\t\t\t\t\t\t\t\t\t\tstudyFundContribution\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nEndOfYearResults.propTypes = {\n\tscrollPoint: globalProps.scrollPoint,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tincome: payrollProps.income,\n\t\texpenses: payrollProps.expenses,\n\t\tprofit: payrollProps.profit,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundOption: payrollProps.studyFundOption,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount,\n\t\tshowResultsTable: globalProps.showResultsTable\n\t})\n};\n\nexport default EndOfYearResults;\n","import React, { Component } from 'react';\nimport taxData from '../../data/payroll';\nimport EndOfYearForm from './Form';\nimport EndOfYearResults from './Results';\nimport { scrollToRef } from '../../utils/scrollToRef';\n\nclass EndOfYearCalculator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfiscalPeriod: 'annual',\n\t\t\ttaxYearIndex: 0,\n\t\t\tincome: [''],\n\t\t\texpenses: [''],\n\t\t\tprofit: [''],\n\t\t\tcreditPoints: [''],\n\t\t\tpensionOption: ['legalMin'],\n\t\t\tpensionType: ['shekel'],\n\t\t\tpensionAmount: [''],\n\t\t\tstudyFundOption: ['none'],\n\t\t\tstudyFundType: ['shekel'],\n\t\t\tstudyFundAmount: [''],\n\t\t\tvalidated: false,\n\t\t\tshowResultsTable: false\n\t\t};\n\t\tthis.scrollPoint = React.createRef();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t//Reset state when change fiscal input choice\n\t\tconst fiscalPeriod = this.state.fiscalPeriod;\n\t\tconst indexes = fiscalPeriod === 'annual' ? 1 : fiscalPeriod === 'quarterly' ? 4 : 12;\n\n\t\tif (prevState.fiscalPeriod !== fiscalPeriod) {\n\t\t\tthis.setState({\n\t\t\t\tincome: Array(indexes).fill(''),\n\t\t\t\texpenses: Array(indexes).fill(''),\n\t\t\t\tprofit: Array(indexes).fill(''),\n\t\t\t\tcreditPoints: Array(indexes).fill(''),\n\t\t\t\tpensionOption: Array(indexes).fill('legalMin'),\n\t\t\t\tpensionType: Array(indexes).fill('shekel'),\n\t\t\t\tpensionAmount: Array(indexes).fill(''),\n\t\t\t\tstudyFundOption: Array(indexes).fill('none'),\n\t\t\t\tstudyFundType: Array(indexes).fill('shekel'),\n\t\t\t\tstudyFundAmount: Array(indexes).fill(''),\n\t\t\t\tvalidated: false\n\t\t\t});\n\t\t}\n\t\t//End\n\t}\n\n\thandleChange = event => {\n\t\tconst { name, value, type } = event.target;\n\t\tconst { pensionOption } = this.state;\n\t\tconst stateIndex = parseInt(name.match(/\\d+/));\n\t\tconst stateName = name.replace(stateIndex, '');\n\t\t//Iterate array and update the changed  value\n\t\tconst updateArray = (stateID, changedValue) => {\n\t\t\treturn [...this.state[stateID]].map((currentValue, i) => {\n\t\t\t\treturn i === stateIndex ? changedValue : currentValue;\n\t\t\t});\n\t\t};\n\t\t//End\n\n\t\tif (isNaN(stateIndex)) {\n\t\t\tthis.setState({\n\t\t\t\t[name]: type === 'number' ? parseFloat(value) || '' : value\n\t\t\t});\n\t\t} else {\n\t\t\tconst newValue = type === 'number' ? parseFloat(value) || '' : value;\n\t\t\tthis.setState({\n\t\t\t\t[stateName]: updateArray(stateName, newValue)\n\t\t\t});\n\n\t\t\tif (stateName === 'income' || stateName === 'expenses') {\n\t\t\t\tconst isIncome = stateName === 'income' && true;\n\t\t\t\tconst profitValue = isIncome\n\t\t\t\t\t? value - this.state.expenses[stateIndex]\n\t\t\t\t\t: this.state.income[stateIndex] - value;\n\n\t\t\t\tif (profitValue <= 0 && pensionOption[stateIndex] === 'custom') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpensionOption: updateArray('pensionOption', 'legalMin')\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tprofit: updateArray('profit', profitValue)\n\t\t\t\t});\n\t\t\t} else if (stateName === 'profit' && value <= 0 && pensionOption[stateIndex] === 'custom') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpensionOption: updateArray('pensionOption', 'legalMin')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tshowResultsTable: false\n\t\t});\n\t};\n\n\thandleSubmit = event => {\n\t\tconst form = event.currentTarget;\n\n\t\tif (form.checkValidity() === true) {\n\t\t\tthis.setState({\n\t\t\t\tshowResultsTable: true,\n\t\t\t\tvalidated: false //Hides validation text\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tscrollToRef(this.scrollPoint.current);\n\t\t\t}, 150);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tvalidated: true\n\t\t\t});\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EndOfYearForm\n\t\t\t\t\tstateData={this.state}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t\t<EndOfYearResults taxData={taxData} stateData={this.state} scrollPoint={this.scrollPoint} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default EndOfYearCalculator;\n","import React from 'react';\nimport './end-of-year.scss';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport EndOfYearCalculator from './Calculator';\n\nfunction EndOfYear() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='End of Year Calculator' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Net Pay</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUse the calculator to determine your net pay for the year, which is the amount you're\n\t\t\t\t\t\tleft with after all tax and other deductions have been applied.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<EndOfYearCalculator />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default EndOfYear;\n","import React from 'react';\nimport { payrollProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction TaxBandRates(props) {\n\tconst { taxData, taxYearIndex } = props;\n\tconst taxBands = Object.keys(taxData[taxYearIndex].incomeTax);\n\n\treturn (\n\t\t<section>\n\t\t\t<Table striped bordered className='table--col-3-reverse'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th>Rate</th>\n\t\t\t\t\t\t<th>Annual</th>\n\t\t\t\t\t\t<th>Monthly Equivalent</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{taxBands.map((taxBand, i) => {\n\t\t\t\t\t\tconst { rate, min, max } = taxData[taxYearIndex].incomeTax[taxBand];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td>{rate}%</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency('il', min, 0)}\n\t\t\t\t\t\t\t\t\t{max !== undefined ? `-${formatCurrency('il', max, 0)}` : ' and above'}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency('il', min === 0 ? min : min / 12 + 1, 0)}\n\t\t\t\t\t\t\t\t\t{max !== undefined ? `-${formatCurrency('il', max / 12, 0)}` : ' and above'}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nTaxBandRates.propTypes = {\n\ttaxData: payrollProps.taxData,\n\ttaxYearIndex: payrollProps.taxYearIndex\n};\n\nexport default TaxBandRates;\n","import React, { Component } from 'react';\nimport taxData from '../../data/payroll.json';\nimport PayrollTaxYearBtn from '../../components/buttons/PayrollYear';\nimport TaxBandRates from './TableRates.js';\n\nclass TaxBandsTable extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttaxYearIndex: taxData.length - 1\n\t\t};\n\t}\n\n\thandleChange = event => {\n\t\tthis.setState({\n\t\t\ttaxYearIndex: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<PayrollTaxYearBtn\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tcontrolled={true}\n\t\t\t\t\tstartIndex={this.state.taxYearIndex}\n\t\t\t\t/>\n\t\t\t\t<TaxBandRates taxData={taxData} taxYearIndex={this.state.taxYearIndex} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default TaxBandsTable;\n","import React from 'react';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport TaxBandsTable from './Table';\n\nfunction TaxBands() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Income Tax Bands' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Tax Bands</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIncome tax is calculated on your annual income, but monthly bands have been included for\n\t\t\t\t\t\tcomparrison.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<TaxBandsTable />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default TaxBands;\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction CreditPointsTableValues(props) {\n\tconst { taxData, displayItems } = props;\n\tconst allItems = taxData.length;\n\tlet displayYears = [];\n\n\tfor (let i = allItems - 1; i >= allItems - displayItems; i--) {\n\t\tdisplayYears.push(taxData[i]);\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<div className='container--sm'>\n\t\t\t\t<Table striped bordered className='table--equal'>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t<th>Point Value</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{displayYears.map((year, i) => {\n\t\t\t\t\t\t\tconst taxYear = year.taxYear;\n\t\t\t\t\t\t\tconst creditPoint = year.creditPoint;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t<td>{taxYear}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', creditPoint, 0)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nCreditPointsTableValues.propTypes = {\n\tdisplayItems: globalProps.displayItems,\n\ttaxData: payrollProps.taxData\n};\n\nexport default CreditPointsTableValues;\n","import React from 'react';\nimport { globalProps } from '../../prop-types';\nimport { Button } from 'react-bootstrap';\n\nfunction CreditPointsTableShowMore(props) {\n\tconst handleClick = props.handleClick;\n\n\treturn (\n\t\t<Button type='button' variant='primary' onClick={handleClick}>\n\t\t\tView previous years\n\t\t</Button>\n\t);\n}\n\nCreditPointsTableShowMore.propTypes = {\n\thandleClick: globalProps.handleClick\n};\n\nexport default CreditPointsTableShowMore;\n","import React, { Component } from 'react';\nimport taxData from '../../data/payroll.json';\nimport CreditPointsTableValues from './TableValues.js';\nimport CreditPointsTableShowMore from './ShowMoreBtn';\n\nclass CreditPointsTable extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdisplayItems: 2\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tconst items = this.state.displayItems;\n\t\tconst totalItems = taxData.length;\n\t\tconst increment = 2;\n\t\tthis.setState({\n\t\t\tdisplayItems: items + increment > totalItems ? totalItems : items + increment\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CreditPointsTableValues taxData={taxData} displayItems={this.state.displayItems} />\n\t\t\t\t{this.state.displayItems < taxData.length && (\n\t\t\t\t\t<CreditPointsTableShowMore handleClick={this.handleClick} />\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default CreditPointsTable;\n","import React from 'react';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport CreditPointsTable from './Table';\n\nfunction CreditPoints() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Income Tax Bands' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Credit Point Vaules</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tTax credit points reduce the amount of income tax you pay. Once your total tax liability\n\t\t\t\t\t\thas been calculated, the value of your credit points is deducted. A man receives 2.25\n\t\t\t\t\t\tpoints a month and a womnan 2.75. Additional points are awarded to{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://www.gov.il/en/departments/general/introducing_innovative_reforms'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tnew olim and returning residents\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t,{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://www.gov.il/en/departments/guides/tax-benefits-for-parents-with-small-children'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tparents of young children\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tand the disabled.\n\t\t\t\t\t</p>\n\t\t\t\t\t<CreditPointsTable />\n\t\t\t\t</section>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default CreditPoints;\n","import taxData from '../data/payroll.json';\n\nexport const currentYearIndex = taxData.length - 1;\nexport const currentYear = taxData[currentYearIndex].taxYear;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport { currentYear } from '../../utils/globalVariables';\n\nfunction SelfEmployedPensionDeposit(props) {\n\tconst { averageWage, reducedRate, fullRate, reducedMax, fullMax } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contribution Rates</h2>\n\t\t\t<p>\n\t\t\t\tYou're required to contribute to a pension by law. The minimum contribution amounts are\n\t\t\t\tcalculated in relation to your taxable income and the national average wage, up to a maximum\n\t\t\t\trequired amount.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe national avergae wage for the {currentYear} tax year is{' '}\n\t\t\t\t{formatCurrency('il', averageWage, 0)} a month.\n\t\t\t</p>\n\t\t\t<Table striped bordered className='table--col-3 table__header--blue'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th>National Average</th>\n\t\t\t\t\t\t<th>Percent</th>\n\t\t\t\t\t\t<th>Annual Maximum</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Up to 50%</td>\n\t\t\t\t\t\t<td>{reducedRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', reducedMax * 12, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Over 50%</td>\n\t\t\t\t\t\t<td>{fullRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', fullMax * 12, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td>{formatCurrency('il', reducedMax + fullMax * 12, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionDeposit.propTypes = {\n\taverageWage: pensionProps.averageWage,\n\treducedRate: pensionProps.reducedRate,\n\tfullRate: pensionProps.fullRate,\n\treducedMax: pensionProps.reducedMax,\n\tfullMax: pensionProps.fullMax\n};\n\nexport default SelfEmployedPensionDeposit;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction SelfEmployedPensionDepositExamples(props) {\n\tconst { averageWage, averageWageHalf, reducedRate, fullRate, reducedMax, fullMax } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contribution Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Monthly Deposit Example'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>Up to 50% of the national average:</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tIncome of {formatCurrency('il', 0, 0)}-{formatCurrency('il', averageWageHalf, 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tA deposit of {reducedRate}% is required on this portion of income, which is a\n\t\t\t\t\t\t\t\tmaximum of {formatCurrency('il', reducedMax, 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p>Over 50% of the national average:</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tIncome of {formatCurrency('il', averageWageHalf + 1, 0)}-\n\t\t\t\t\t\t\t\t{formatCurrency('il', averageWage, 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tA deposit of {fullRate}% is required on this portion of income, which is a maximum\n\t\t\t\t\t\t\t\tof {formatCurrency('il', fullMax, 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionDepositExamples.propTypes = {\n\taverageWage: pensionProps.averageWage,\n\taverageWageHalf: pensionProps.averageWageHalf,\n\treducedRate: pensionProps.reducedRate,\n\tfullRate: pensionProps.fullRate,\n\treducedMax: pensionProps.reducedMax,\n\tfullMax: pensionProps.fullMax\n};\n\nexport default SelfEmployedPensionDepositExamples;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction SelfEmployedPensionTaxRelief(props) {\n\tconst {\n\t\ttaxDeductableLimit,\n\t\ttaxCreditLimit,\n\t\teligibleIncome,\n\t\tceiling,\n\t\tmaxContribution,\n\t\tbeneficiaryPayment,\n\t\trecognisedExpense,\n\t\ttaxCredit\n\t} = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Tax Relief</h2>\n\t\t\t<p>\n\t\t\t\tYou're entitled to tax relief on pension contributions up to{' '}\n\t\t\t\t{taxDeductableLimit + taxCreditLimit}% of your annual income, with {taxDeductableLimit}%\n\t\t\t\tbeing a recognised expense and up to {taxCreditLimit}% receiving a tax credit of 35%, up to\n\t\t\t\tdeposit ceilings and type of pension.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tUp to an eligible income of {formatCurrency('il', eligibleIncome, 0)}, the full benefits are\n\t\t\t\tavailable as a simple percentage of your income. If your income exceeds this, the benefits\n\t\t\t\tare calculated in two tiers and you must be defined as a beneficiary to be eligible for the\n\t\t\t\tsecond tier. To become a beneficiary, a beneficiary payment must be deposited, which is in\n\t\t\t\taddition to the amounts deposited in the first tier and on which no tax benefits are\n\t\t\t\tavailable.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTax relief is only available up to an income ceiling of {formatCurrency('il', ceiling, 0)},\n\t\t\t\twith the tier ceilings being divided equally.\n\t\t\t</p>\n\t\t\t<Table striped bordered className='table--col-4'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Maximum Contribution</th>\n\t\t\t\t\t\t<th>Recognised Expense</th>\n\t\t\t\t\t\t<th>Tax Credit</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Tier One </td>\n\t\t\t\t\t\t<td>{formatCurrency('il', maxContribution, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', recognisedExpense, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', taxCredit, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Beneficary Payment</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', beneficiaryPayment, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', 0, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', 0, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Tier Two </td>\n\t\t\t\t\t\t<td>{formatCurrency('il', maxContribution, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', recognisedExpense, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', taxCredit, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', maxContribution * 2 + beneficiaryPayment, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', recognisedExpense * 2, 0)}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', taxCredit * 2, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionTaxRelief.propTypes = {\n\ttaxDeductableLimit: pensionProps.taxDeductableLimit,\n\ttaxCreditLimit: pensionProps.taxCreditLimit,\n\teligibleIncome: pensionProps.eligibleIncome,\n\tceiling: pensionProps.ceiling,\n\tmaxContribution: pensionProps.maxContribution,\n\tbeneficiaryPayment: pensionProps.beneficiaryPayment,\n\trecognisedExpense: pensionProps.recognisedExpense,\n\ttaxCredit: pensionProps.taxCredit\n};\n\nexport default SelfEmployedPensionTaxRelief;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction SelfEmployedPensionTaxReliefExamples(props) {\n\tconst {\n\t\teligibleIncome,\n\t\ttaxDeductableLimit,\n\t\ttaxCreditLimit,\n\t\ttaxCreditRate,\n\t\ttaxCredit,\n\t\tceiling,\n\t\ttierLimit,\n\t\trecognisedExpense,\n\t\tmaxContribution,\n\t\tbeneficiaryPayment\n\t} = props;\n\tconst eligibleDeductable = eligibleIncome * (taxDeductableLimit / 100);\n\tconst eligibleCredit = eligibleIncome * (taxCreditLimit / 100);\n\tconst taxCreditContribution = tierLimit * (taxCreditLimit / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Tax Relief Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Eligible Income Salary'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', eligibleIncome, 0)}, you can make the\n\t\t\t\t\t\t\tfollowing deposits:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{taxDeductableLimit}% of your income, {formatCurrency('il', eligibleDeductable, 0)},\n\t\t\t\t\t\t\t\twill be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {taxCreditLimit}% of your income,{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', eligibleCredit, 0)}, will receive a tax credit of{' '}\n\t\t\t\t\t\t\t\t{taxCreditRate}%, equalling{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', eligibleDeductable * (taxCreditLimit / 100), 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tTotal deposit amount of{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', eligibleDeductable + eligibleCredit, 0)}. Any further deposits\n\t\t\t\t\t\t\t\twon't be eligible for any tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Above the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', ceiling * 1.25, 0)}, it exceeds the\n\t\t\t\t\t\t\teligible income limit and your contributions are subject to the tired system.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe tier one ceiling is fixed at {formatCurrency('il', tierLimit, 0)}. The initial\n\t\t\t\t\t\t\tdeposits that can be made are:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{taxDeductableLimit}% of tier one, {formatCurrency('il', recognisedExpense, 0)},\n\t\t\t\t\t\t\t\twill be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {taxCreditLimit}%, {formatCurrency('il', taxCreditContribution, 0)},\n\t\t\t\t\t\t\t\twill receive a tax credit of {taxCreditRate}%, equalling{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', taxCredit, 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe tier two ceiling is fixed at {formatCurrency('il', tierLimit, 0)}. The tax\n\t\t\t\t\t\t\tbenefits of this tier are only available once you deposit an additional{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', beneficiaryPayment, 0)} to gain beneficary status. No tax\n\t\t\t\t\t\t\tbenefits are available on this amount, but you will receive them on the following:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{taxDeductableLimit}% of tier two, {formatCurrency('il', recognisedExpense, 0)},\n\t\t\t\t\t\t\t\twill be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {taxCreditLimit}%, {formatCurrency('il', taxCreditContribution, 0)},\n\t\t\t\t\t\t\t\twill receive a tax credit of {taxCreditRate}%, equalling{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', taxCredit, 0)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe total amount you need to deposit to gain the full tax benefits is{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', maxContribution * 2 + beneficiaryPayment, 0)}.{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', maxContribution, 0)} in tier one, plus the{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', beneficiaryPayment, 0)} beneficiary payment, plus{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', maxContribution, 0)} in tier two.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionTaxReliefExamples.propTypes = {\n\teligibleIncome: pensionProps.eligibleIncome,\n\ttaxDeductableLimit: pensionProps.taxDeductableLimit,\n\ttaxCredit: pensionProps.taxCredit,\n\ttaxCreditLimit: pensionProps.taxCreditLimit,\n\ttaxCreditRate: pensionProps.taxCreditRate,\n\tceiling: pensionProps.ceiling,\n\ttierLimit: pensionProps.tierLimit,\n\trecognisedExpense: pensionProps.recognisedExpense,\n\tmaxContribution: pensionProps.maxContribution,\n\tbeneficiaryPayment: pensionProps.beneficiaryPayment\n};\n\nexport default SelfEmployedPensionTaxReliefExamples;\n","import React from 'react';\nimport taxData from '../../data/payroll.json';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport SelfEmployedPensionDeposit from './Deposit';\nimport SelfEmployedPensionDepositExamples from './DepositExamples';\nimport SelfEmployedPensionTaxRelief from './TaxRelief';\nimport SelfEmployedPensionTaxReliefExamples from './TaxReliefExamples';\nimport { currentYearIndex } from '../../utils/globalVariables';\n\nconst currentYearData = taxData[currentYearIndex];\n//Contribution calculations\nconst { reducedRate, fullRate } = taxData[currentYearIndex].pension.legalMin.selfEmployed;\nconst averageWage = taxData[currentYearIndex].bituachLeumi.averageSalary;\nconst averageWageHalf = averageWage / 2;\nconst reducedMax = averageWageHalf * (reducedRate / 100);\nconst fullMax = averageWageHalf * (fullRate / 100);\n//Tax relief calculations\nconst { taxDeductableLimit, taxCreditLimit, taxCreditRate, eligibleIncome, ceiling } =\n\ttaxData[currentYearIndex].pension.taxRelief.selfEmployed;\nconst deductableDecimal = taxDeductableLimit / 100;\nconst creditDecimal = taxCreditLimit / 100;\nconst tierLimit = ceiling / 2;\nconst maxContribution = tierLimit * (deductableDecimal + creditDecimal);\nconst beneficiaryPayment =\n\ttaxData[currentYearIndex].bituachLeumi.averageSalary * 0.16 * 12 - maxContribution;\nconst recognisedExpense = tierLimit * (taxDeductableLimit / 100);\nconst taxCredit = tierLimit * (taxCreditLimit / 100) * (taxCreditRate / 100);\n\nfunction SelfEmployedPension() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Self-employed Pension' />\n\t\t\t<PageContainer>\n\t\t\t\t<SelfEmployedPensionDeposit\n\t\t\t\t\tcurrentYearData={currentYearData}\n\t\t\t\t\taverageWage={averageWage}\n\t\t\t\t\treducedRate={reducedRate}\n\t\t\t\t\tfullRate={fullRate}\n\t\t\t\t\treducedMax={reducedMax}\n\t\t\t\t\tfullMax={fullMax}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedPensionDepositExamples\n\t\t\t\t\taverageWage={averageWage}\n\t\t\t\t\taverageWageHalf={averageWageHalf}\n\t\t\t\t\treducedRate={reducedRate}\n\t\t\t\t\tfullRate={fullRate}\n\t\t\t\t\treducedMax={reducedMax}\n\t\t\t\t\tfullMax={fullMax}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedPensionTaxRelief\n\t\t\t\t\ttaxDeductableLimit={taxDeductableLimit}\n\t\t\t\t\ttaxCreditLimit={taxCreditLimit}\n\t\t\t\t\teligibleIncome={eligibleIncome}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\tmaxContribution={maxContribution}\n\t\t\t\t\tbeneficiaryPayment={beneficiaryPayment}\n\t\t\t\t\trecognisedExpense={recognisedExpense}\n\t\t\t\t\ttaxCredit={taxCredit}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedPensionTaxReliefExamples\n\t\t\t\t\teligibleIncome={eligibleIncome}\n\t\t\t\t\ttaxDeductableLimit={taxDeductableLimit}\n\t\t\t\t\ttaxCreditLimit={taxCreditLimit}\n\t\t\t\t\ttaxCreditRate={taxCreditRate}\n\t\t\t\t\ttaxCredit={taxCredit}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\ttierLimit={tierLimit}\n\t\t\t\t\trecognisedExpense={recognisedExpense}\n\t\t\t\t\tmaxContribution={maxContribution}\n\t\t\t\t\tbeneficiaryPayment={beneficiaryPayment}\n\t\t\t\t/>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default SelfEmployedPension;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport { currentYear } from '../../utils/globalVariables';\n\nfunction EmployeePensionDeposit(props) {\n\tconst { employee, employer, severance } = props.latestPensionData;\n\tconst averageWage = props.averageWage;\n\tconst employerMax = averageWage * (employer / 100);\n\tconst severanceMax = averageWage * (employer / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contribution Rates</h2>\n\t\t\t<p>\n\t\t\t\tBoth you and your employer must contribute to a pension by law. In addition to a pension\n\t\t\t\tcontribution, your employer will also contribute an amount towards your severance pay.\n\t\t\t</p>\n\t\t\t<p>Key points:</p>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\tWhen you're eligible to receive your severance pay, you may choose to leave it in your\n\t\t\t\t\tpension fund\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tYour employer will not include bonuses or overtime in the amount they pay contributions on\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tYour employer is only required to contribute up to the equivalant amount of the national\n\t\t\t\t\taverage wage, which is {formatCurrency('il', averageWage, 0)} a month for the{' '}\n\t\t\t\t\t{currentYear} tax year. However, you may be able to negotiate a higher limit in your\n\t\t\t\t\tcontract\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tYour individual circumstances at the start of your employment will dictate when your\n\t\t\t\t\tcontributions start\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Percent</th>\n\t\t\t\t\t\t<th>Monthly Maximum</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employee Pension Contribution</td>\n\t\t\t\t\t\t<td>{employee}</td>\n\t\t\t\t\t\t<td>No limit</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employer Pension Contribution</td>\n\t\t\t\t\t\t<td>{employer}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', employerMax, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employer Severance Contribution</td>\n\t\t\t\t\t\t<td>{severance}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', severanceMax, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t<td>{employee + employer + severance}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', employerMax + severanceMax, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nEmployeePensionDeposit.propTypes = {\n\tlatestPensionData: pensionProps.latestPensionData,\n\taverageWage: pensionProps.averageWage\n};\n\nexport default EmployeePensionDeposit;\n","import React from 'react';\nimport pensionData from '../../data/workplace-pension.json';\nimport taxData from '../../data/payroll.json';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport EmployeePensionDeposit from './Deposit';\nimport { currentYearIndex } from '../../utils/globalVariables';\n\nfunction EmployeePension() {\n\tconst latestPensionData = pensionData[pensionData.length - 1];\n\tconst averageWage = taxData[currentYearIndex].bituachLeumi.averageSalary;\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Workplace Pension' />\n\t\t\t<PageContainer>\n\t\t\t\t<EmployeePensionDeposit latestPensionData={latestPensionData} averageWage={averageWage} />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default EmployeePension;\n","import React from 'react';\nimport { globalProps, studyProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction SelfEmployedStudyFundDeposit(props) {\n\tconst { ceiling, currentYear, rate, capitalGainsLimit, maxDeposit } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contributions & Allowances</h2>\n\t\t\t<p>\n\t\t\t\tA study fund allows you to save without paying capital gains tax on profit the fund\n\t\t\t\tgenerates and the contributions are a recognised expense, up to deposit limits and an income\n\t\t\t\tof ceiling of {formatCurrency('il', ceiling, 0)} for the {currentYear} tax year. You cannot\n\t\t\t\twithdraw from the fund for 6 years in order to benefit from the capital gains exemption,\n\t\t\t\tunless using the funds to pay for a study/training programme.\n\t\t\t</p>\n\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Maximum Percent</th>\n\t\t\t\t\t\t<th>Maximum Deposit</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Recognised Expense</td>\n\t\t\t\t\t\t<td>{rate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', maxDeposit, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Capital Gains Exemption</td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td>{formatCurrency('il', capitalGainsLimit, 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nSelfEmployedStudyFundDeposit.propTypes = {\n\tcurrentYear: globalProps.currentYear,\n\tceiling: studyProps.ceiling,\n\trate: studyProps.rate,\n\tcapitalGainsLimit: studyProps.capitalGainsLimit,\n\tmaxDeposit: studyProps.maxDeposit\n};\n\nexport default SelfEmployedStudyFundDeposit;\n","import React from 'react';\nimport { studyProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction SelfEmployedStudyExamples(props) {\n\tconst { rate, ceiling, capitalGainsLimit, maxDeposit } = props;\n\tconst exmpleAboveCeiling = ceiling * 1.25;\n\tconst exmpleBelowCeiling = ceiling * 0.75;\n\tconst exampleBelowMaxDeposit = exmpleBelowCeiling * (rate / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Deposit Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Above the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleAboveCeiling, 0)}, it exceeds the\n\t\t\t\t\t\t\tincome ceiling and the following deposit amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{rate}% of your income exceeds the deposit limit, so you can deposit the maximum of{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', maxDeposit, 0)} to be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {formatCurrency('il', capitalGainsLimit - maxDeposit, 0)} will be\n\t\t\t\t\t\t\t\texempt from capital gains tax\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, over the {formatCurrency('il', capitalGainsLimit, 0)} limit,\n\t\t\t\t\t\t\t\twon't be eligible for any tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Below the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleBelowCeiling, 0)}, it's less than\n\t\t\t\t\t\t\tthe income ceiling and the following deposit amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{rate}% of your income, {formatCurrency('il', exampleBelowMaxDeposit, 0)}, will be\n\t\t\t\t\t\t\t\tconsidered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {formatCurrency('il', capitalGainsLimit - exampleBelowMaxDeposit, 0)}{' '}\n\t\t\t\t\t\t\t\twill be exempt from capital gains tax\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, over the {formatCurrency('il', capitalGainsLimit, 0)} limit,\n\t\t\t\t\t\t\t\twon't be eligible for any tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nSelfEmployedStudyExamples.propTypes = {\n\tceiling: studyProps.ceiling,\n\trate: studyProps.rate,\n\tcapitalGainsLimit: studyProps.capitalGainsLimit,\n\tmaxDeposit: studyProps.maxDeposit\n};\n\nexport default SelfEmployedStudyExamples;\n","import React from 'react';\nimport taxData from '../../data/payroll.json';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport SelfEmployedStudyFundDeposit from './Deposit';\nimport SelfEmployedStudyExamples from './Examples';\nimport { currentYearIndex, currentYear } from '../../utils/globalVariables';\n\nfunction SelfEmployedStudyFund() {\n\tconst { rate, ceiling, capitalGainsLimit } = taxData[currentYearIndex].studyFund.selfEmployed;\n\tconst maxDeposit = ceiling * (rate / 100);\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Self-employed Study Fund' />\n\t\t\t<PageContainer>\n\t\t\t\t<SelfEmployedStudyFundDeposit\n\t\t\t\t\tcurrentYear={currentYear}\n\t\t\t\t\trate={rate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\tcapitalGainsLimit={capitalGainsLimit}\n\t\t\t\t\tmaxDeposit={maxDeposit}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedStudyExamples\n\t\t\t\t\trate={rate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\tcapitalGainsLimit={capitalGainsLimit}\n\t\t\t\t\tmaxDeposit={maxDeposit}\n\t\t\t\t/>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default SelfEmployedStudyFund;\n","import React from 'react';\nimport { globalProps, studyProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction EmployeeStudyFundDeposit(props) {\n\tconst { currentYear, employeeRate, employerRate, ceiling } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contributions & Allowances</h2>\n\t\t\t<p>\n\t\t\t\tA study fund allows you to save without paying capital gains tax on profit the fund\n\t\t\t\tgenerates, up to deposit limits and an income ceiling of {formatCurrency('il', ceiling, 0)}{' '}\n\t\t\t\t({formatCurrency('il', ceiling / 12, 0)} a month) for the {currentYear} tax year.\n\t\t\t</p>\n\t\t\t<p>Key points:</p>\n\t\t\t<ul>\n\t\t\t\t<li>You can only open a study fund if your employer offers one</li>\n\t\t\t\t<li>\n\t\t\t\t\tYou cannot withdraw from the fund for 6 years in order to benefit from the tax exemptions,\n\t\t\t\t\tunless using the funds to pay for a study programme\n\t\t\t\t</li>\n\t\t\t\t<li>You don't pay income tax on your employer's contribution </li>\n\t\t\t</ul>\n\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Maximum Percent</th>\n\t\t\t\t\t\t<th>Maximum Deposit</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employee Contribution</td>\n\t\t\t\t\t\t<td>{employeeRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', ceiling * (employeeRate / 100), 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employer Contribution</td>\n\t\t\t\t\t\t<td>{employerRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', ceiling * (employerRate / 100), 0)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nEmployeeStudyFundDeposit.propTypes = {\n\tcurrentYear: globalProps.currentYear,\n\tceiling: studyProps.ceiling,\n\temployeeRate: studyProps.ceiling,\n\temployerRate: studyProps.ceiling\n};\n\nexport default EmployeeStudyFundDeposit;\n","import React from 'react';\nimport { studyProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction EmployeeStudyFundExamples(props) {\n\tconst { employeeRate, employerRate, ceiling } = props;\n\tconst maxEmployeeDeposit = ceiling * (employeeRate / 100);\n\tconst maxEmployerDeposit = ceiling * (employerRate / 100);\n\tconst exmpleAboveCeiling = ceiling * 1.25;\n\tconst exmpleBelowCeiling = ceiling * 0.75;\n\tconst exampleBelowMaxDepositEmployee = exmpleBelowCeiling * (employeeRate / 100);\n\tconst exampleBelowMaxDepositEmployer = exmpleBelowCeiling * (employerRate / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Deposit Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Above the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleAboveCeiling, 0)} (\n\t\t\t\t\t\t\t{formatCurrency('il', exmpleAboveCeiling / 12, 0)} a month), it exceeds the income\n\t\t\t\t\t\t\tceiling and the following deposit amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employeeRate}% of your income exceeds the deposit limit, so you can deposit the\n\t\t\t\t\t\t\t\tmaximum of\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployeeDeposit / 12, 0)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployeeDeposit, 0)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employerRate}% of your income exceeds the deposit limit, so your employer can\n\t\t\t\t\t\t\t\tdeposit the maximum of\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployerDeposit / 12, 0)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployerDeposit, 0)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, whether made by you or your employer, won't be eligible for\n\t\t\t\t\t\t\t\tany tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Below the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleBelowCeiling, 0)} (\n\t\t\t\t\t\t\t{formatCurrency('il', exmpleBelowCeiling / 12, 0)} a month), it's less than the income\n\t\t\t\t\t\t\tceiling and the following deposits amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employeeRate}% of your income\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployee / 12, 0)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployee, 0)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employerRate}% from your employer\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployer / 12, 0)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployer, 0)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, whether made by you or your employer, won't be eligible for\n\t\t\t\t\t\t\t\tany tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nEmployeeStudyFundExamples.propTypes = {\n\tceiling: studyProps.ceiling,\n\temployeeRate: studyProps.ceiling,\n\temployerRate: studyProps.ceiling\n};\n\nexport default EmployeeStudyFundExamples;\n","import React from 'react';\nimport taxData from '../../data/payroll.json';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport EmployeeStudyFundDeposit from './Deposit';\nimport EmployeeStudyFundExamples from './Examples';\nimport { currentYearIndex, currentYear } from '../../utils/globalVariables';\n\nfunction EmployeeStudyFund() {\n\tconst {\n\t\tstudyFund: {\n\t\t\temployee: { rate: employeeRate, ceiling },\n\t\t\temployer: { rate: employerRate }\n\t\t}\n\t} = taxData[currentYearIndex];\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Employee Study Fund' />\n\t\t\t<PageContainer>\n\t\t\t\t<EmployeeStudyFundDeposit\n\t\t\t\t\tcurrentYear={currentYear}\n\t\t\t\t\temployeeRate={employeeRate}\n\t\t\t\t\temployerRate={employerRate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t/>\n\t\t\t\t<EmployeeStudyFundExamples\n\t\t\t\t\temployeeRate={employeeRate}\n\t\t\t\t\temployerRate={employerRate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t/>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default EmployeeStudyFund;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './app.scss';\nimport Home from '../pages/home';\nimport Navigation from '../components/navbar';\nimport LanguageContext from '../contexts/LanguageContext';\nimport Footer from '../components/footer';\nimport NetPay from '../pages/net-pay';\nimport EndOfYear from '../pages/end-of-year';\nimport TaxBands from '../pages/tax-bands';\nimport CreditPoints from '../pages/credit-points';\nimport SelfEmployedPension from '../pages/pension-self-employed';\nimport EmployeePension from '../pages/pension-employee';\nimport SelfEmployedStudyFund from '../pages/study-fund-self-employed';\nimport EmployeeStudyFund from '../pages/study-fund-employee';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tlanguage: this.getLanguage(),\n\t\t\tsetLanguage: isoCode => {\n\t\t\t\tif (this.state.language !== isoCode) {\n\t\t\t\t\tlocalStorage.setItem('languageSetting', isoCode);\n\t\t\t\t\tthis.setState({ language: isoCode });\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tgetLanguage = () => {\n\t\tconst curentLanguage = localStorage.getItem('languageSetting');\n\n\t\treturn curentLanguage === null ? 'en' : curentLanguage;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router basename='/israel-tax'>\n\t\t\t\t<LanguageContext.Provider value={this.state}>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath='/employee/net-pay-calculator'\n\t\t\t\t\t\t\trender={() => <NetPay employmentType={'employee'} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath='/self-employed/net-pay-calculator'\n\t\t\t\t\t\t\trender={() => <NetPay employmentType={'selfEmployed'} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path='/self-employed/end-of-year-calculator' component={EndOfYear} />\n\t\t\t\t\t\t<Route path='/tax-rates/income-tax' component={TaxBands} />\n\t\t\t\t\t\t<Route path='/tax-rates/credit-points' component={CreditPoints} />\n\t\t\t\t\t\t<Route path='/self-employed/pension' component={SelfEmployedPension} />\n\t\t\t\t\t\t<Route path='/employee/pension' component={EmployeePension} />\n\t\t\t\t\t\t<Route path='/self-employed/study-fund' component={SelfEmployedStudyFund} />\n\t\t\t\t\t\t<Route path='/employee/study-fund' component={EmployeeStudyFund} />\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<Footer />\n\t\t\t\t</LanguageContext.Provider>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/iphone-calulator.6f8e95b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shekel-money-bag.f9d191d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hour-glass-coins.1cb60e21.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/seedling-coins.699b28d7.jpg\";"],"sourceRoot":""}