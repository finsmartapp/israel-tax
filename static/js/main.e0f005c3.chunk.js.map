{"version":3,"sources":["prop-types/index.js","components/page-container/index.js","components/hero/index.js","pages/home/index.js","contexts/LanguageContext.js","components/navbar/language-selector/index.js","components/navbar/NavbarMenus.js","components/navbar/index.js","components/footer/index.js","utils/conditionalWrapper.js","utils/caseConvertor.js","components/form-inputs/InputWrapper.js","components/form-inputs/InputSelect.js","components/buttons/PayrollYear.js","utils/keypadDisplay.js","components/form-inputs/InputField.js","utils/comparisons.js","pages/net-pay/form-sections/Income.js","components/form-inputs/InputRadio.js","utils/tax-calculators/pensionLegalMin.js","pages/net-pay/form-sections/Contributions.js","pages/net-pay/form-sections/Allowances.js","pages/net-pay/form-sections/Incentives.js","pages/net-pay/Form.js","utils/tax-calculators/incomeTax.js","utils/tax-calculators/bituachLeumi.js","utils/tax-calculators/incomeTaxBands.js","utils/formatNumber.js","utils/tax-calculators/niDeductableSelfEmp.js","utils/tax-calculators/pensionContribution.js","utils/tax-calculators/pensionTaxReliefSelfEmp.js","utils/tax-calculators/studyFund.js","utils/tax-calculators/studyFundAllowances.js","utils/tax-calculators/niDeductableAdvanceSelfEmp.js","utils/formatCurrency.js","components/table-breakdown/BreakdownRows.js","components/table-breakdown/index.js","components/info-card/Card.js","components/info-card/index.js","pages/net-pay/ResultsEmployee.js","pages/net-pay/ResultsEmployeeInfo.js","utils/tax-calculators/pensionReliefEmployee.js","pages/net-pay/ResultsSelfEmployed.js","utils/scrollToRef.js","pages/net-pay/Calculator.js","pages/net-pay/index.js","pages/end-of-year/form-sections/Revenue.js","pages/end-of-year/form-sections/Pension.js","pages/end-of-year/form-sections/StudyFund.js","pages/end-of-year/Form.js","pages/end-of-year/Results.js","pages/end-of-year/Calculator.js","pages/end-of-year/index.js","pages/tax-bands/TableRates.js","pages/tax-bands/Table.js","pages/tax-bands/index.js","pages/credit-points/TableValues.js","pages/credit-points/ShowMoreBtn.js","pages/credit-points/Table.js","pages/credit-points/index.js","utils/globalVariables.js","pages/pension-self-employed/Deposit.js","pages/pension-self-employed/DepositExamples.js","pages/pension-self-employed/TaxRelief.js","pages/pension-self-employed/TaxReliefExamples.js","pages/pension-self-employed/index.js","pages/pension-employee/Deposit.js","pages/pension-employee/index.js","pages/study-fund-self-employed/Deposit.js","pages/study-fund-self-employed/Examples.js","pages/study-fund-self-employed/index.js","pages/study-fund-employee/Deposit.js","pages/study-fund-employee/Examples.js","pages/study-fund-employee/index.js","pages/expenses/index.js","app/App.js","serviceWorker.js","index.js","images/cards/iphone-calulator.jpg","images/cards/canvasbag-suit.jpg","images/cards/hour-glass-coins.jpeg","images/cards/seedling-coins.jpg","utils/validationText.js"],"names":["shape","func","isRequired","object","oneOf","string","bool","oneOfType","array","number","any","PageContainer","props","Container","as","Row","className","Col","xs","sm","md","children","Hero","fluid","heroImage","h1","Home","Card","Img","variant","src","calculator","Body","Title","to","taxTable","pension","studyFund","LanguageContext","React","createContext","LanguageSelector","Consumer","value","Dropdown","onSelect","setLanguage","Toggle","language","Menu","Item","eventKey","NavigationMenu","Navbar","ref","nav","expand","sticky","exact","Brand","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Navigation","screensize","window","innerWidth","heroOutOfView","heroHeight","smallHero","innerHeight","addEventListener","scrollY","current","classList","add","remove","createRef","this","Component","Footer","ConditionalWrapper","condition","wrapper","camelToKebab","split","join","toLowerCase","InputWrapper","label","name","horizontal","labelColumns","type","horizontalForm","undefined","arrayToLiteral","e","reduce","i","match","inputColumns","map","num","replace","Form","Group","controlId","Label","column","InputSelect","startIndex","dataSource","dataKey","handleChange","controlled","required","error","placeholder","defaultValue","ariaHelp","Select","onChange","aria-describedby","disabled","key","Control","Feedback","PayrollTaxYearBtn","yearLabelColumns","columnSize","taxData","keypadDisplay","InputField","symbol","min","max","step","help","controls","pattern","inputMode","parseFloat","appendSymbol","aria","ariaError","ariaSymbol","InputGroup","hasValidation","Text","muted","isZeroOrGreater","val","NetPayIncome","stateData","baseIncome","creditPoints","bituachLeumiAdvance","employmentType","formSize","invalidNum","InputRadio","state","btnValue","btnLabel","inline","helpInput","helpCondition","btnId","Check","checked","pensionMinCalc","taxYearIndex","income","eoy","averageSalaryMonth","bituachLeumi","averageSalary","averageSalaryHalf","legalMin","selfEmployed","reducedRate","fullRate","employeeMin","employee","NetPayContributions","pensionOption","pensionType","pensionAmount","studyFundType","studyFundAmount","pensionMin","toFixed","pensionMinPecrcent","invalidPercent","NetPayAllowances","travelAllowance","foodAllowance","otherAllowance","NetPayIncentives","annualBonus","commission","overtime","NetPayForm","noValidate","validated","onSubmit","handleSubmit","Button","incomeTaxCalc","taxableIncome","credits","employment","taxBands","Object","keys","incomeTax","hasBonus","calculateTax","taxDue","forEach","taxBand","rate","minimum","annualTax","annualWithBonus","bonusTax","finalAnnual","finalMonthly","annualIncomeTax","bituachLeumiCalc","insuranceType","prisa","incomes","push","bonus","taxes","months","bandAdjustment","minProrata","maxProrata","basicTax","taxOnBonus","prisaTax","month","annual","incomeTaxBandsCalc","monthlyTax","isExptionalMonth","taxAndBand","tax","exptionalMonth","counter","fullBands","dividedBands","Math","round","bandLimit","Infinity","bands","exptionalBands","monthlyBandPayments","annualBandPayments","formatNumberPlain","decimal","niDeductableSelfEmpCalc","profit","selfEmployedNationalInsuranceDiscount","nationalInsurance","reduced","band1","band2","regular","thresholdMultiplier","regularRate","deductibleRate","pensionContributionCalc","option","amount","monthTotal","eoyTotal","length","filter","opt","pensionTaxReliefCalc","pensionContribution","prorata","taxRelief","taxDeductableMaxPercent","taxCreditMaxPercent","taxCreditRate","eligibleIncome","ceiling","isWithinEligibleIncomeThreshold","beneficiaryContribution","isBeneficiary","maxDeductableForIncome","maxCreditForIncome","incomeExceedsCeiling","maxDeductableForTier","maxCreditForTier","noneDeductable","maxDeductableTier2","maxCreditTier2","deduction","credit","tierTaxRelief","contribution","tier1","maxDeductable","maxCredit","fee","pensionTaxDeductible","pensionTaxCredit","studyFundCalc","studyFundTaxAllowance","options","studyFundContribution","studyFundTaxDeductible","studyFundAllowances","maxCeilingCalc","maxCeiling","profitCeiling","niDeductableAdvanceSelfEmpCalc","advance","niReduced","niRegular","healthInsurance","hiReduced","hiRegular","niReducedMax","reducedMax","formatCurrency","country","decimalPoint","currency","Intl","NumberFormat","style","maximumFractionDigits","format","TableBreakdownRows","rowHeader","annualTotal","monthBreakdown","annualBreakdown","active","handleClick","hasTax","monthColumn","aria-pressed","onClick","display","monthlyBand","values","isAnnual","TableBreakdown","event","showBreakdown","target","ariaPressed","setState","InfoCards","body","close","border","Header","CloseButton","InfoCard","NetPayResultsEmployee","showResultsTable","allowance","pensionableIncome","paycheckGross","annualNationalInsurance","annualHealthInsurance","creditPointsTaxCredit","creditPoint","taxCreditMaxShekel","shekelPercent","pensionReliefCalc","scrollPoint","Table","striped","bordered","NetPayResultsSelfEmployed","pensionReliefCalcSelfEmp","bituachLeumiDeductible","scrollToRef","reference","scrollIntoView","behavior","NetPayCalculator","currentTarget","checkValidity","setTimeout","preventDefault","stopPropagation","prevProps","NetPay","s","toUpperCase","EndOfYearRevenue","expenses","formIndex","EndOfYearPension","fiscalPeriod","EndOfYearStudyFund","studyFundOption","EndOfYearForm","ButtonGroup","period","ToggleButton","forms","fullWidth","paddingBottom","EndOfYearResults","showExtended","total","filteredArray","Boolean","previousValue","currentValue","totalIncome","totalExpenses","totalProfit","totalbituachLeumiAdvance","niIncomeTaxDeductable","incomeTaxTaxableIncome","grossIncomeTax","EndOfYearCalculator","stateIndex","parseInt","stateName","updateArray","stateID","changedValue","isNaN","newValue","profitValue","extendedActive","prevState","indexes","Array","fill","EndOfYear","TaxBandRates","TaxBandsTable","TaxBands","CreditPointsTableValues","displayItems","allItems","displayYears","year","taxYear","CreditPointsTableShowMore","CreditPointsTable","items","totalItems","CreditPoints","href","rel","currentYearIndex","currentYear","SelfEmployedPensionDeposit","averageWage","fullMax","SelfEmployedPensionDepositExamples","averageWageHalf","SelfEmployedPensionTaxRelief","maxContribution","beneficiaryPayment","recognisedExpense","taxCredit","SelfEmployedPensionTaxReliefExamples","tierLimit","eligibleDeductable","eligibleCredit","taxCreditContribution","currentYearData","SelfEmployedPension","EmployeePensionDeposit","latestPensionData","employer","severance","employerMax","severanceMax","EmployeePension","pensionData","SelfEmployedStudyFundDeposit","capitalGainsLimit","maxDeposit","SelfEmployedStudyExamples","exmpleAboveCeiling","exmpleBelowCeiling","exampleBelowMaxDeposit","SelfEmployedStudyFund","EmployeeStudyFundDeposit","employeeRate","employerRate","EmployeeStudyFundExamples","maxEmployeeDeposit","maxEmployerDeposit","exampleBelowMaxDepositEmployee","exampleBelowMaxDepositEmployer","EmployeeStudyFund","ExpensesTable","espenseTabel","expensesData","currentVatIndex","vat","expenseRow","expense","deduct","App","getLanguage","curentLanguage","localStorage","getItem","isoCode","setItem","basename","Provider","path","component","render","RecognisedExpenses","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e0f005c3.chunk.js","sourcesContent":["import {\n\tfunc,\n\tstring,\n\toneOf,\n\tarray,\n\toneOfType,\n\tnumber,\n\tbool,\n\tobject,\n\tshape,\n\tany\n} from 'prop-types';\n\nexport const globalProps = {\n\tshape,\n\thandleSubmit: func.isRequired,\n\thandleChange: func.isRequired,\n\thandleClick: func.isRequired,\n\tstateData: object.isRequired,\n\temploymentType: oneOf(['employee', 'selfEmployed']).isRequired,\n\temploymentTypeOptional: oneOf(['employee', 'selfEmployed']),\n\tlanguage: string.isRequired,\n\tdisplay: bool.isRequired,\n\tchildren: oneOfType([array, object]).isRequired,\n\tscrollPoint: object.isRequired,\n\tshowResultsTable: bool.isRequired,\n\tdisplayItems: number.isRequired,\n\trate: number.isRequired,\n\tactive: bool.isRequired,\n\tcurrentYear: number.isRequired,\n\tclassName: string,\n\tdecimal: number\n};\n\nexport const payrollProps = {\n\ttaxData: array.isRequired,\n\ttaxYearIndex: oneOfType([string, number]).isRequired,\n\tbaseIncome: oneOfType([string, number]).isRequired,\n\tcreditPoints: oneOfType([string, number, array]).isRequired,\n\tpensionOption: oneOfType([string, array]).isRequired,\n\tpensionType: oneOfType([string, array]).isRequired,\n\tpensionAmount: oneOfType([string, number, array]).isRequired,\n\tstudyFundType: oneOfType([string, array]).isRequired,\n\tstudyFundAmount: oneOfType([string, number, array]).isRequired,\n\ttravelAllowance: oneOfType([string, number]).isRequired,\n\tfoodAllowance: oneOfType([string, number]).isRequired,\n\totherAllowance: oneOfType([string, number]).isRequired,\n\tannualBonus: oneOfType([string, number]).isRequired,\n\tcommission: oneOfType([string, number]).isRequired,\n\tovertime: oneOfType([string, number]).isRequired,\n\tfiscalPeriod: string.isRequired,\n\tbituachLeumiAdvance: oneOfType([string, number, array]).isRequired,\n\tshowExtended: bool.isRequired\n};\n\nexport const panelProps = {\n\ttype: string.isRequired,\n\ttitle: string.isRequired,\n\ttext: string.isRequired\n};\n\nexport const cardProps = {\n\ttype: string.isRequired,\n\ttitle: string.isRequired,\n\ttext: string.isRequired,\n\tbody: object.isRequired,\n\tclose: bool\n};\n\nexport const formProps = {\n\tformSize: array.isRequired,\n\tlabel: string.isRequired,\n\tname: string.isRequired,\n\tvalue: oneOfType([string, number]).isRequired,\n\tsymbol: string,\n\tmin: number,\n\tmax: number,\n\tstep: number,\n\thorizontal: bool,\n\tlabelColumns: array.isRequired,\n\trequired: bool.isRequired,\n\terror: string.isRequired,\n\thelp: string,\n\thelpInput: string,\n\thelpCondition: bool,\n\tinline: bool,\n\tbtnValue: array.isRequired,\n\tbtnLabel: array.isRequired,\n\tdisabled: array,\n\tstate: any.isRequired,\n\tdataSource: array.isRequired,\n\tdataKey: string.isRequired,\n\tcontrolled: bool,\n\ttype: string,\n\tformIndex: number.isRequired,\n\tvalidated: bool.isRequired,\n\tyearLabelColumns: array,\n\tstartIndex: function (props, propName, componentName) {\n\t\tif (props['controlled'] === true && props[propName] === undefined) {\n\t\t\treturn new Error(`${propName} supplied to ${componentName} is undefined. Validation failed.`);\n\t\t}\n\t}\n};\n\nexport const heroProps = {\n\th1: string.isRequired,\n\theroImage: string.isRequired\n};\n\nexport const breakdownProps = {\n\trowHeader: string.isRequired,\n\tmonthTotal: function (props, propName, componentName) {\n\t\tif (props['eoy'] === undefined && props[propName] === undefined) {\n\t\t\treturn new Error(`${propName} supplied to ${componentName} is undefined. Validation failed.`);\n\t\t}\n\t},\n\tannualTotal: number,\n\tmonthBreakdown: array.isRequired,\n\tannualBreakdown: array.isRequired,\n\teoy: bool\n};\n\nexport const pensionProps = {\n\tpensionData: array.isRequired,\n\tlatestPensionData: object.isRequired,\n\taverageWage: number.isRequired,\n\taverageWageHalf: number.isRequired,\n\treducedRate: number.isRequired,\n\tfullRate: number.isRequired,\n\treducedMax: number.isRequired,\n\tfullMax: number.isRequired,\n\ttaxDeductableMaxPercent: number.isRequired,\n\ttaxCreditMaxPercent: number.isRequired,\n\teligibleIncome: number.isRequired,\n\tceiling: number.isRequired,\n\tmaxContribution: number.isRequired,\n\tbeneficiaryPayment: number.isRequired,\n\trecognisedExpense: number.isRequired,\n\ttaxCredit: number.isRequired,\n\ttaxCreditRate: number.isRequired,\n\ttierLimit: number.isRequired\n};\n\nexport const studyProps = {\n\tceiling: number.isRequired,\n\trate: number.isRequired,\n\tcapitalGainsLimit: number.isRequired,\n\tmaxDeposit: number.isRequired,\n\temployeeRate: number.isRequired,\n\temployerRate: number.isRequired\n};\n","import React from 'react';\nimport { globalProps } from '../../prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction PageContainer(props) {\n\treturn (\n\t\t<Container as=\"main\">\n\t\t\t<Row className=\"justify-content-center\">\n\t\t\t\t<Col xs={12} sm={10} md={8}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nPageContainer.propTypes = {\n\tchildren: globalProps.children\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { heroProps } from '../../prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport '../hero/hero.scss';\n\nfunction Hero(props) {\n\treturn (\n\t\t<Container fluid={true}>\n\t\t\t<Row>\n\t\t\t\t<Col xs={12} className={`hero hero--${props.heroImage}`}>\n\t\t\t\t\t<h1>{props.h1}</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nHero.propTypes = {\n\th1: heroProps.h1,\n\theroImage: heroProps.heroImage\n};\n\nexport default Hero;\n","import React from 'react';\nimport './home.scss';\nimport { Link } from 'react-router-dom';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport Card from 'react-bootstrap/Card';\nimport calculator from '../../images/cards/iphone-calulator.jpg';\nimport taxTable from '../../images/cards/canvasbag-suit.jpg';\nimport pension from '../../images/cards/hour-glass-coins.jpeg';\nimport studyFund from '../../images/cards/seedling-coins.jpg';\n\nfunction Home() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Israel Tax Information' heroImage='home' />\n\t\t\t<PageContainer>\n\t\t\t\t<section className='home-cards plain-links flush-list'>\n\t\t\t\t\t<h2 className='visually-hidden'>Website Categories</h2>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={calculator} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Calculators</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/employee/net-pay-calculator'>Employee Net Pay</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/net-pay-calculator'>Self-employed Net Pay</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={taxTable} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Tax Rate Tables</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/tax-rates/income-tax'>Income Tax</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/tax-rates/credit-points'>Credit Points</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={pension} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Pensions</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/employee/pension'>Workplace Pension</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/pension'>Self-employed Pension</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Img variant='top' src={studyFund} />\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t<h3>Study Funds</h3>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/employee/study-fund'>Employee Study Fund</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/self-employed/study-fund'>Self-employed Study Fund</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</section>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\n\nconst LanguageContext = React.createContext();\n\nexport default LanguageContext;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './language-selector.scss';\nimport LanguageContext from '../../../contexts/LanguageContext';\n\nfunction LanguageSelector() {\n\treturn (\n\t\t<LanguageContext.Consumer>\n\t\t\t{value => (\n\t\t\t\t<Dropdown onSelect={value.setLanguage} className=\"language-selector\">\n\t\t\t\t\t<Dropdown.Toggle as=\"div\" className={`flag-${value.language}`}>\n\t\t\t\t\t\t&nbsp;<span className=\"visually-hidden\">Select a language</span>\n\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"en\" className=\"flag-en\">\n\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"za\" className=\"flag-za\">\n\t\t\t\t\t\t\tSouth African\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t</Dropdown>\n\t\t\t)}\n\t\t</LanguageContext.Consumer>\n\t);\n}\n\nexport default LanguageSelector;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport LanguageSelector from '../navbar/language-selector';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nfunction NavigationMenu(props) {\n\treturn (\n\t\t<Navbar ref={props.nav} expand='lg' sticky='top'>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer exact to='/'>\n\t\t\t\t\t<Navbar.Brand>IsraelTax</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<LanguageSelector />\n\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\n\t\t\t\t\t<Nav className='mr-auto'>\n\t\t\t\t\t\t<LinkContainer exact to='/'>\n\t\t\t\t\t\t\t<Nav.Link>Home</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<NavDropdown title='Employee'>\n\t\t\t\t\t\t\t<LinkContainer to='/employee/net-pay-calculator'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Net Pay Calculator</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/employee/pension'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Pension</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/employee/study-fund'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Study Fund</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<NavDropdown title='Self-employed'>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/net-pay-calculator'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Net Pay Calculator</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/pension'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Pension</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/study-fund'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Study Fund</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/recognised-expenses'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Recognised Expenses</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/self-employed/end-of-year-calculator'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>End of Year Calculator</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<NavDropdown title='Tax Rates & Bands'>\n\t\t\t\t\t\t\t<LinkContainer to='/tax-rates/income-tax'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Income Tax</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to='/tax-rates/credit-points'>\n\t\t\t\t\t\t\t\t<NavDropdown.Item>Credit Points</NavDropdown.Item>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t);\n}\n\nNavigationMenu.propTypes = {\n\tnav: object.isRequired\n};\n\nexport default NavigationMenu;\n","import React, { Component } from 'react';\nimport './navbar.scss';\nimport NavigationMenu from './NavbarMenus';\n\nclass Navigation extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.nav = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.heroOutOfView();\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.heroOutOfView();\n\t\t});\n\t}\n\n\tscreensize = () => {\n\t\tconst view = window.innerWidth;\n\t\treturn view < 1400 ? true : false; //Must match hero.scss\n\t};\n\n\theroOutOfView = () => {\n\t\tconst smallHero = this.screensize();\n\t\tlet heroHeight;\n\n\t\theroHeight = smallHero ? window.innerHeight * 0.3 : window.innerHeight * 0.45; //Must match hero.scss\n\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tlet fromTop = window.scrollY;\n\n\t\t\tfromTop >= heroHeight\n\t\t\t\t? this.nav.current.classList.add('navbar--nohero')\n\t\t\t\t: this.nav.current.classList.remove('navbar--nohero');\n\t\t});\n\t};\n\n\trender() {\n\t\treturn <NavigationMenu nav={this.nav} />;\n\t}\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './footer.scss';\n\nfunction Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<Container fluid={true} className='footer-inner container'>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<p>The information on this site is intended as a guide only.</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAll monthly tax calculators presume your income is the same each month and that you\n\t\t\t\t\t\t\thaven't reached retirement age.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;\n","const ConditionalWrapper = ({ condition, wrapper, children }) =>\n\tcondition ? wrapper(children) : children;\n\nexport default ConditionalWrapper;\n","export function camelToKebab(string) {\n\treturn string\n\t\t.split(/(?=[A-Z])/)\n\t\t.join('-')\n\t\t.toLowerCase();\n}\n\nexport function kebabToCamel(string) {\n\treturn string.replace(/-./g, s => s.toUpperCase()[1]);\n}\n\nexport function capitaliseFirst(string) {\n\treturn string.replace(/^[a-z]/, s => s.toUpperCase());\n}\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport ConditionalWrapper from '../../utils/conditionalWrapper';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nfunction InputWrapper(props) {\n\tconst { label, name, horizontal, labelColumns, type, className } = props;\n\tconst radio = {\n\t\tas: 'legend' //workaround as ternary doesn't work with as\n\t};\n\tconst horizontalForm = horizontal === undefined ? true : horizontal;\n\tconst id = camelToKebab(name);\n\t//Processes colum size attributes passed as xx=# in an array and returns as literal\n\tconst arrayToLiteral = e => {\n\t\treturn [...e].reduce(\n\t\t\t(array, i) => ({ ...array, [i.match(/.*(?==)/)]: i.match(/[^=]*$/)[0] }),\n\t\t\t{}\n\t\t);\n\t};\n\tconst inputColumns = labelColumns.map(e => {\n\t\tconst num = /\\d+/;\n\t\treturn e.replace(num, 12 - e.match(num));\n\t});\n\n\treturn (\n\t\t<Form.Group\n\t\t\tclassName='mb-3'\n\t\t\tas={horizontalForm ? Row : Col}\n\t\t\t{...(!horizontalForm && arrayToLiteral(labelColumns))}\n\t\t\tcontrolId={id}\n\t\t>\n\t\t\t<ConditionalWrapper\n\t\t\t\tcondition={!horizontalForm && type === 'radio'}\n\t\t\t\twrapper={children => <fieldset>{children}</fieldset>}\n\t\t\t>\n\t\t\t\t<Form.Label\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tcolumn={horizontalForm ? true : false}\n\t\t\t\t\t{...(horizontalForm && arrayToLiteral(labelColumns))}\n\t\t\t\t\t{...(type === 'radio' && radio)}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Form.Label>\n\t\t\t\t<ConditionalWrapper\n\t\t\t\t\tcondition={horizontalForm}\n\t\t\t\t\twrapper={children => <Col {...arrayToLiteral(inputColumns)}>{children}</Col>}\n\t\t\t\t>\n\t\t\t\t\t{props.children}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t</ConditionalWrapper>\n\t\t</Form.Group>\n\t);\n}\n\nInputWrapper.propTypes = {\n\tlabel: formProps.label,\n\tname: formProps.name,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\ttype: formProps.type,\n\tchildren: globalProps.children,\n\tclassName: globalProps.className\n};\n\nexport default InputWrapper;\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputWrapper from './InputWrapper';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nfunction InputSelect(props) {\n\tconst {\n\t\tlabel,\n\t\tname,\n\t\tstartIndex,\n\t\tdataSource,\n\t\tdataKey,\n\t\thorizontal,\n\t\tlabelColumns,\n\t\thandleChange,\n\t\tcontrolled,\n\t\trequired,\n\t\terror\n\t} = props;\n\tconst placeholder = controlled ? { value: startIndex } : { defaultValue: '' };\n\tconst ariaHelp = `${camelToKebab(name)}-help`;\n\n\treturn (\n\t\t<InputWrapper name={name} label={label} labelColumns={labelColumns} horizontal={horizontal}>\n\t\t\t<Form.Select\n\t\t\t\tname={name}\n\t\t\t\t{...placeholder}\n\t\t\t\tonChange={handleChange}\n\t\t\t\trequired={required}\n\t\t\t\taria-describedby={ariaHelp}\n\t\t\t>\n\t\t\t\t<option disabled value=''>\n\t\t\t\t\tSelect\n\t\t\t\t</option>\n\t\t\t\t{dataSource.map((e, i) => (\n\t\t\t\t\t<option key={i} value={i}>\n\t\t\t\t\t\t{e[dataKey]}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</Form.Select>\n\t\t\t<Form.Control.Feedback type='invalid' id={ariaHelp}>\n\t\t\t\t{error}\n\t\t\t</Form.Control.Feedback>\n\t\t</InputWrapper>\n\t);\n}\n\nInputSelect.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlabel: formProps.label,\n\tname: formProps.name,\n\tstartIndex: formProps.startIndex,\n\tdataSource: formProps.dataSource,\n\tdataKey: formProps.dataKey,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\tcontrolled: formProps.controlled,\n\trequired: formProps.required,\n\terror: formProps.error\n};\n\nexport default InputSelect;\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport InputSelect from '../form-inputs/InputSelect';\nimport taxData from '../../data/payroll.json';\n\nfunction PayrollTaxYearBtn(props) {\n\tconst { controlled, startIndex, yearLabelColumns, horizontal, handleChange } = props;\n\tconst columnSize = yearLabelColumns === undefined ? ['xs=auto'] : yearLabelColumns;\n\n\treturn (\n\t\t<InputSelect\n\t\t\tlabel='Tax year'\n\t\t\tname='taxYearIndex'\n\t\t\t// dataSource={controlled ? taxData : [...taxData].reverse()}\n\t\t\tdataSource={taxData}\n\t\t\tdataKey='taxYear'\n\t\t\tcontrolled={controlled}\n\t\t\tstartIndex={startIndex}\n\t\t\tlabelColumns={columnSize}\n\t\t\thorizontal={horizontal}\n\t\t\thandleChange={handleChange}\n\t\t\trequired={true}\n\t\t\terror='Select a tax year.'\n\t\t/>\n\t);\n}\n\nPayrollTaxYearBtn.propTypes = {\n\tcontrolled: formProps.controlled,\n\tstartIndex: formProps.startIndex,\n\tyearLabelColumns: formProps.yearLabelColumns,\n\thorizontal: formProps.horizontal,\n\thandleChange: globalProps.handleChange\n};\n\nexport default PayrollTaxYearBtn;\n","export function keypadDisplay(language) {\n\tif (language === 'za') {\n\t\treturn '';\n\t} else {\n\t\treturn 'decimal';\n\t}\n}\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport ConditionalWrapper from '../../utils/conditionalWrapper';\nimport InputWrapper from './InputWrapper';\nimport { keypadDisplay } from '../../utils/keypadDisplay';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nfunction InputField(props) {\n\tconst {\n\t\tlanguage,\n\t\tlabel,\n\t\tname,\n\t\tvalue,\n\t\tsymbol,\n\t\tmin,\n\t\tmax,\n\t\tstep,\n\t\thorizontal,\n\t\tlabelColumns,\n\t\thandleChange,\n\t\thelp,\n\t\trequired,\n\t\tclassName,\n\t\terror\n\t} = props;\n\tconst controls = {\n\t\ttype: 'number',\n\t\tpattern: '[0-9]',\n\t\tinputMode: keypadDisplay(language),\n\t\tmin: min === undefined ? 0 : parseFloat(min),\n\t\tmax: max === undefined ? undefined : max,\n\t\tstep: step === undefined ? 0.01 : step\n\t};\n\tconst appendSymbol = symbol === undefined ? false : true;\n\tconst aria = camelToKebab(name);\n\tconst ariaError = `${aria}-error`;\n\tconst ariaSymbol = appendSymbol ? `${aria}-symbol` : '';\n\n\treturn (\n\t\t<InputWrapper\n\t\t\tname={name}\n\t\t\tlabel={label}\n\t\t\tlabelColumns={labelColumns}\n\t\t\thorizontal={horizontal}\n\t\t\tclassName={className}\n\t\t>\n\t\t\t<ConditionalWrapper\n\t\t\t\tcondition={appendSymbol}\n\t\t\t\twrapper={children => <InputGroup hasValidation>{children}</InputGroup>}\n\t\t\t>\n\t\t\t\t<Form.Control\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\t{...controls}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired={required}\n\t\t\t\t\taria-describedby={`${ariaError} ${ariaSymbol}`}\n\t\t\t\t/>\n\t\t\t\t{appendSymbol && <InputGroup.Text id={ariaSymbol}>{symbol}</InputGroup.Text>}\n\t\t\t\t{help !== undefined && (\n\t\t\t\t\t<Form.Text id='passwordHelpBlock' muted>\n\t\t\t\t\t\t{help}\n\t\t\t\t\t</Form.Text>\n\t\t\t\t)}\n\t\t\t\t<Form.Control.Feedback type='invalid' id={ariaError}>\n\t\t\t\t\t{error}\n\t\t\t\t</Form.Control.Feedback>\n\t\t\t</ConditionalWrapper>\n\t\t</InputWrapper>\n\t);\n}\n\nInputField.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tlabel: formProps.label,\n\tname: formProps.name,\n\tvalue: formProps.value,\n\tsymbol: formProps.symbol,\n\tmin: formProps.min,\n\tmax: formProps.max,\n\tstep: formProps.step,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\trequired: formProps.required,\n\terror: formProps.error,\n\thelp: formProps.help,\n\tclassName: globalProps.className\n};\n\nexport default InputField;\n","export function isZeroOrGreater(val) {\n\treturn val === 0 || val > 0 ? true : false;\n}\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport PayrollTaxYearBtn from '../../../components/buttons/PayrollYear';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction NetPayIncome(props) {\n\tconst { baseIncome, creditPoints, bituachLeumiAdvance } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst employmentType = props.employmentType;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Income</Form.Label>\n\t\t\t<PayrollTaxYearBtn handleChange={handleChange} yearLabelColumns={formSize} />\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel={employmentType === 'employee' ? 'Base salary' : 'Profit'}\n\t\t\t\tname='baseIncome'\n\t\t\t\tvalue={baseIncome}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={true}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Tax credit points'\n\t\t\t\tname='creditPoints'\n\t\t\t\tvalue={creditPoints}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\tstep={0.25}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(creditPoints)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t{employmentType === 'selfEmployed' && (\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Bituach Leumi advance'\n\t\t\t\t\tname='bituachLeumiAdvance'\n\t\t\t\t\tvalue={bituachLeumiAdvance}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(creditPoints)}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</fieldset>\n\t);\n}\n\nNetPayIncome.propTypes = {\n\thandleChange: globalProps.handleChange,\n\temploymentType: globalProps.employmentType,\n\tlanguage: globalProps.language,\n\tstateData: globalProps.shape({\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tbituachLeumiAdvance: payrollProps.bituachLeumiAdvance\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayIncome;\n","import React from 'react';\nimport { globalProps, formProps } from '../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputWrapper from './InputWrapper';\nimport { camelToKebab } from '../../utils/caseConvertor';\n\nimport ConditionalWrapper from '../../utils/conditionalWrapper';\n\nfunction InputRadio(props) {\n\tconst {\n\t\tlabel,\n\t\tname,\n\t\tstate,\n\t\tbtnValue,\n\t\tbtnLabel,\n\t\tdisabled,\n\t\tlabelColumns,\n\t\thorizontal,\n\t\tinline,\n\t\thandleChange,\n\t\thelp,\n\t\thelpInput,\n\t\thelpCondition\n\t} = props;\n\tconst id = camelToKebab(name);\n\tconst btnId = btnValue.map(e => {\n\t\treturn `${id}-${camelToKebab(e)}`;\n\t});\n\tconst ariaHelp = `${id}-help`;\n\n\treturn (\n\t\t<ConditionalWrapper\n\t\t\tcondition={horizontal || horizontal === undefined}\n\t\t\twrapper={children => <fieldset>{children}</fieldset>}\n\t\t>\n\t\t\t<InputWrapper\n\t\t\t\tname={name}\n\t\t\t\tlabel={label}\n\t\t\t\tlabelColumns={labelColumns}\n\t\t\t\thorizontal={horizontal}\n\t\t\t\ttype='radio'\n\t\t\t>\n\t\t\t\t{btnValue.map((e, i) => (\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tinline={inline === undefined ? true : inline}\n\t\t\t\t\t\tlabel={btnLabel[i]}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tvalue={e}\n\t\t\t\t\t\tdisabled={disabled === undefined ? false : disabled[i]}\n\t\t\t\t\t\tid={btnId[i]}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={state === btnValue[i]}\n\t\t\t\t\t\taria-describedby={e === helpInput ? ariaHelp : undefined}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{helpCondition || (helpCondition === undefined && help !== undefined) ? (\n\t\t\t\t\t<Form.Text className='text-muted' id={ariaHelp}>\n\t\t\t\t\t\t{help}\n\t\t\t\t\t</Form.Text>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</InputWrapper>\n\t\t</ConditionalWrapper>\n\t);\n}\n\nInputRadio.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlabel: formProps.label,\n\tname: formProps.name,\n\thorizontal: formProps.horizontal,\n\tlabelColumns: formProps.labelColumns,\n\thelp: formProps.help,\n\thelpCondition: formProps.helpCondition,\n\thelpInput: formProps.helpInput,\n\tinline: formProps.inline,\n\tbtnValue: formProps.btnValue,\n\tbtnLabel: formProps.btnLabel,\n\tdisabled: formProps.disabled,\n\tstate: formProps.state\n};\n\nexport default InputRadio;\n","export function pensionMinCalc(taxData, taxYearIndex, income, employmentType, eoy) {\n\t//Employees pay a fixed percent of monthly base salary before any extra earnings\n\t//Self employed pay different percentages on earnings above and below the national average salary mid-point\n\n\tconst averageSalaryMonth = taxData[taxYearIndex].bituachLeumi.averageSalary;\n\tconst averageSalary = eoy ? averageSalaryMonth * 12 : averageSalaryMonth;\n\tconst averageSalaryHalf = averageSalary / 2;\n\tconst { reducedRate, fullRate } = taxData[taxYearIndex].pension.legalMin.selfEmployed;\n\tconst employeeMin = taxData[taxYearIndex].pension.legalMin.employee;\n\tlet pensionLegalMin;\n\n\tif (employmentType === 'employee') {\n\t\tpensionLegalMin = income * (employeeMin / 100);\n\t} else {\n\t\tif (income >= averageSalaryHalf) {\n\t\t\tif (income >= averageSalary) {\n\t\t\t\tpensionLegalMin =\n\t\t\t\t\taverageSalaryHalf * (reducedRate / 100) + averageSalaryHalf * (fullRate / 100);\n\t\t\t} else {\n\t\t\t\tpensionLegalMin =\n\t\t\t\t\taverageSalaryHalf * (reducedRate / 100) + (income - averageSalaryHalf) * (fullRate / 100);\n\t\t\t}\n\t\t} else {\n\t\t\tpensionLegalMin = income * (reducedRate / 100);\n\t\t}\n\t}\n\n\treturn pensionLegalMin;\n}\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputRadio from '../../../components/form-inputs/InputRadio';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum, invalidPercent } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\nimport { pensionMinCalc } from '../../../utils/tax-calculators/pensionLegalMin';\n\nfunction NetPayContributions(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tpensionOption,\n\t\tpensionType,\n\t\tpensionAmount,\n\t\tstudyFundType,\n\t\tstudyFundAmount\n\t} = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst employmentType = props.employmentType;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\tconst pensionMin = pensionMinCalc(taxData, taxYearIndex, baseIncome, employmentType).toFixed(2);\n\tconst pensionMinPecrcent = ((pensionMin / baseIncome) * 100).toFixed(2);\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Contributions</Form.Label>\n\t\t\t<fieldset>\n\t\t\t\t<Form.Label as='legend'>Pension</Form.Label>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Option'\n\t\t\t\t\tname='pensionOption'\n\t\t\t\t\tstate={pensionOption}\n\t\t\t\t\tbtnLabel={['Legal minium', 'Custom']}\n\t\t\t\t\tbtnValue={['legalMin', 'custom']}\n\t\t\t\t\tdisabled={[false, baseIncome >= 1 ? false : true]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\thelp={\n\t\t\t\t\t\temploymentType === 'employee'\n\t\t\t\t\t\t\t? 'Enter a base salary to select custom.'\n\t\t\t\t\t\t\t: 'Enter profit to select custom.'\n\t\t\t\t\t}\n\t\t\t\t\thelpInput='custom'\n\t\t\t\t\thelpCondition={baseIncome < 1}\n\t\t\t\t/>\n\t\t\t\t{pensionOption === 'custom' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{employmentType === 'selfEmployed' && (\n\t\t\t\t\t\t\t<InputRadio\n\t\t\t\t\t\t\t\tlabel='Type'\n\t\t\t\t\t\t\t\tname='pensionType'\n\t\t\t\t\t\t\t\tstate={pensionType}\n\t\t\t\t\t\t\t\tbtnLabel={['Percent', 'Shekel']}\n\t\t\t\t\t\t\t\tbtnValue={['percent', 'shekel']}\n\t\t\t\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tlabel='Amount'\n\t\t\t\t\t\t\tname='pensionAmount'\n\t\t\t\t\t\t\tvalue={pensionAmount}\n\t\t\t\t\t\t\tsymbol={pensionType === 'percent' ? '%' : '₪'}\n\t\t\t\t\t\t\tmin={\n\t\t\t\t\t\t\t\tpensionType === 'percent' ? parseFloat(pensionMinPecrcent) : parseFloat(pensionMin)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmax={pensionType === 'percent' ? 100 : undefined}\n\t\t\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\tpensionType === 'percent'\n\t\t\t\t\t\t\t\t\t? `${invalidPercent} The legal minimum is ${pensionMinPecrcent}%.`\n\t\t\t\t\t\t\t\t\t: `${invalidNum} The legal minimum is ${pensionMin}₪.`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</fieldset>\n\t\t\t<fieldset>\n\t\t\t\t<Form.Label as='legend'>Study Fund</Form.Label>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Type'\n\t\t\t\t\tname='studyFundType'\n\t\t\t\t\tstate={studyFundType}\n\t\t\t\t\tbtnLabel={['Percent', 'Shekel']}\n\t\t\t\t\tbtnValue={['percent', 'shekel']}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Amount'\n\t\t\t\t\tname='studyFundAmount'\n\t\t\t\t\tvalue={studyFundAmount}\n\t\t\t\t\tsymbol={studyFundType === 'percent' ? '%' : '₪'}\n\t\t\t\t\tmax={studyFundType === 'percent' ? 100 : undefined}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(studyFundAmount)}\n\t\t\t\t\terror={studyFundType === 'percent' ? `${invalidPercent}` : `${invalidNum}`}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t</fieldset>\n\t);\n}\n\nNetPayContributions.propTypes = {\n\thandleChange: globalProps.handleChange,\n\temploymentType: globalProps.employmentType,\n\tlanguage: globalProps.language,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayContributions;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction NetPayAllowances(props) {\n\tconst { travelAllowance, foodAllowance, otherAllowance } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Allowances</Form.Label>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Transport'\n\t\t\t\tname='travelAllowance'\n\t\t\t\tvalue={travelAllowance}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(travelAllowance)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='10bis / Cibus / Other card'\n\t\t\t\tname='foodAllowance'\n\t\t\t\tvalue={foodAllowance}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(foodAllowance)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Other'\n\t\t\t\tname='otherAllowance'\n\t\t\t\tvalue={otherAllowance}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(otherAllowance)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t</fieldset>\n\t);\n}\n\nNetPayAllowances.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tstateData: globalProps.shape({\n\t\ttravelAllowance: payrollProps.travelAllowance,\n\t\tfoodAllowance: payrollProps.foodAllowance,\n\t\totherAllowance: payrollProps.otherAllowance\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayAllowances;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\n\nfunction NetPayIncentives(props) {\n\tconst { annualBonus, commission, overtime } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formSize = props.formSize;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Incentives</Form.Label>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='One-time bonus or gift'\n\t\t\t\tname='annualBonus'\n\t\t\t\tvalue={annualBonus}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(annualBonus)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Commission'\n\t\t\t\tname='commission'\n\t\t\t\tvalue={commission}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(commission)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t\t<InputField\n\t\t\t\tlanguage={language}\n\t\t\t\tlabel='Overtime'\n\t\t\t\tname='overtime'\n\t\t\t\tvalue={overtime}\n\t\t\t\tlabelColumns={formSize}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\trequired={isZeroOrGreater(overtime)}\n\t\t\t\terror={invalidNum}\n\t\t\t/>\n\t\t</fieldset>\n\t);\n}\n\nNetPayIncentives.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tstateData: globalProps.shape({\n\t\tannualBonus: payrollProps.annualBonus,\n\t\tcommission: payrollProps.commission,\n\t\tovertime: payrollProps.overtime\n\t}),\n\tformSize: formProps.formSize\n};\n\nexport default NetPayIncentives;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../prop-types';\nimport { Form, Button } from 'react-bootstrap';\nimport NetPayIncome from './form-sections/Income';\nimport NetPayContributions from './form-sections/Contributions';\nimport NetPayAllowances from './form-sections/Allowances';\nimport NetPayIncentives from './form-sections/Incentives';\nimport LanguageContext from '../../contexts/LanguageContext';\n\nfunction NetPayForm(props) {\n\tconst { employmentType, taxData, stateData, handleChange } = props;\n\tconst formSize = ['xs=7', 'md=6'];\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Calculator</h2>\n\t\t\t<Form\n\t\t\t\tid={`${employmentType}-netpay-form`}\n\t\t\t\tnoValidate\n\t\t\t\tvalidated={stateData.validated}\n\t\t\t\tonSubmit={props.handleSubmit}\n\t\t\t\tclassName='horizontal-form'\n\t\t\t>\n\t\t\t\t<LanguageContext.Consumer>\n\t\t\t\t\t{value => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NetPayIncome\n\t\t\t\t\t\t\t\temploymentType={employmentType}\n\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<NetPayContributions\n\t\t\t\t\t\t\t\temploymentType={employmentType}\n\t\t\t\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{employmentType === 'employee' && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<NetPayAllowances\n\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<NetPayIncentives\n\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\tformSize={formSize}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</LanguageContext.Consumer>\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tCalculate\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</section>\n\t);\n}\n\nNetPayForm.propTypes = {\n\thandleSubmit: globalProps.handleSubmit,\n\thandleChange: globalProps.handleChange,\n\ttaxData: payrollProps.taxData,\n\temploymentType: globalProps.employmentType,\n\tstateData: globalProps.shape({\n\t\tvalidated: formProps.validated\n\t})\n};\n\nexport default NetPayForm;\n","export function incomeTaxCalc(\n\ttaxData,\n\ttaxYearIndex,\n\ttaxableIncome,\n\tannualBonus,\n\tcredits,\n\temployment,\n\teoy\n) {\n\t//Income tax uses annual tax bands\n\t//Bonus calculated separatly to ensure tax that month isn't multipled by 12 for yearly total\n\n\tconst taxBands = Object.keys(taxData[taxYearIndex].incomeTax);\n\tconst hasBonus = annualBonus > 0;\n\tannualBonus = hasBonus ? annualBonus : 0;\n\tconst calculateTax = income => {\n\t\tlet taxDue = 0;\n\n\t\ttaxBands.forEach(taxBand => {\n\t\t\tconst { rate, min: minimum, max } = taxData[taxYearIndex].incomeTax[taxBand];\n\t\t\tconst bandAdjustment = minimum === 0 ? 0 : 1;\n\t\t\tconst min = minimum - bandAdjustment;\n\n\t\t\tif (income >= min) {\n\t\t\t\tif (max === undefined) {\n\t\t\t\t\tconst tax = (income - min) * (rate / 100);\n\t\t\t\t\ttaxDue += tax;\n\t\t\t\t} else if (income >= max) {\n\t\t\t\t\tconst tax = (max - min) * (rate / 100);\n\t\t\t\t\ttaxDue += tax;\n\t\t\t\t} else {\n\t\t\t\t\tconst tax = (income - min) * (rate / 100);\n\t\t\t\t\ttaxDue += tax;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn taxDue;\n\t};\n\n\tconst annualTax = calculateTax(eoy ? taxableIncome : (taxableIncome - annualBonus) * 12);\n\tconst annualWithBonus =\n\t\thasBonus && calculateTax((taxableIncome - annualBonus) * 12 + annualBonus);\n\tconst bonusTax = hasBonus ? annualWithBonus - annualTax : 0;\n\tconst finalAnnual = annualTax + bonusTax - credits * (eoy ? 1 : 12);\n\tconst finalMonthly = annualTax / 12 + bonusTax - credits;\n\n\treturn {\n\t\tincomeTax: finalMonthly > 0 ? finalMonthly : 0,\n\t\tannualIncomeTax: finalAnnual > 0 ? finalAnnual : 0\n\t};\n}\n","export function bituachLeumiCalc(\n\ttaxData,\n\ttaxYearIndex,\n\temploymentType,\n\ttaxableIncome,\n\tinsuranceType,\n\tannualBonus,\n\tprisa,\n\teoy\n) {\n\t//Batuach Leumi uses monthly tax bands\n\t//Bonus calculated separatly to ensure tax that month isn't multipled by 12 for yearly total\n\t//If a payment's received over x percent of the usually monthly amount, prisa splits it over the last 12 months to ensure tax is paid (doesn't take you over BL tax-free limit), but deducted from current month\n\n\tlet incomes =\n\t\temploymentType === 'selfEmployed'\n\t\t\t? [taxableIncome]\n\t\t\t: [taxableIncome - annualBonus, taxableIncome];\n\tprisa && incomes.push(((taxableIncome - annualBonus) * 12 + annualBonus) / 12);\n\tconst bonus = annualBonus > 0 && true;\n\tlet taxes = [];\n\n\tincomes.forEach(income => {\n\t\tlet taxDue = 0;\n\t\tconst taxBands = Object.keys(taxData[taxYearIndex].bituachLeumi[insuranceType]);\n\t\tconst months = eoy ? 12 : 1;\n\n\t\ttaxBands.forEach(taxBand => {\n\t\t\tconst { min, max } = taxData[taxYearIndex].bituachLeumi[insuranceType][taxBand];\n\t\t\tconst minProrata = min * months;\n\t\t\tconst maxProrata = max * months;\n\t\t\tconst rate = taxData[taxYearIndex].bituachLeumi[insuranceType][taxBand].rate[employmentType];\n\t\t\tlet bandAdjustment;\n\t\t\t//Adjust as min band is inclusive and is lost during x - min\n\t\t\tminProrata === 0 ? (bandAdjustment = 0) : (bandAdjustment = 1);\n\n\t\t\tif (income >= minProrata) {\n\t\t\t\tif (income >= maxProrata) {\n\t\t\t\t\ttaxDue += (maxProrata - minProrata + bandAdjustment) * (rate / 100);\n\t\t\t\t} else {\n\t\t\t\t\ttaxDue += (income - minProrata + bandAdjustment) * (rate / 100);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttaxes.push(taxDue);\n\t});\n\n\tconst basicTax = taxes[0];\n\tconst taxOnBonus = bonus ? taxes[1] - taxes[0] : 0;\n\tconst prisaTax = prisa ? taxes[2] : 0;\n\n\tif (prisa) {\n\t\treturn {\n\t\t\tmonth: basicTax + (prisaTax - basicTax) * 12,\n\t\t\tannual: prisaTax * 12\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tmonth: basicTax + taxOnBonus,\n\t\t\tannual: basicTax * 12 + taxOnBonus\n\t\t};\n\t}\n}\n","export function incomeTaxBandsCalc(taxData, taxYearIndex, annualTax, monthlyTax) {\n\t//An expetional month is where payment's received for that month only, so the annual tax can't be evenly divided\n\tconst isExptionalMonth = monthlyTax * 12 > annualTax;\n\n\tconst taxAndBand = (tax, exptionalMonth) => {\n\t\tconst taxBands = Object.keys(taxData[taxYearIndex].incomeTax);\n\t\tlet counter = tax;\n\t\tlet fullBands = [];\n\t\tlet dividedBands = [];\n\n\t\ttaxBands.forEach(taxBand => {\n\t\t\tconst { rate, min, max } = taxData[taxYearIndex].incomeTax[taxBand];\n\t\t\tconst bandAdjustment = min === 0 ? 0 : 1;\n\t\t\tconst minimum = exptionalMonth ? Math.round(min / 12) : min - bandAdjustment;\n\t\t\tconst maximum = max === undefined ? Infinity : exptionalMonth ? max / 12 : max;\n\t\t\tconst bandLimit = (maximum - minimum) * (rate / 100);\n\n\t\t\tif (counter > 0) {\n\t\t\t\tif (counter >= bandLimit) {\n\t\t\t\t\tfullBands.push({ [rate]: bandLimit });\n\t\t\t\t\tdividedBands.push({ [rate]: bandLimit / 12 });\n\t\t\t\t\tcounter -= bandLimit;\n\t\t\t\t} else if (counter < bandLimit) {\n\t\t\t\t\tfullBands.push({ [rate]: counter });\n\t\t\t\t\tdividedBands.push({ [rate]: counter / 12 });\n\t\t\t\t\tcounter -= counter;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn [fullBands, dividedBands];\n\t};\n\n\tconst bands = taxAndBand(annualTax);\n\tconst exptionalBands = isExptionalMonth && taxAndBand(monthlyTax, isExptionalMonth);\n\n\treturn {\n\t\tmonthlyBandPayments: isExptionalMonth ? exptionalBands[0] : bands[1],\n\t\tannualBandPayments: bands[0]\n\t};\n}\n","export function formatNumber(number, decimal) {\n\t//Thousand separator and decimal places\n\tdecimal = decimal === undefined ? 0 : decimal;\n\n\treturn number.toFixed(decimal).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport function formatNumberPlain(number, decimal) {\n\t//Decimal places and no thousand separator\n\tdecimal = decimal === undefined ? 0 : decimal;\n\n\treturn parseFloat(number.toFixed(decimal));\n}\n","import { formatNumberPlain } from '../formatNumber';\n\nexport function niDeductableSelfEmpCalc(taxData, taxYearIndex, profit, eoy) {\n\t//A percentage of national insurance is tax deductible and taken applicable to the final bituach luemi calculations.\n\t// Although only applicable to NI and not health, calculate the total taxable amount, which can then be fed into\n\t// the bituach leumi formula. This can be adapted to calculate that too if needed.\n\n\tconst months = eoy ? 12 : 1;\n\tconst {\n\t\taverageSalary,\n\t\tselfEmployedNationalInsuranceDiscount,\n\t\tnationalInsurance: {\n\t\t\tband1: {\n\t\t\t\trate: { selfEmployed: reduced }\n\t\t\t},\n\t\t\tband2: {\n\t\t\t\trate: { selfEmployed: regular },\n\t\t\t\tmin,\n\t\t\t\tmax\n\t\t\t}\n\t\t}\n\t} = taxData[taxYearIndex].bituachLeumi;\n\tconst minProrata = min * months;\n\tconst maxProrata = max * months;\n\tprofit = profit > maxProrata ? maxProrata : profit;\n\tconst thresholdMultiplier = formatNumberPlain((min / averageSalary) * months, 1);\n\tconst reducedRate = reduced / 100;\n\tconst regularRate = regular / 100;\n\tconst deductibleRate = selfEmployedNationalInsuranceDiscount / 100;\n\tlet taxable;\n\n\tif (profit < minProrata) {\n\t\ttaxable = profit / (1 + deductibleRate * reducedRate);\n\t} else {\n\t\ttaxable =\n\t\t\t(profit +\n\t\t\t\tthresholdMultiplier * averageSalary * (regularRate - reducedRate) * deductibleRate) /\n\t\t\t(1 + deductibleRate * regularRate);\n\t}\n\n\treturn profit - taxable;\n}\n","export function pensionContributionCalc(income, legalMin, option, amount, type, eoy) {\n\tconst monthTotal =\n\t\toption === 'legalMin'\n\t\t\t? legalMin\n\t\t\t: option === 'custom' && type === 'shekel'\n\t\t\t? amount\n\t\t\t: income * (amount / 100);\n\tlet eoyTotal = 0;\n\n\tif (eoy) {\n\t\teoyTotal += (legalMin / option.length) * option.filter(opt => opt.match(/legalMin/)).length;\n\n\t\toption.forEach((opt, i) => {\n\t\t\tif (opt === 'custom') {\n\t\t\t\tif (type[i] === 'shekel') {\n\t\t\t\t\teoyTotal += amount[i];\n\t\t\t\t} else {\n\t\t\t\t\teoyTotal += income[i] * (amount[i] / 100);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn eoy ? eoyTotal : monthTotal;\n}\n","export function pensionTaxReliefCalc(taxData, taxYearIndex, income, pensionContribution, eoy) {\n\t//Tax benefit available to a fixed percentage of profit up to a ceiling. Part of that can be deducted as an expense\n\t//and the remaining as a tax credit, up to ceilings. Different calculation methods depending on\n\t//profit and contribution amounts.\n\n\tconst prorata = eoy ? 1 : 12;\n\tincome = income * prorata;\n\tpensionContribution = eoy ? pensionContribution : pensionContribution * 12;\n\tconst { taxDeductableMaxPercent, taxCreditMaxPercent, taxCreditRate, eligibleIncome, ceiling } =\n\t\ttaxData[taxYearIndex].pension.taxRelief.selfEmployed;\n\t//Determine calculation type\n\t//Up to the eligible income tax relief is calculated on whole amount - above it's tiered\n\tconst isWithinEligibleIncomeThreshold = income <= eligibleIncome;\n\tconst beneficiaryContribution = taxData[taxYearIndex].bituachLeumi.averageSalary * 0.16 * 12;\n\tconst isBeneficiary = pensionContribution > beneficiaryContribution;\n\t//End\n\t//Baseline limits\n\tconst maxDeductableForIncome = income * (taxDeductableMaxPercent / 100);\n\tconst maxCreditForIncome = income * (taxCreditMaxPercent / 100);\n\t//End\n\t//Tier baselines\n\t//Tier 1 is calculated on whole amount\n\t//Eligible for tier two if beneficiary\n\tconst incomeExceedsCeiling = income > ceiling;\n\tconst maxDeductableForTier = (ceiling * (taxDeductableMaxPercent / 100)) / 2;\n\tconst maxCreditForTier = (ceiling * (taxCreditMaxPercent / 100)) / 2;\n\tconst noneDeductable = beneficiaryContribution - maxDeductableForTier - maxCreditForTier;\n\tconst maxDeductableTier2 = incomeExceedsCeiling\n\t\t? maxDeductableForTier\n\t\t: maxDeductableForIncome - maxDeductableForTier;\n\tconst maxCreditTier2 = incomeExceedsCeiling\n\t\t? maxCreditForTier\n\t\t: maxCreditForIncome - maxCreditForTier;\n\t//End\n\n\tlet deduction = 0;\n\tlet credit = 0;\n\tconst eligibleIncomeTaxReleif = () => {\n\t\tif (pensionContribution >= maxDeductableForIncome + maxCreditForIncome) {\n\t\t\tdeduction = maxDeductableForIncome;\n\t\t\tcredit = maxCreditForIncome;\n\t\t} else if (pensionContribution > maxDeductableForIncome) {\n\t\t\tdeduction = maxDeductableForIncome;\n\t\t\tcredit = pensionContribution - maxDeductableForIncome;\n\t\t} else {\n\t\t\tdeduction = pensionContribution;\n\t\t}\n\t};\n\n\tconst tierTaxRelief = (contribution, tier1) => {\n\t\tconst maxDeductable = tier1 ? maxDeductableForTier : maxDeductableTier2;\n\t\tconst maxCredit = tier1 ? maxCreditForTier : maxCreditTier2;\n\t\t//Credit is given on the noneDeductable in some instnces, although it shouldn't be acorrding to Altshuler.\n\t\t// can just be deleted if needed.\n\t\tconst fee = tier1 ? 0 : noneDeductable;\n\n\t\tif (contribution >= maxDeductable + maxCredit + fee) {\n\t\t\tdeduction += maxDeductable;\n\t\t\tcredit += maxCredit;\n\t\t} else if (contribution > maxDeductable + fee) {\n\t\t\tdeduction += maxDeductable;\n\t\t\tif (fee > 0) {\n\t\t\t\tcredit +=\n\t\t\t\t\tcontribution - maxDeductable >= maxCredit ? maxCredit : contribution - maxDeductable;\n\t\t\t} else {\n\t\t\t\tcredit += contribution - maxDeductable;\n\t\t\t}\n\t\t} else {\n\t\t\tdeduction += contribution - fee;\n\t\t\tcredit += fee;\n\t\t}\n\t};\n\n\tconst tierContibutions = () => {\n\t\ttierTaxRelief(pensionContribution, true);\n\t\tconst tierTwoContribution = pensionContribution - (maxDeductableForTier + maxCreditForTier);\n\n\t\tisBeneficiary && tierTaxRelief(tierTwoContribution, false);\n\t};\n\n\tisWithinEligibleIncomeThreshold ? eligibleIncomeTaxReleif() : tierContibutions();\n\n\treturn {\n\t\tpensionTaxDeductible: deduction / prorata,\n\t\tpensionTaxCredit: (credit * (taxCreditRate / 100)) / prorata\n\t};\n}\n","export function studyFundCalc(\n\tincome,\n\temployment,\n\tamount,\n\ttype,\n\tstudyFundTaxAllowance,\n\toptions,\n\teoy\n) {\n\tlet eoyTotal = 0;\n\n\tif (eoy) {\n\t\teoyTotal +=\n\t\t\t(studyFundTaxAllowance / options.length) *\n\t\t\toptions.filter(option => option.match(/maximum/)).length;\n\n\t\toptions.forEach((option, i) => {\n\t\t\tif (option === 'custom') {\n\t\t\t\tif (type[i] === 'shekel') {\n\t\t\t\t\teoyTotal += amount[i];\n\t\t\t\t} else {\n\t\t\t\t\teoyTotal += income[i] * (amount[i] / 100);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconst contribution = eoy ? eoyTotal : type === 'shekel' ? amount : income * (amount / 100);\n\n\tif (employment === 'employee') {\n\t\treturn contribution;\n\t} else {\n\t\treturn {\n\t\t\tstudyFundContribution: contribution,\n\t\t\tstudyFundTaxDeductible:\n\t\t\t\tcontribution > studyFundTaxAllowance ? studyFundTaxAllowance : contribution\n\t\t};\n\t}\n}\n","export function studyFundAllowances(taxData, taxYearIndex, profit, employment, eoy) {\n\t//Education fund is a tax deductible expense up to a ceiling for self-employed\n\t//Employees contribution is taxed, but aren't taxed on the employers contribution (tax deductible expense for them)\n\t//Different ceilings for capital gains relief\n\n\tconst { rate, ceiling } = taxData[taxYearIndex].studyFund[employment];\n\tconst maxCeilingCalc = ceiling * (rate / 100);\n\tconst maxCeiling = eoy ? maxCeilingCalc : maxCeilingCalc / 12;\n\tconst profitCeiling = profit * (rate / 100);\n\n\treturn profitCeiling > maxCeiling ? maxCeiling : profitCeiling;\n}\n","export function niDeductableAdvanceSelfEmpCalc(taxData, taxYearIndex, advance, eoy) {\n\t//A percentage of national insurance is tax deductible. Only available on premiums paid during the year\n\t// (typically advances) and differeent to the deduction on final innsurance payments.\n\n\tconst months = eoy ? 12 : 1;\n\tconst {\n\t\tselfEmployedNationalInsuranceDiscount,\n\t\tnationalInsurance: {\n\t\t\tband1: {\n\t\t\t\trate: { selfEmployed: niReduced },\n\t\t\t\tmax\n\t\t\t},\n\t\t\tband2: {\n\t\t\t\trate: { selfEmployed: niRegular }\n\t\t\t}\n\t\t},\n\t\thealthInsurance: {\n\t\t\tband1: {\n\t\t\t\trate: { selfEmployed: hiReduced }\n\t\t\t},\n\t\t\tband2: {\n\t\t\t\trate: { selfEmployed: hiRegular }\n\t\t\t}\n\t\t}\n\t} = taxData[taxYearIndex].bituachLeumi;\n\n\tconst niReducedRate = niReduced / 100;\n\tconst hiReducedRate = hiReduced / 100;\n\tconst niReducedMax = max * niReducedRate * months;\n\tconst hiReducedMax = max * hiReducedRate * months;\n\tconst niReducedFraction = niReduced / (niReduced + hiReduced);\n\tconst niRegularFraction = niRegular / (niRegular + hiRegular);\n\tconst reducedMax = niReducedMax + hiReducedMax;\n\tlet niComponent;\n\n\tif (advance <= reducedMax) {\n\t\tniComponent = niReducedFraction * advance;\n\t} else {\n\t\tniComponent = niRegularFraction * (advance - reducedMax) + niReducedMax;\n\t}\n\n\treturn niComponent * (selfEmployedNationalInsuranceDiscount / 100);\n}\n","export function formatCurrency(country, number, decimal) {\n\tconst decimalPoint = decimal === undefined ? 0 : decimal;\n\n\tif (country === 'il') {\n\t\tvar language = 'en-IL';\n\t\tvar currency = 'ILS';\n\t}\n\treturn new Intl.NumberFormat(language, {\n\t\tstyle: 'currency',\n\t\tcurrency: currency,\n\t\tmaximumFractionDigits: decimalPoint\n\t}).format(number);\n}\n","import React from 'react';\nimport { globalProps, breakdownProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction TableBreakdownRows(props) {\n\tconst {\n\t\trowHeader,\n\t\tmonthTotal,\n\t\tannualTotal,\n\t\tmonthBreakdown,\n\t\tannualBreakdown,\n\t\tactive,\n\t\thandleClick,\n\t\teoy,\n\t\tdecimal\n\t} = props;\n\tconst hasTax = annualTotal > 0;\n\tconst monthColumn = eoy ? false : true;\n\n\treturn (\n\t\t<>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{rowHeader}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn-link btn-link--breakdown'\n\t\t\t\t\t\taria-pressed={active ? 'true' : 'false'}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\tstyle={{ display: hasTax ? 'inline-block' : 'none' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tBREAKDOWN\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t\t{monthColumn && <td>{formatCurrency('il', monthTotal, decimal)}</td>}\n\t\t\t\t<td>{formatCurrency('il', annualTotal, decimal)}</td>\n\t\t\t</tr>\n\t\t\t{active && (\n\t\t\t\t<>\n\t\t\t\t\t{monthBreakdown.map((monthlyBand, i) => {\n\t\t\t\t\t\tconst rate = Object.keys(monthlyBand);\n\t\t\t\t\t\tconst tax = Object.values(monthlyBand);\n\t\t\t\t\t\tconst isAnnual = i <= annualBreakdown.length - 1;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={i} className='breakdown-row'>\n\t\t\t\t\t\t\t\t<td>{rate}% Rate</td>\n\t\t\t\t\t\t\t\t{monthColumn && <td>{formatCurrency('il', tax, decimal)}</td>}\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', isAnnual ? annualBreakdown[i][rate] : 0, decimal)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nTableBreakdownRows.propTypes = {\n\thandleClick: globalProps.handleClick,\n\tactive: globalProps.active,\n\trowHeader: breakdownProps.rowHeader,\n\tmonthTotal: breakdownProps.monthTotal,\n\tannualTotal: breakdownProps.annualTotal,\n\tmonthBreakdown: breakdownProps.monthBreakdown,\n\tannualBreakdown: breakdownProps.annualBreakdown,\n\teoy: breakdownProps.eoy,\n\tdecimal: globalProps.decimal\n};\n\nexport default TableBreakdownRows;\n","import React, { Component } from 'react';\nimport { breakdownProps, globalProps } from '../../prop-types';\nimport TableBreakdownRows from './BreakdownRows.js';\nimport './table-breakdown.scss';\n\nclass TableBreakdown extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactive: false\n\t\t};\n\t}\n\n\thandleClick = event => {\n\t\tconst showBreakdown = event.target.ariaPressed === 'true' ? true : false;\n\t\tthis.setState({ active: showBreakdown ? false : true });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<TableBreakdownRows\n\t\t\t\tactive={this.state.active}\n\t\t\t\trowHeader={this.props.rowHeader}\n\t\t\t\tmonthTotal={this.props.monthTotal}\n\t\t\t\tannualTotal={this.props.annualTotal}\n\t\t\t\tmonthBreakdown={this.props.monthBreakdown}\n\t\t\t\tannualBreakdown={this.props.annualBreakdown}\n\t\t\t\thandleClick={this.handleClick}\n\t\t\t\teoy={this.props.eoy}\n\t\t\t\tdecimal={this.props.decimal}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nTableBreakdown.propTypes = {\n\trowHeader: breakdownProps.rowHeader,\n\tmonthTotal: breakdownProps.monthTotal,\n\tannualTotal: breakdownProps.annualTotal,\n\tmonthBreakdown: breakdownProps.monthBreakdown,\n\tannualBreakdown: breakdownProps.annualBreakdown,\n\teoy: breakdownProps.eoy,\n\tdecimal: globalProps.decimal\n};\n\nexport default TableBreakdown;\n","import React from 'react';\nimport { cardProps, globalProps } from '../../prop-types';\nimport Card from 'react-bootstrap/Card';\nimport CloseButton from 'react-bootstrap/CloseButton';\n\nfunction InfoCards(props) {\n\tconst { type, display, title, body, close, handleClick } = props;\n\treturn (\n\t\t<Card\n\t\t\tborder={type}\n\t\t\tstyle={{\n\t\t\t\tdisplay: display === true ? 'block' : 'none'\n\t\t\t}}\n\t\t>\n\t\t\t<Card.Header>\n\t\t\t\t<Card.Title className={`card-icon card-icon--${type}`}>{title}</Card.Title>\n\t\t\t\t{close && <CloseButton onClick={handleClick} />}\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<div className='card-text'>{body}</div>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n\nInfoCards.propTypes = {\n\ttype: cardProps.type,\n\ttitle: cardProps.title,\n\tbody: cardProps.body,\n\tclose: cardProps.close,\n\tdisplay: globalProps.display,\n\thandleClick: globalProps.handleClick\n};\n\nexport default InfoCards;\n","import React, { Component } from 'react';\nimport { cardProps } from '../../prop-types';\nimport InfoCards from './Card';\nimport './info-card.scss';\n\nclass InfoCard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdisplay: true\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tthis.setState({ display: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<InfoCards\n\t\t\t\tdisplay={this.state.display}\n\t\t\t\ttype={this.props.type}\n\t\t\t\ttitle={this.props.title}\n\t\t\t\tbody={this.props.body}\n\t\t\t\tclose={this.props.close}\n\t\t\t\thandleClick={this.handleClick}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nInfoCard.propTypes = {\n\ttype: cardProps.type,\n\ttitle: cardProps.title,\n\tbody: cardProps.body,\n\tclose: cardProps.close\n};\n\nexport default InfoCard;\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport {\n\tbituachLeumiCalc,\n\tpensionMinCalc,\n\tpensionContributionCalc,\n\tpensionReliefCalc,\n\tstudyFundCalc,\n\tincomeTaxCalc,\n\tincomeTaxBandsCalc\n} from '../../utils/tax-calculators';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport TableBreakdown from '../../components/table-breakdown';\nimport { foodAllowanceInfo } from './ResultsEmployeeInfo';\n\nfunction NetPayResultsEmployee(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tcreditPoints,\n\t\tpensionOption,\n\t\tpensionAmount,\n\t\tstudyFundType,\n\t\tstudyFundAmount,\n\t\ttravelAllowance,\n\t\tfoodAllowance,\n\t\totherAllowance,\n\t\tovertime,\n\t\tannualBonus,\n\t\tcommission,\n\t\tshowResultsTable\n\t} = props.stateData;\n\tconst employmentType = props.employmentType;\n\tconst studyFundContribution = studyFundCalc(\n\t\tbaseIncome,\n\t\temploymentType,\n\t\tstudyFundAmount,\n\t\tstudyFundType\n\t);\n\tlet taxableIncome = 0;\n\t[\n\t\tbaseIncome,\n\t\ttravelAllowance,\n\t\tfoodAllowance,\n\t\totherAllowance,\n\t\tannualBonus,\n\t\tcommission,\n\t\tovertime\n\t].forEach(e => {\n\t\ttaxableIncome += typeof e === 'number' && e;\n\t});\n\tconst pensionableIncome = taxableIncome - travelAllowance - annualBonus - overtime;\n\tconst paycheckGross = taxableIncome - foodAllowance;\n\tconst prisa = annualBonus > (taxableIncome - annualBonus) * 0.25;\n\tconst { month: nationalInsurance, annual: annualNationalInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome,\n\t\t'nationalInsurance',\n\t\tannualBonus,\n\t\tprisa\n\t);\n\tconst { month: healthInsurance, annual: annualHealthInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome,\n\t\t'healthInsurance',\n\t\tannualBonus,\n\t\tprisa\n\t);\n\tconst creditPointsTaxCredit = creditPoints * taxData[taxYearIndex].creditPoint;\n\tconst pensionLegalMin = pensionMinCalc(taxData, taxYearIndex, pensionableIncome, employmentType);\n\tconst pensionContribution = pensionContributionCalc(\n\t\tpensionableIncome,\n\t\tpensionLegalMin,\n\t\tpensionOption,\n\t\tpensionAmount\n\t);\n\tconst pensionTaxCredit = pensionReliefCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tpensionContribution,\n\t\tpensionableIncome\n\t);\n\tconst credits = creditPointsTaxCredit + pensionTaxCredit;\n\tconst { incomeTax, annualIncomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttaxableIncome,\n\t\tannualBonus,\n\t\tcredits,\n\t\temploymentType\n\t);\n\tconst { monthlyBandPayments, annualBandPayments } = incomeTaxBandsCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tannualIncomeTax,\n\t\tincomeTax\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{showResultsTable && (\n\t\t\t\t<section>\n\t\t\t\t\t<h2 ref={props.scrollPoint}>Results</h2>\n\t\t\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th>Month</th>\n\t\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Basic Salary</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome, 2)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome * 12, 2)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Taxable Income</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', taxableIncome, 2)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', (taxableIncome - annualBonus) * 12 + annualBonus, 2)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<TableBreakdown\n\t\t\t\t\t\t\t\trowHeader={'Income Tax'}\n\t\t\t\t\t\t\t\tmonthTotal={incomeTax}\n\t\t\t\t\t\t\t\tannualTotal={annualIncomeTax}\n\t\t\t\t\t\t\t\tmonthBreakdown={monthlyBandPayments}\n\t\t\t\t\t\t\t\tannualBreakdown={annualBandPayments}\n\t\t\t\t\t\t\t\tdecimal={2}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>National Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', nationalInsurance, 2)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualNationalInsurance, 2)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Health Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', healthInsurance, 2)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualHealthInsurance, 2)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pension</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution, 2)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution * 12, 2)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{studyFundContribution > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Study Fund</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution, 2)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution * 12, 2)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{annualBonus > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Bonus</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualBonus, 2)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualBonus, 2)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t\t\t<td>Net</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\tpaycheckGross -\n\t\t\t\t\t\t\t\t\t\t\tincomeTax -\n\t\t\t\t\t\t\t\t\t\t\tnationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\thealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\tpensionContribution -\n\t\t\t\t\t\t\t\t\t\t\tstudyFundContribution,\n\t\t\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\t(paycheckGross - annualBonus) * 12 +\n\t\t\t\t\t\t\t\t\t\t\tannualBonus -\n\t\t\t\t\t\t\t\t\t\t\tannualIncomeTax -\n\t\t\t\t\t\t\t\t\t\t\tannualNationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\tannualHealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\t(pensionContribution + studyFundContribution) * 12,\n\t\t\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{foodAllowance > 0 && showResultsTable === true && foodAllowanceInfo(foodAllowance)}\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nNetPayResultsEmployee.propTypes = {\n\temploymentType: globalProps.employmentType,\n\tscrollPoint: globalProps.scrollPoint,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount,\n\t\ttravelAllowance: payrollProps.travelAllowance,\n\t\tfoodAllowance: payrollProps.foodAllowance,\n\t\totherAllowance: payrollProps.otherAllowance,\n\t\tovertime: payrollProps.overtime,\n\t\tannualBonus: payrollProps.annualBonus,\n\t\tcommission: payrollProps.commission,\n\t\tshowResultsTable: globalProps.showResultsTable\n\t})\n};\n\nexport default NetPayResultsEmployee;\n","import React from 'react';\nimport InfoCard from '../../components/info-card';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nexport function foodAllowanceInfo(allowance) {\n\treturn (\n\t\t<InfoCard\n\t\t\ttype='info'\n\t\t\ttitle='10bis or Cibus'\n\t\t\tbody={\n\t\t\t\t<p>\n\t\t\t\t\tYour allowance of {formatCurrency('il', allowance)} has been added to your taxable income,\n\t\t\t\t\tbut as it's not included in your salary payment, it doesn't form part of your net income.\n\t\t\t\t\tIt should still be considered desposible income though.\n\t\t\t\t</p>\n\t\t\t}\n\t\t\tclose={true}\n\t\t/>\n\t);\n}\n","export function pensionReliefCalc(taxData, taxYearIndex, pensionContribution, income) {\n\t//Tax benefit is available as a percent of monthly contributions up to a fixed shekel limit\n\n\tconst { taxCreditMaxPercent, taxCreditMaxShekel, taxCreditRate } =\n\t\ttaxData[taxYearIndex].pension.taxRelief.employee;\n\tconst shekelPercent = income * (taxCreditMaxPercent / 100);\n\tconst ceiling = taxCreditMaxShekel > shekelPercent ? shekelPercent : taxCreditMaxShekel;\n\n\tlet pensionTaxCredit;\n\n\tif (pensionContribution >= ceiling) {\n\t\tpensionTaxCredit = ceiling * (taxCreditRate / 100);\n\t} else {\n\t\tpensionTaxCredit = pensionContribution * (taxCreditRate / 100);\n\t}\n\n\treturn pensionTaxCredit;\n}\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types';\nimport Table from 'react-bootstrap/table';\nimport {\n\tbituachLeumiCalc,\n\tniDeductableSelfEmpCalc,\n\tpensionMinCalc,\n\tpensionContributionCalc,\n\tpensionReliefCalcSelfEmp,\n\tstudyFundAllowances,\n\tstudyFundCalc,\n\tincomeTaxCalc,\n\tincomeTaxBandsCalc,\n\tniDeductableAdvanceSelfEmpCalc\n} from '../../utils/tax-calculators';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport TableBreakdown from '../../components/table-breakdown';\n\nfunction NetPayResultsSelfEmployed(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tcreditPoints,\n\t\tbituachLeumiAdvance,\n\t\tpensionOption,\n\t\tpensionType,\n\t\tpensionAmount,\n\t\tstudyFundType,\n\t\tstudyFundAmount,\n\t\tshowResultsTable\n\t} = props.stateData;\n\tconst employmentType = props.employmentType;\n\tconst studyFundTaxAllowance = studyFundAllowances(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\temploymentType\n\t);\n\tconst { studyFundContribution, studyFundTaxDeductible } = studyFundCalc(\n\t\tbaseIncome,\n\t\temploymentType,\n\t\tstudyFundAmount,\n\t\tstudyFundType,\n\t\tstudyFundTaxAllowance\n\t);\n\tconst pensionLegalMin = pensionMinCalc(taxData, taxYearIndex, baseIncome, employmentType);\n\tconst pensionContribution = pensionContributionCalc(\n\t\tbaseIncome,\n\t\tpensionLegalMin,\n\t\tpensionOption,\n\t\tpensionAmount,\n\t\tpensionType\n\t);\n\tconst { pensionTaxDeductible, pensionTaxCredit } = pensionReliefCalcSelfEmp(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tbaseIncome,\n\t\tpensionContribution\n\t);\n\tconst taxableIncome = baseIncome - studyFundTaxDeductible - pensionTaxDeductible;\n\tconst bituachLeumiDeductible = niDeductableSelfEmpCalc(taxData, taxYearIndex, taxableIncome);\n\tconst { month: nationalInsurance, annual: annualNationalInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'nationalInsurance'\n\t);\n\tconst { month: healthInsurance, annual: annualHealthInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'healthInsurance'\n\t);\n\tconst creditPointsTaxCredit = creditPoints * taxData[taxYearIndex].creditPoint;\n\tconst niIncomeTaxDeductable = niDeductableAdvanceSelfEmpCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tbituachLeumiAdvance\n\t);\n\tconst incomeTaxTaxableIncome = taxableIncome - niIncomeTaxDeductable;\n\tconst credits = creditPointsTaxCredit + pensionTaxCredit;\n\tconst { incomeTax, annualIncomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTaxTaxableIncome,\n\t\t0,\n\t\tcredits,\n\t\temploymentType\n\t);\n\tconst { monthlyBandPayments, annualBandPayments } = incomeTaxBandsCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tannualIncomeTax\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{showResultsTable && (\n\t\t\t\t<section>\n\t\t\t\t\t<h2 ref={props.scrollPoint}>Results</h2>\n\t\t\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th>Month</th>\n\t\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Profit</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', baseIncome * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<TableBreakdown\n\t\t\t\t\t\t\t\trowHeader={'Income Tax'}\n\t\t\t\t\t\t\t\tmonthTotal={incomeTax}\n\t\t\t\t\t\t\t\tannualTotal={annualIncomeTax}\n\t\t\t\t\t\t\t\tmonthBreakdown={monthlyBandPayments}\n\t\t\t\t\t\t\t\tannualBreakdown={annualBandPayments}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>National Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', nationalInsurance)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualNationalInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Health Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', healthInsurance)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', annualHealthInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pension</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution)}</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution * 12)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{studyFundContribution > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Study Fund</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution * 12)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t\t\t<td>Net</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\tbaseIncome -\n\t\t\t\t\t\t\t\t\t\t\tincomeTax -\n\t\t\t\t\t\t\t\t\t\t\tnationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\thealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\tpensionContribution -\n\t\t\t\t\t\t\t\t\t\t\tstudyFundContribution\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\tbaseIncome * 12 -\n\t\t\t\t\t\t\t\t\t\t\tannualIncomeTax -\n\t\t\t\t\t\t\t\t\t\t\tannualNationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\tannualHealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\t(pensionContribution + studyFundContribution) * 12\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nNetPayResultsSelfEmployed.propTypes = {\n\temploymentType: globalProps.employmentType,\n\tscrollPoint: globalProps.scrollPoint,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tbaseIncome: payrollProps.baseIncome,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount,\n\t\tshowResultsTable: globalProps.showResultsTable,\n\t\tbituachLeumiAdvance: payrollProps.bituachLeumiAdvance\n\t})\n};\n\nexport default NetPayResultsSelfEmployed;\n","export function scrollToRef(reference) {\n\treference.scrollIntoView({\n\t\tbehavior: 'smooth'\n\t});\n}\n","import React, { Component } from 'react';\nimport { globalProps } from '../../prop-types';\nimport taxData from '../../data/payroll';\nimport NetPayForm from './Form';\nimport NetPayResultsEmployee from './ResultsEmployee';\nimport NetPayResultsSelfEmployed from './ResultsSelfEmployed';\nimport { scrollToRef } from '../../utils/scrollToRef';\n\nclass NetPayCalculator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttaxYearIndex: 0,\n\t\t\tbaseIncome: '',\n\t\t\tcreditPoints: '',\n\t\t\tbituachLeumiAdvance: '',\n\t\t\tpensionOption: 'legalMin',\n\t\t\tpensionType: props.employmentType === 'employee' ? 'percent' : 'shekel',\n\t\t\tpensionAmount: '',\n\t\t\tstudyFundType: props.employmentType === 'employee' ? 'percent' : 'shekel',\n\t\t\tstudyFundAmount: '',\n\t\t\ttravelAllowance: '',\n\t\t\tfoodAllowance: '',\n\t\t\totherAllowance: '',\n\t\t\tannualBonus: '',\n\t\t\tcommission: '',\n\t\t\tovertime: '',\n\t\t\tvalidated: false,\n\t\t\tshowResultsTable: false\n\t\t};\n\t\tthis.scrollPoint = React.createRef();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t//Reset state when change forms\n\t\tif (prevProps.employmentType !== this.props.employmentType) {\n\t\t\tthis.setState({\n\t\t\t\tbaseIncome: '',\n\t\t\t\tcreditPoints: '',\n\t\t\t\tpensionOption: 'legalMin',\n\t\t\t\tpensionAmount: '',\n\t\t\t\tstudyFundAmount: '',\n\t\t\t\tvalidated: false,\n\t\t\t\tshowResultsTable: false\n\t\t\t});\n\t\t\tif (this.props.employmentType === 'employee') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpensionType: 'percent',\n\t\t\t\t\tstudyFundType: 'percent'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpensionType: 'shekel',\n\t\t\t\t\tstudyFundType: 'shekel',\n\t\t\t\t\ttravelAllowance: '',\n\t\t\t\t\tfoodAllowance: '',\n\t\t\t\t\totherAllowance: '',\n\t\t\t\t\tannualBonus: '',\n\t\t\t\t\tcommission: '',\n\t\t\t\t\tovertime: ''\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = event => {\n\t\tconst { name, value, type } = event.target;\n\t\tthis.setState({\n\t\t\t[name]: type === 'number' ? parseFloat(value) || '' : value,\n\t\t\tshowResultsTable: false\n\t\t});\n\n\t\tif (name === 'baseIncome' && value === '') {\n\t\t\tthis.setState({\n\t\t\t\tpensionOption: 'legalMin'\n\t\t\t});\n\t\t}\n\t};\n\n\thandleSubmit = event => {\n\t\tconst form = event.currentTarget;\n\n\t\tif (form.checkValidity() === true) {\n\t\t\tthis.setState({\n\t\t\t\tshowResultsTable: true,\n\t\t\t\tvalidated: false //Hides validation text\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tscrollToRef(this.scrollPoint.current);\n\t\t\t}, 150);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tvalidated: true\n\t\t\t});\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<NetPayForm\n\t\t\t\t\temploymentType={this.props.employmentType}\n\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\tstateData={this.state}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t\t{this.props.employmentType === 'employee' && (\n\t\t\t\t\t<NetPayResultsEmployee\n\t\t\t\t\t\temploymentType={this.props.employmentType}\n\t\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\t\tstateData={this.state}\n\t\t\t\t\t\tscrollPoint={this.scrollPoint}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.props.employmentType === 'selfEmployed' && (\n\t\t\t\t\t<NetPayResultsSelfEmployed\n\t\t\t\t\t\temploymentType={this.props.employmentType}\n\t\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\t\tstateData={this.state}\n\t\t\t\t\t\tscrollPoint={this.scrollPoint}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nNetPayCalculator.propTypes = {\n\temploymentType: globalProps.employmentType\n};\n\nexport default NetPayCalculator;\n","import React from 'react';\nimport { globalProps } from '../../prop-types';\nimport './net-pay.scss';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport NetPayCalculator from './Calculator';\nimport { camelToKebab, capitaliseFirst } from '../../utils/caseConvertor';\n\nfunction NetPay(props) {\n\tconst employment = props.employmentType;\n\n\treturn (\n\t\t<>\n\t\t\t<Hero\n\t\t\t\th1={`${capitaliseFirst(camelToKebab(employment))} Net Pay Calculator`}\n\t\t\t\theroImage='netPay'\n\t\t\t/>\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Net Pay</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUse the calculator to determine your net pay, which is the amount you're left with after\n\t\t\t\t\t\tall tax and other deductions have been applied.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tEnter your monthly financials, but it's important to be aware that final taxes are\n\t\t\t\t\t\tcalculated on your annual income.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<NetPayCalculator employmentType={employment} />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nNetPay.propTypes = {\n\temploymentType: globalProps.employmentType\n};\n\nexport default NetPay;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form, Row } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport { invalidNum } from '../../../utils/validationText';\nimport { isZeroOrGreater } from '../../../utils/comparisons';\nimport { formatNumberPlain } from '../../../utils/formatNumber';\n\nfunction EndOfYearRevenue(props) {\n\tconst { income, expenses, profit, creditPoints, bituachLeumiAdvance } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formSize = ['xs=6', 'md=3'];\n\tconst formIndex = props.formIndex;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Revenue</Form.Label>\n\t\t\t<Row className='eoy-income'>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Total income'\n\t\t\t\t\tname={`income${formIndex}`}\n\t\t\t\t\tvalue={income[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(income[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Expenses'\n\t\t\t\t\tname={`expenses${formIndex}`}\n\t\t\t\t\tvalue={expenses[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(expenses[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Profit'\n\t\t\t\t\tname={`profit${formIndex}`}\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tprofit[formIndex] > 0 ? formatNumberPlain(profit[formIndex], 2) : profit[formIndex]\n\t\t\t\t\t}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={true}\n\t\t\t\t\terror={profit[formIndex] < 0 ? 'Profit cannot be minus.' : invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Tax credit points'\n\t\t\t\t\tname={`creditPoints${formIndex}`}\n\t\t\t\t\tvalue={creditPoints[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(creditPoints[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tclassName='bituach-leumi-field'\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tlabel='Bituach Leumi advances'\n\t\t\t\t\tname={`bituachLeumiAdvance${formIndex}`}\n\t\t\t\t\tvalue={bituachLeumiAdvance[formIndex]}\n\t\t\t\t\tlabelColumns={formSize}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired={isZeroOrGreater(bituachLeumiAdvance[formIndex])}\n\t\t\t\t\terror={invalidNum}\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t</fieldset>\n\t);\n}\n\nEndOfYearRevenue.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tformIndex: formProps.formIndex,\n\tstateData: globalProps.shape({\n\t\tincome: payrollProps.income,\n\t\texpenses: payrollProps.expenses,\n\t\tprofit: payrollProps.profit,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tbituachLeumiAdvance: payrollProps.bituachLeumiAdvance\n\t})\n};\n\nexport default EndOfYearRevenue;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form, Row } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport InputRadio from '../../../components/form-inputs/InputRadio';\nimport { invalidNum } from '../../../utils/validationText';\nimport { invalidPercent } from '../../../utils/validationText';\n\nfunction EndOfYearPension(props) {\n\tconst { fiscalPeriod, profit, pensionOption, pensionType, pensionAmount } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formIndex = props.formIndex;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Pension</Form.Label>\n\t\t\t<Row className='hideLabels'>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Option'\n\t\t\t\t\tname={`pensionOption${formIndex}`}\n\t\t\t\t\tstate={pensionOption[formIndex]}\n\t\t\t\t\tbtnLabel={[`${fiscalPeriod === 'annual' ? 'Minium' : 'Minimum\\u{0002A}'}`, 'Custom']}\n\t\t\t\t\tbtnValue={['legalMin', 'custom']}\n\t\t\t\t\tdisabled={[false, profit[formIndex] <= 0]}\n\t\t\t\t\tlabelColumns={pensionOption[formIndex] === 'legalMin' ? ['xs=12'] : ['md=4', 'lg=5']}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\thelp='Enter income or profit to select custom.'\n\t\t\t\t\thelpInput='custom'\n\t\t\t\t\thelpCondition={profit[formIndex] <= 0}\n\t\t\t\t/>\n\t\t\t\t{pensionOption[formIndex] === 'custom' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InputRadio\n\t\t\t\t\t\t\tlabel='Type'\n\t\t\t\t\t\t\tname={`pensionType${formIndex}`}\n\t\t\t\t\t\t\tstate={pensionType[formIndex]}\n\t\t\t\t\t\t\tbtnLabel={['Shekel', 'Percent']}\n\t\t\t\t\t\t\tbtnValue={['shekel', 'percent']}\n\t\t\t\t\t\t\tlabelColumns={['xs=7', 'md=4', 'lg=4']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tlabel='Amount'\n\t\t\t\t\t\t\tname={`pensionAmount${formIndex}`}\n\t\t\t\t\t\t\tvalue={pensionAmount[formIndex]}\n\t\t\t\t\t\t\tsymbol={pensionType[formIndex] === 'percent' ? '%' : '₪'}\n\t\t\t\t\t\t\tmax={pensionType[formIndex] === 'percent' ? 100 : undefined}\n\t\t\t\t\t\t\tlabelColumns={['xs=5', 'md=4', 'lg=3']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terror={pensionType[formIndex] === 'percent' ? `${invalidPercent}` : `${invalidNum}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Row>\n\t\t</fieldset>\n\t);\n}\n\nEndOfYearPension.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tformIndex: formProps.formIndex,\n\tstateData: globalProps.shape({\n\t\tfiscalPeriod: payrollProps.fiscalPeriod,\n\t\tprofit: payrollProps.profit,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount\n\t})\n};\n\nexport default EndOfYearPension;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../../prop-types';\nimport { Form, Row } from 'react-bootstrap';\nimport InputField from '../../../components/form-inputs/InputField';\nimport InputRadio from '../../../components/form-inputs/InputRadio';\nimport { invalidNum } from '../../../utils/validationText';\nimport { invalidPercent } from '../../../utils/validationText';\n\nfunction EndOfYearStudyFund(props) {\n\tconst { studyFundOption, studyFundType, studyFundAmount } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst language = props.language;\n\tconst formIndex = props.formIndex;\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<Form.Label as='legend'>Study Fund</Form.Label>\n\t\t\t<Row className='hideLabels'>\n\t\t\t\t<InputRadio\n\t\t\t\t\tlabel='Option'\n\t\t\t\t\tname={`studyFundOption${formIndex}`}\n\t\t\t\t\tstate={studyFundOption[formIndex]}\n\t\t\t\t\tbtnLabel={['None', 'Maximum\\u{0002A}\\u{0002A}', 'Custom']}\n\t\t\t\t\tbtnValue={['none', 'maximum', 'custom']}\n\t\t\t\t\tlabelColumns={studyFundOption[formIndex] === 'custom' ? ['md=4', 'lg=5'] : ['xs=12']}\n\t\t\t\t\thorizontal={false}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t{studyFundOption[formIndex] === 'custom' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InputRadio\n\t\t\t\t\t\t\tlabel='Type'\n\t\t\t\t\t\t\tname={`studyFundType${formIndex}`}\n\t\t\t\t\t\t\tstate={studyFundType[formIndex]}\n\t\t\t\t\t\t\tbtnLabel={['Shekel', 'Percent']}\n\t\t\t\t\t\t\tbtnValue={['shekel', 'percent']}\n\t\t\t\t\t\t\tlabelColumns={['xs=7', 'md=4', 'lg=4']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tlabel='Amount'\n\t\t\t\t\t\t\tname={`studyFundAmount${formIndex}`}\n\t\t\t\t\t\t\tvalue={studyFundAmount[formIndex]}\n\t\t\t\t\t\t\tsymbol={studyFundType[formIndex] === 'percent' ? '%' : '₪'}\n\t\t\t\t\t\t\tmax={studyFundType[formIndex] === 'percent' ? 100 : undefined}\n\t\t\t\t\t\t\tlabelColumns={['xs=5', 'md=4', 'lg=3']}\n\t\t\t\t\t\t\thorizontal={false}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terror={studyFundType[formIndex] === 'percent' ? `${invalidPercent}` : `${invalidNum}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Row>\n\t\t</fieldset>\n\t);\n}\n\nEndOfYearStudyFund.propTypes = {\n\thandleChange: globalProps.handleChange,\n\tlanguage: globalProps.language,\n\tformIndex: formProps.formIndex,\n\tstateData: globalProps.shape({\n\t\tstudyFundOption: payrollProps.studyFundOption,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount\n\t})\n};\n\nexport default EndOfYearStudyFund;\n","import React from 'react';\nimport { globalProps, payrollProps, formProps } from '../../prop-types/index';\nimport { Form, ButtonGroup, ToggleButton, Button, Row, Col } from 'react-bootstrap';\nimport LanguageContext from '../../contexts/LanguageContext';\nimport EndOfYearRevenue from './form-sections/Revenue';\nimport EndOfYearPension from './form-sections/Pension';\nimport EndOfYearStudyFund from './form-sections/StudyFund';\nimport PayrollTaxYearBtn from '../../components/buttons/PayrollYear';\n\nfunction EndOfYearForm(props) {\n\tconst stateData = props.stateData;\n\tconst { fiscalPeriod, pensionOption, studyFundOption, validated } = props.stateData;\n\tconst handleChange = props.handleChange;\n\tconst months = [\n\t\t'January',\n\t\t'February',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December'\n\t];\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Calculator</h2>\n\t\t\t<Row className='justify-content-center mb-3'>\n\t\t\t\t<Col xs={'auto'}>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t{['Annual', 'Quarterly', 'Monthly'].map((period, i) => (\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tid={`fiscal-period-${i}`}\n\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\tvariant='outline-primary'\n\t\t\t\t\t\t\t\tname='fiscalPeriod'\n\t\t\t\t\t\t\t\tvalue={period.toLowerCase()}\n\t\t\t\t\t\t\t\tchecked={fiscalPeriod === period.toLowerCase()}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{period}\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Form\n\t\t\t\tid='endofyear-form'\n\t\t\t\tnoValidate\n\t\t\t\tvalidated={validated}\n\t\t\t\tonSubmit={props.handleSubmit}\n\t\t\t\tclassName='vertical-form'\n\t\t\t>\n\t\t\t\t<PayrollTaxYearBtn handleChange={handleChange} />\n\n\t\t\t\t{pensionOption.map((forms, i) => {\n\t\t\t\t\tconst fullWidth =\n\t\t\t\t\t\tpensionOption[i] === 'custom' || (studyFundOption[i] === 'custom' && true);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<fieldset key={i} className='mb-3'>\n\t\t\t\t\t\t\t<Form.Label as='legend' className={fiscalPeriod === 'annual' && 'visually-hidden'}>\n\t\t\t\t\t\t\t\t{fiscalPeriod === 'annual'\n\t\t\t\t\t\t\t\t\t? 'Annual'\n\t\t\t\t\t\t\t\t\t: fiscalPeriod === 'quarterly'\n\t\t\t\t\t\t\t\t\t? `Quarter ${i + 1}`\n\t\t\t\t\t\t\t\t\t: months[i]}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<LanguageContext.Consumer>\n\t\t\t\t\t\t\t\t{value => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<EndOfYearRevenue\n\t\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tformIndex={i}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={fullWidth && 12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<EndOfYearPension\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tformIndex={i}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={fullWidth && 12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<EndOfYearStudyFund\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguage={value.language}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateData={stateData}\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tformIndex={i}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</LanguageContext.Consumer>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<small style={{ display: 'block', paddingBottom: '1rem' }}>\n\t\t\t\t\t<sup>&#42;&#42;</sup>Calculated pro rata based on tax deductible.\n\t\t\t\t</small>\n\t\t\t\t{fiscalPeriod !== 'annual' && (\n\t\t\t\t\t<small style={{ display: 'block', paddingBottom: '1rem' }}>\n\t\t\t\t\t\t<sup>&#42;</sup>Calculated pro rata.\n\t\t\t\t\t</small>\n\t\t\t\t)}\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tCalculate\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</section>\n\t);\n}\n\nEndOfYearForm.propTypes = {\n\thandleSubmit: globalProps.handleSubmit,\n\thandleChange: globalProps.handleChange,\n\tstateData: globalProps.shape({\n\t\tfiscalPeriod: payrollProps.fiscalPeriod,\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tstudyFundOption: payrollProps.studyFundOption,\n\t\tvalidated: formProps.validated\n\t})\n};\n\nexport default EndOfYearForm;\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types/index';\nimport { Table } from 'react-bootstrap';\nimport {\n\tincomeTaxCalc,\n\tbituachLeumiCalc,\n\tniDeductableSelfEmpCalc,\n\tpensionMinCalc,\n\tpensionContributionCalc,\n\tpensionReliefCalcSelfEmp,\n\tstudyFundAllowances,\n\tstudyFundCalc,\n\tincomeTaxBandsCalc,\n\tniDeductableAdvanceSelfEmpCalc\n} from '../../utils/tax-calculators';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport TableBreakdown from '../../components/table-breakdown';\n\nfunction EndOfYearResults(props) {\n\tconst taxData = props.taxData;\n\tconst {\n\t\ttaxYearIndex,\n\t\tincome,\n\t\texpenses,\n\t\tprofit,\n\t\tcreditPoints,\n\t\tbituachLeumiAdvance,\n\t\tpensionOption,\n\t\tpensionType,\n\t\tpensionAmount,\n\t\tstudyFundOption,\n\t\tstudyFundType,\n\t\tstudyFundAmount,\n\t\tshowResultsTable,\n\t\tshowExtended\n\t} = props.stateData;\n\tconst handleClick = props.handleClick;\n\tconst total = array => {\n\t\tconst filteredArray = array.filter(Boolean);\n\n\t\tif (filteredArray.length === 0 && filteredArray[0] === undefined) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn filteredArray.reduce((previousValue, currentValue) => previousValue + currentValue);\n\t\t}\n\t};\n\tconst totalIncome = total(income);\n\tconst totalExpenses = total(expenses);\n\tconst totalProfit = total(profit);\n\tconst creditPointsTaxCredit = total(creditPoints) * taxData[taxYearIndex].creditPoint;\n\tconst totalbituachLeumiAdvance = total(bituachLeumiAdvance);\n\tconst employmentType = 'selfEmployed';\n\tconst eoy = true;\n\tconst pensionLegalMin = pensionMinCalc(taxData, taxYearIndex, totalProfit, employmentType, eoy);\n\tconst pensionContribution = pensionContributionCalc(\n\t\tprofit,\n\t\tpensionLegalMin,\n\t\tpensionOption,\n\t\tpensionAmount,\n\t\tpensionType,\n\t\teoy\n\t);\n\tconst { pensionTaxDeductible, pensionTaxCredit } = pensionReliefCalcSelfEmp(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttotalProfit,\n\t\tpensionContribution,\n\t\teoy\n\t);\n\tconst studyFundTaxAllowance = studyFundAllowances(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttotalProfit,\n\t\temploymentType,\n\t\teoy\n\t);\n\tconst { studyFundContribution, studyFundTaxDeductible } = studyFundCalc(\n\t\tprofit,\n\t\temploymentType,\n\t\tstudyFundAmount,\n\t\tstudyFundType,\n\t\tstudyFundTaxAllowance,\n\t\tstudyFundOption,\n\t\teoy\n\t);\n\tconst taxableIncome = totalProfit - studyFundTaxDeductible - pensionTaxDeductible;\n\tconst bituachLeumiDeductible = niDeductableSelfEmpCalc(taxData, taxYearIndex, taxableIncome, eoy);\n\tconst { month: nationalInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'nationalInsurance',\n\t\t0,\n\t\tfalse,\n\t\teoy\n\t);\n\tconst { month: healthInsurance } = bituachLeumiCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\temploymentType,\n\t\ttaxableIncome - bituachLeumiDeductible,\n\t\t'healthInsurance',\n\t\t0,\n\t\tfalse,\n\t\teoy\n\t);\n\tconst niIncomeTaxDeductable = niDeductableAdvanceSelfEmpCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\ttotalbituachLeumiAdvance,\n\t\teoy\n\t);\n\tconst incomeTaxTaxableIncome = taxableIncome - niIncomeTaxDeductable;\n\tconst credits = creditPointsTaxCredit + pensionTaxCredit;\n\tconst { annualIncomeTax: grossIncomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTaxTaxableIncome,\n\t\t0,\n\t\t0,\n\t\temploymentType,\n\t\teoy\n\t);\n\tconst { annualIncomeTax: incomeTax } = incomeTaxCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTaxTaxableIncome,\n\t\t0,\n\t\tcredits,\n\t\temploymentType,\n\t\teoy\n\t);\n\tconst { monthlyBandPayments, annualBandPayments } = incomeTaxBandsCalc(\n\t\ttaxData,\n\t\ttaxYearIndex,\n\t\tincomeTax\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{showResultsTable && (\n\t\t\t\t<section>\n\t\t\t\t\t<h2 ref={props.scrollPoint}>Results</h2>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn-link'\n\t\t\t\t\t\taria-pressed={showExtended ? 'true' : 'false'}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tView Extended Results\n\t\t\t\t\t</button>\n\t\t\t\t\t<Table striped bordered className='table--col-2'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th>Total</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{totalIncome > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Income</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', totalIncome)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{totalExpenses > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Expenses</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', totalExpenses)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Profit</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', totalProfit)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{showExtended && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>National Insurance Advance Deductable</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', niIncomeTaxDeductable)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Pension Tax Deductible</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionTaxDeductible)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Study Fund Tax Deductible</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundTaxDeductible)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Taxable Income: Income Tax</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', incomeTaxTaxableIncome)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Gross Tax</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', grossIncomeTax)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Pension Tax Credit</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionTaxCredit)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Tax Points Credit</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', creditPointsTaxCredit)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<TableBreakdown\n\t\t\t\t\t\t\t\trowHeader={'Income Tax'}\n\t\t\t\t\t\t\t\tannualTotal={incomeTax}\n\t\t\t\t\t\t\t\tmonthBreakdown={monthlyBandPayments}\n\t\t\t\t\t\t\t\tannualBreakdown={annualBandPayments}\n\t\t\t\t\t\t\t\teoy={eoy}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{showExtended && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>National Insurance Deductable</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', bituachLeumiDeductible)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Taxable Income: Bituach Leumi</td>\n\t\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', taxableIncome - bituachLeumiDeductible)}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>National Insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', nationalInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Health insurance</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', healthInsurance)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pension</td>\n\t\t\t\t\t\t\t\t<td>{formatCurrency('il', pensionContribution)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{studyFundContribution > 0 && (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Study Fund</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', studyFundContribution)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t\t\t<td>Net</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t{formatCurrency(\n\t\t\t\t\t\t\t\t\t\t'il',\n\t\t\t\t\t\t\t\t\t\ttotalProfit -\n\t\t\t\t\t\t\t\t\t\t\tincomeTax -\n\t\t\t\t\t\t\t\t\t\t\tnationalInsurance -\n\t\t\t\t\t\t\t\t\t\t\thealthInsurance -\n\t\t\t\t\t\t\t\t\t\t\tpensionContribution -\n\t\t\t\t\t\t\t\t\t\t\tstudyFundContribution\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nEndOfYearResults.propTypes = {\n\tscrollPoint: globalProps.scrollPoint,\n\ttaxData: payrollProps.taxData,\n\tstateData: globalProps.shape({\n\t\ttaxYearIndex: payrollProps.taxYearIndex,\n\t\tincome: payrollProps.income,\n\t\texpenses: payrollProps.expenses,\n\t\tprofit: payrollProps.profit,\n\t\tcreditPoints: payrollProps.creditPoints,\n\t\tpensionOption: payrollProps.pensionOption,\n\t\tpensionType: payrollProps.pensionType,\n\t\tpensionAmount: payrollProps.pensionAmount,\n\t\tstudyFundOption: payrollProps.studyFundOption,\n\t\tstudyFundType: payrollProps.studyFundType,\n\t\tstudyFundAmount: payrollProps.studyFundAmount,\n\t\tshowResultsTable: globalProps.showResultsTable,\n\t\tbituachLeumiAdvance: payrollProps.bituachLeumiAdvance,\n\t\tshowExtended: payrollProps.showExtended\n\t}),\n\thandleClick: globalProps.handleClick\n};\n\nexport default EndOfYearResults;\n","import React, { Component } from 'react';\nimport taxData from '../../data/payroll';\nimport EndOfYearForm from './Form';\nimport EndOfYearResults from './Results';\nimport { scrollToRef } from '../../utils/scrollToRef';\n\nclass EndOfYearCalculator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfiscalPeriod: 'annual',\n\t\t\ttaxYearIndex: 0,\n\t\t\tincome: [''],\n\t\t\texpenses: [''],\n\t\t\tprofit: [''],\n\t\t\tcreditPoints: [''],\n\t\t\tbituachLeumiAdvance: [''],\n\t\t\tpensionOption: ['legalMin'],\n\t\t\tpensionType: ['shekel'],\n\t\t\tpensionAmount: [''],\n\t\t\tstudyFundOption: ['none'],\n\t\t\tstudyFundType: ['shekel'],\n\t\t\tstudyFundAmount: [''],\n\t\t\tvalidated: false,\n\t\t\tshowResultsTable: false,\n\t\t\tshowExtended: false\n\t\t};\n\t\tthis.scrollPoint = React.createRef();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t//Reset state when change fiscal input choice\n\t\tconst fiscalPeriod = this.state.fiscalPeriod;\n\t\tconst indexes = fiscalPeriod === 'annual' ? 1 : fiscalPeriod === 'quarterly' ? 4 : 12;\n\n\t\tif (prevState.fiscalPeriod !== fiscalPeriod) {\n\t\t\tthis.setState({\n\t\t\t\tincome: Array(indexes).fill(''),\n\t\t\t\texpenses: Array(indexes).fill(''),\n\t\t\t\tprofit: Array(indexes).fill(''),\n\t\t\t\tcreditPoints: Array(indexes).fill(''),\n\t\t\t\tbituachLeumiAdvance: Array(indexes).fill(''),\n\t\t\t\tpensionOption: Array(indexes).fill('legalMin'),\n\t\t\t\tpensionType: Array(indexes).fill('shekel'),\n\t\t\t\tpensionAmount: Array(indexes).fill(''),\n\t\t\t\tstudyFundOption: Array(indexes).fill('none'),\n\t\t\t\tstudyFundType: Array(indexes).fill('shekel'),\n\t\t\t\tstudyFundAmount: Array(indexes).fill(''),\n\t\t\t\tvalidated: false\n\t\t\t});\n\t\t}\n\t\t//End\n\t}\n\n\thandleChange = event => {\n\t\tconst { name, value, type } = event.target;\n\t\tconst { pensionOption } = this.state;\n\t\tconst stateIndex = parseInt(name.match(/\\d+/));\n\t\tconst stateName = name.replace(stateIndex, '');\n\t\t//Iterate array and update the changed value\n\t\tconst updateArray = (stateID, changedValue) => {\n\t\t\treturn [...this.state[stateID]].map((currentValue, i) => {\n\t\t\t\treturn i === stateIndex ? changedValue : currentValue;\n\t\t\t});\n\t\t};\n\t\t//End\n\n\t\tif (isNaN(stateIndex)) {\n\t\t\tthis.setState({\n\t\t\t\t[name]: type === 'number' ? parseFloat(value) || '' : value\n\t\t\t});\n\t\t} else {\n\t\t\tconst newValue = type === 'number' ? parseFloat(value) || '' : value;\n\t\t\tthis.setState({\n\t\t\t\t[stateName]: updateArray(stateName, newValue)\n\t\t\t});\n\n\t\t\tif (stateName === 'income' || stateName === 'expenses') {\n\t\t\t\tconst isIncome = stateName === 'income' && true;\n\t\t\t\tconst profitValue = isIncome\n\t\t\t\t\t? value - this.state.expenses[stateIndex]\n\t\t\t\t\t: this.state.income[stateIndex] - value;\n\n\t\t\t\tif (profitValue <= 0 && pensionOption[stateIndex] === 'custom') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpensionOption: updateArray('pensionOption', 'legalMin')\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tprofit: updateArray('profit', profitValue)\n\t\t\t\t});\n\t\t\t} else if (stateName === 'profit' && value <= 0 && pensionOption[stateIndex] === 'custom') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpensionOption: updateArray('pensionOption', 'legalMin')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tshowResultsTable: false,\n\t\t\tshowExtended: false\n\t\t});\n\t};\n\n\thandleSubmit = event => {\n\t\tconst form = event.currentTarget;\n\n\t\tif (form.checkValidity() === true) {\n\t\t\tthis.setState({\n\t\t\t\tshowResultsTable: true,\n\t\t\t\tvalidated: false //Hides validation text\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tscrollToRef(this.scrollPoint.current);\n\t\t\t}, 150);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tvalidated: true\n\t\t\t});\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t};\n\n\thandleClick = event => {\n\t\tconst extendedActive = event.target.ariaPressed === 'true' ? true : false;\n\t\tthis.setState({ showExtended: extendedActive ? false : true });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EndOfYearForm\n\t\t\t\t\tstateData={this.state}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t\t<EndOfYearResults\n\t\t\t\t\ttaxData={taxData}\n\t\t\t\t\tstateData={this.state}\n\t\t\t\t\tscrollPoint={this.scrollPoint}\n\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default EndOfYearCalculator;\n","import React from 'react';\nimport './end-of-year.scss';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport EndOfYearCalculator from './Calculator';\n\nfunction EndOfYear() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='End of Year Calculator' heroImage='netPay' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Net Pay</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUse the calculator to determine your net pay for the year, which is the amount you're\n\t\t\t\t\t\tleft with after all tax and other deductions have been applied.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<EndOfYearCalculator />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default EndOfYear;\n","import React from 'react';\nimport { payrollProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction TaxBandRates(props) {\n\tconst { taxData, taxYearIndex } = props;\n\tconst taxBands = Object.keys(taxData[taxYearIndex].incomeTax);\n\n\treturn (\n\t\t<section>\n\t\t\t<Table striped bordered className='table--col-3-reverse'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th>Rate</th>\n\t\t\t\t\t\t<th>Annual</th>\n\t\t\t\t\t\t<th>Monthly Equivalent</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{taxBands.map((taxBand, i) => {\n\t\t\t\t\t\tconst { rate, min, max } = taxData[taxYearIndex].incomeTax[taxBand];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td>{rate}%</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency('il', min)}\n\t\t\t\t\t\t\t\t\t{max !== undefined ? `-${formatCurrency('il', max)}` : ' and above'}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{formatCurrency('il', min === 0 ? min : min / 12 + 1)}\n\t\t\t\t\t\t\t\t\t{max !== undefined ? `-${formatCurrency('il', max / 12)}` : ' and above'}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nTaxBandRates.propTypes = {\n\ttaxData: payrollProps.taxData,\n\ttaxYearIndex: payrollProps.taxYearIndex\n};\n\nexport default TaxBandRates;\n","import React, { Component } from 'react';\nimport taxData from '../../data/payroll.json';\nimport PayrollTaxYearBtn from '../../components/buttons/PayrollYear';\nimport TaxBandRates from './TableRates.js';\n\nclass TaxBandsTable extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttaxYearIndex: taxData.length - 1\n\t\t};\n\t}\n\n\thandleChange = event => {\n\t\tthis.setState({\n\t\t\ttaxYearIndex: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<PayrollTaxYearBtn\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tcontrolled={true}\n\t\t\t\t\tstartIndex={this.state.taxYearIndex}\n\t\t\t\t/>\n\t\t\t\t<TaxBandRates taxData={taxData} taxYearIndex={this.state.taxYearIndex} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default TaxBandsTable;\n","import React from 'react';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport TaxBandsTable from './Table';\n\nfunction TaxBands() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Income Tax Bands' heroImage='taxTable' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Tax Bands</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIncome tax is calculated on your annual income, but monthly bands have been included for\n\t\t\t\t\t\tcomparrison.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<TaxBandsTable />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default TaxBands;\n","import React from 'react';\nimport { globalProps, payrollProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction CreditPointsTableValues(props) {\n\tconst { taxData, displayItems } = props;\n\tconst allItems = taxData.length;\n\tlet displayYears = [];\n\n\tfor (let i = allItems - 1; i >= allItems - displayItems; i--) {\n\t\tdisplayYears.push(taxData[i]);\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<div className='container--sm'>\n\t\t\t\t<Table striped bordered className='table--equal'>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t<th>Point Value</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{displayYears.map((year, i) => {\n\t\t\t\t\t\t\tconst taxYear = year.taxYear;\n\t\t\t\t\t\t\tconst creditPoint = year.creditPoint;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t<td>{taxYear}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatCurrency('il', creditPoint)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nCreditPointsTableValues.propTypes = {\n\tdisplayItems: globalProps.displayItems,\n\ttaxData: payrollProps.taxData\n};\n\nexport default CreditPointsTableValues;\n","import React from 'react';\nimport { globalProps } from '../../prop-types';\nimport { Button } from 'react-bootstrap';\n\nfunction CreditPointsTableShowMore(props) {\n\tconst handleClick = props.handleClick;\n\n\treturn (\n\t\t<Button type='button' variant='primary' onClick={handleClick}>\n\t\t\tView previous years\n\t\t</Button>\n\t);\n}\n\nCreditPointsTableShowMore.propTypes = {\n\thandleClick: globalProps.handleClick\n};\n\nexport default CreditPointsTableShowMore;\n","import React, { Component } from 'react';\nimport taxData from '../../data/payroll.json';\nimport CreditPointsTableValues from './TableValues.js';\nimport CreditPointsTableShowMore from './ShowMoreBtn';\n\nclass CreditPointsTable extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdisplayItems: 2\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tconst items = this.state.displayItems;\n\t\tconst totalItems = taxData.length;\n\t\tconst increment = 2;\n\t\tthis.setState({\n\t\t\tdisplayItems: items + increment > totalItems ? totalItems : items + increment\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CreditPointsTableValues taxData={taxData} displayItems={this.state.displayItems} />\n\t\t\t\t{this.state.displayItems < taxData.length && (\n\t\t\t\t\t<CreditPointsTableShowMore handleClick={this.handleClick} />\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default CreditPointsTable;\n","import React from 'react';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport CreditPointsTable from './Table';\n\nfunction CreditPoints() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Tax Credit Points' heroImage='creditPoints' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Credit Point Vaules</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tTax credit points reduce the amount of income tax you pay. Once your total tax liability\n\t\t\t\t\t\thas been calculated, the value of your credit points is deducted. A man receives 2.25\n\t\t\t\t\t\tpoints a month and a womnan 2.75. Additional points are awarded to{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://www.gov.il/en/departments/general/introducing_innovative_reforms'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tnew olim and returning residents\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t,{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://www.gov.il/en/departments/guides/tax-benefits-for-parents-with-small-children'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tparents of young children\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tand the disabled.\n\t\t\t\t\t</p>\n\t\t\t\t\t<CreditPointsTable />\n\t\t\t\t</section>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default CreditPoints;\n","import taxData from '../data/payroll.json';\n\nexport const currentYearIndex = taxData.length - 1;\nexport const currentYear = taxData[currentYearIndex].taxYear;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport { currentYear } from '../../utils/globalVariables';\n\nfunction SelfEmployedPensionDeposit(props) {\n\tconst { averageWage, reducedRate, fullRate, reducedMax, fullMax } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contribution Rates</h2>\n\t\t\t<p>\n\t\t\t\tYou're required to contribute to a pension by law. The minimum contribution amounts are\n\t\t\t\tcalculated in relation to your taxable income and the national average wage, up to a maximum\n\t\t\t\trequired amount.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe national avergae wage for the {currentYear} tax year is{' '}\n\t\t\t\t{formatCurrency('il', averageWage)} a month.\n\t\t\t</p>\n\t\t\t<Table striped bordered className='table--col-3 table__header--blue'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th>National Average</th>\n\t\t\t\t\t\t<th>Percent</th>\n\t\t\t\t\t\t<th>Annual Maximum</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Up to 50%</td>\n\t\t\t\t\t\t<td>{reducedRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', reducedMax * 12)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Over 50%</td>\n\t\t\t\t\t\t<td>{fullRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', fullMax * 12)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td>{formatCurrency('il', reducedMax + fullMax * 12)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionDeposit.propTypes = {\n\taverageWage: pensionProps.averageWage,\n\treducedRate: pensionProps.reducedRate,\n\tfullRate: pensionProps.fullRate,\n\treducedMax: pensionProps.reducedMax,\n\tfullMax: pensionProps.fullMax\n};\n\nexport default SelfEmployedPensionDeposit;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction SelfEmployedPensionDepositExamples(props) {\n\tconst { averageWage, averageWageHalf, reducedRate, fullRate, reducedMax, fullMax } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contribution Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Monthly Deposit Example'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>Up to 50% of the national average:</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tIncome of {formatCurrency('il', 0)}-{formatCurrency('il', averageWageHalf)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tA deposit of {reducedRate}% is required on this portion of income, which is a\n\t\t\t\t\t\t\t\tmaximum of {formatCurrency('il', reducedMax)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p>Over 50% of the national average:</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tIncome of {formatCurrency('il', averageWageHalf + 1)}-\n\t\t\t\t\t\t\t\t{formatCurrency('il', averageWage)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tA deposit of {fullRate}% is required on this portion of income, which is a maximum\n\t\t\t\t\t\t\t\tof {formatCurrency('il', fullMax)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionDepositExamples.propTypes = {\n\taverageWage: pensionProps.averageWage,\n\taverageWageHalf: pensionProps.averageWageHalf,\n\treducedRate: pensionProps.reducedRate,\n\tfullRate: pensionProps.fullRate,\n\treducedMax: pensionProps.reducedMax,\n\tfullMax: pensionProps.fullMax\n};\n\nexport default SelfEmployedPensionDepositExamples;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction SelfEmployedPensionTaxRelief(props) {\n\tconst {\n\t\ttaxDeductableMaxPercent,\n\t\ttaxCreditMaxPercent,\n\t\teligibleIncome,\n\t\tceiling,\n\t\tmaxContribution,\n\t\tbeneficiaryPayment,\n\t\trecognisedExpense,\n\t\ttaxCredit\n\t} = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Tax Relief</h2>\n\t\t\t<p>\n\t\t\t\tYou're entitled to tax relief on pension contributions up to{' '}\n\t\t\t\t{taxDeductableMaxPercent + taxCreditMaxPercent}% of your annual income, with{' '}\n\t\t\t\t{taxDeductableMaxPercent}% being a recognised expense and up to {taxCreditMaxPercent}%\n\t\t\t\treceiving a tax credit of 35%, up to deposit ceilings and type of pension.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tUp to an eligible income of {formatCurrency('il', eligibleIncome)}, the full benefits are\n\t\t\t\tavailable as a simple percentage of your income. If your income exceeds this, the benefits\n\t\t\t\tare calculated in two tiers and you must be defined as a beneficiary to be eligible for the\n\t\t\t\tsecond tier. To become a beneficiary, a beneficiary payment must be deposited, which is in\n\t\t\t\taddition to the amounts deposited in the first tier and on which no tax benefits are\n\t\t\t\tavailable.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTax relief is only available up to an income ceiling of {formatCurrency('il', ceiling)},\n\t\t\t\twith the tier ceilings being divided equally.\n\t\t\t</p>\n\t\t\t<div className='table-overflow'>\n\t\t\t\t<Table striped bordered className='table--col-4'>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th>Maximum Contribution</th>\n\t\t\t\t\t\t\t<th>Recognised Expense</th>\n\t\t\t\t\t\t\t<th>Tax Credit</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Tier One </td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', maxContribution)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', recognisedExpense)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', taxCredit)}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Beneficary Payment</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', beneficiaryPayment)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', 0)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', 0)}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Tier Two </td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', maxContribution)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', recognisedExpense)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', taxCredit)}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', maxContribution * 2 + beneficiaryPayment)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', recognisedExpense * 2)}</td>\n\t\t\t\t\t\t\t<td>{formatCurrency('il', taxCredit * 2)}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionTaxRelief.propTypes = {\n\ttaxDeductableMaxPercent: pensionProps.taxDeductableMaxPercent,\n\ttaxCreditMaxPercent: pensionProps.taxCreditMaxPercent,\n\teligibleIncome: pensionProps.eligibleIncome,\n\tceiling: pensionProps.ceiling,\n\tmaxContribution: pensionProps.maxContribution,\n\tbeneficiaryPayment: pensionProps.beneficiaryPayment,\n\trecognisedExpense: pensionProps.recognisedExpense,\n\ttaxCredit: pensionProps.taxCredit\n};\n\nexport default SelfEmployedPensionTaxRelief;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction SelfEmployedPensionTaxReliefExamples(props) {\n\tconst {\n\t\teligibleIncome,\n\t\ttaxDeductableMaxPercent,\n\t\ttaxCreditMaxPercent,\n\t\ttaxCreditRate,\n\t\ttaxCredit,\n\t\tceiling,\n\t\ttierLimit,\n\t\trecognisedExpense,\n\t\tmaxContribution,\n\t\tbeneficiaryPayment\n\t} = props;\n\tconst eligibleDeductable = eligibleIncome * (taxDeductableMaxPercent / 100);\n\tconst eligibleCredit = eligibleIncome * (taxCreditMaxPercent / 100);\n\tconst taxCreditContribution = tierLimit * (taxCreditMaxPercent / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Tax Relief Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Eligible Income Salary'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', eligibleIncome)}, you can make the\n\t\t\t\t\t\t\tfollowing deposits:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{taxDeductableMaxPercent}% of your income,{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', eligibleDeductable)}, will be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {taxCreditMaxPercent}% of your income,{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', eligibleCredit)}, will receive a tax credit of {taxCreditRate}\n\t\t\t\t\t\t\t\t%, equalling{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', eligibleDeductable * (taxCreditMaxPercent / 100))}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tTotal deposit amount of {formatCurrency('il', eligibleDeductable + eligibleCredit)}.\n\t\t\t\t\t\t\t\tAny further deposits won't be eligible for any tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Above the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', ceiling * 1.25)}, it exceeds the\n\t\t\t\t\t\t\teligible income limit and your contributions are subject to the tired system.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe tier one ceiling is fixed at {formatCurrency('il', tierLimit)}. The initial\n\t\t\t\t\t\t\tdeposits that can be made are:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{taxDeductableMaxPercent}% of tier one, {formatCurrency('il', recognisedExpense)},\n\t\t\t\t\t\t\t\twill be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {taxCreditMaxPercent}%, {formatCurrency('il', taxCreditContribution)},\n\t\t\t\t\t\t\t\twill receive a tax credit of {taxCreditRate}%, equalling{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', taxCredit)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe tier two ceiling is fixed at {formatCurrency('il', tierLimit)}. The tax benefits\n\t\t\t\t\t\t\tof this tier are only available once you deposit an additional{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', beneficiaryPayment)} to gain beneficary status. No tax benefits\n\t\t\t\t\t\t\tare available on this amount, but you will receive them on the following:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{taxDeductableMaxPercent}% of tier two, {formatCurrency('il', recognisedExpense)},\n\t\t\t\t\t\t\t\twill be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {taxCreditMaxPercent}%, {formatCurrency('il', taxCreditContribution)},\n\t\t\t\t\t\t\t\twill receive a tax credit of {taxCreditRate}%, equalling{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', taxCredit)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe total amount you need to deposit to gain the full tax benefits is{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', maxContribution * 2 + beneficiaryPayment)}.{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', maxContribution)} in tier one, plus the{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', beneficiaryPayment)} beneficiary payment, plus{' '}\n\t\t\t\t\t\t\t{formatCurrency('il', maxContribution)} in tier two.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nSelfEmployedPensionTaxReliefExamples.propTypes = {\n\teligibleIncome: pensionProps.eligibleIncome,\n\ttaxDeductableMaxPercent: pensionProps.taxDeductableMaxPercent,\n\ttaxCredit: pensionProps.taxCredit,\n\ttaxCreditMaxPercent: pensionProps.taxCreditMaxPercent,\n\ttaxCreditRate: pensionProps.taxCreditRate,\n\tceiling: pensionProps.ceiling,\n\ttierLimit: pensionProps.tierLimit,\n\trecognisedExpense: pensionProps.recognisedExpense,\n\tmaxContribution: pensionProps.maxContribution,\n\tbeneficiaryPayment: pensionProps.beneficiaryPayment\n};\n\nexport default SelfEmployedPensionTaxReliefExamples;\n","import React from 'react';\nimport taxData from '../../data/payroll.json';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport SelfEmployedPensionDeposit from './Deposit';\nimport SelfEmployedPensionDepositExamples from './DepositExamples';\nimport SelfEmployedPensionTaxRelief from './TaxRelief';\nimport SelfEmployedPensionTaxReliefExamples from './TaxReliefExamples';\nimport { currentYearIndex } from '../../utils/globalVariables';\n\nconst currentYearData = taxData[currentYearIndex];\n//Contribution calculations\nconst { reducedRate, fullRate } = currentYearData.pension.legalMin.selfEmployed;\nconst averageWage = currentYearData.bituachLeumi.averageSalary;\nconst averageWageHalf = averageWage / 2;\nconst reducedMax = averageWageHalf * (reducedRate / 100);\nconst fullMax = averageWageHalf * (fullRate / 100);\n//Tax relief calculations\nconst { taxDeductableMaxPercent, taxCreditMaxPercent, taxCreditRate, eligibleIncome, ceiling } =\n\tcurrentYearData.pension.taxRelief.selfEmployed;\nconst deductableDecimal = taxDeductableMaxPercent / 100;\nconst creditDecimal = taxCreditMaxPercent / 100;\nconst tierLimit = ceiling / 2;\nconst maxContribution = tierLimit * (deductableDecimal + creditDecimal);\nconst beneficiaryPayment = currentYearData.bituachLeumi.averageSalary * 0.16 * 12 - maxContribution;\nconst recognisedExpense = tierLimit * (taxDeductableMaxPercent / 100);\nconst taxCredit = tierLimit * (taxCreditMaxPercent / 100) * (taxCreditRate / 100);\n\nfunction SelfEmployedPension() {\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Self-employed Pension' heroImage='pension' />\n\t\t\t<PageContainer>\n\t\t\t\t<SelfEmployedPensionDeposit\n\t\t\t\t\tcurrentYearData={currentYearData}\n\t\t\t\t\taverageWage={averageWage}\n\t\t\t\t\treducedRate={reducedRate}\n\t\t\t\t\tfullRate={fullRate}\n\t\t\t\t\treducedMax={reducedMax}\n\t\t\t\t\tfullMax={fullMax}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedPensionDepositExamples\n\t\t\t\t\taverageWage={averageWage}\n\t\t\t\t\taverageWageHalf={averageWageHalf}\n\t\t\t\t\treducedRate={reducedRate}\n\t\t\t\t\tfullRate={fullRate}\n\t\t\t\t\treducedMax={reducedMax}\n\t\t\t\t\tfullMax={fullMax}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedPensionTaxRelief\n\t\t\t\t\ttaxDeductableMaxPercent={taxDeductableMaxPercent}\n\t\t\t\t\ttaxCreditMaxPercent={taxCreditMaxPercent}\n\t\t\t\t\teligibleIncome={eligibleIncome}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\tmaxContribution={maxContribution}\n\t\t\t\t\tbeneficiaryPayment={beneficiaryPayment}\n\t\t\t\t\trecognisedExpense={recognisedExpense}\n\t\t\t\t\ttaxCredit={taxCredit}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedPensionTaxReliefExamples\n\t\t\t\t\teligibleIncome={eligibleIncome}\n\t\t\t\t\ttaxDeductableMaxPercent={taxDeductableMaxPercent}\n\t\t\t\t\ttaxCreditMaxPercent={taxCreditMaxPercent}\n\t\t\t\t\ttaxCreditRate={taxCreditRate}\n\t\t\t\t\ttaxCredit={taxCredit}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\ttierLimit={tierLimit}\n\t\t\t\t\trecognisedExpense={recognisedExpense}\n\t\t\t\t\tmaxContribution={maxContribution}\n\t\t\t\t\tbeneficiaryPayment={beneficiaryPayment}\n\t\t\t\t/>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default SelfEmployedPension;\n","import React from 'react';\nimport { pensionProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport { currentYear } from '../../utils/globalVariables';\n\nfunction EmployeePensionDeposit(props) {\n\tconst { employee, employer, severance } = props.latestPensionData;\n\tconst averageWage = props.averageWage;\n\tconst employerMax = averageWage * (employer / 100);\n\tconst severanceMax = averageWage * (severance / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contribution Rates</h2>\n\t\t\t<p>\n\t\t\t\tBoth you and your employer must contribute to a pension by law. In addition to a pension\n\t\t\t\tcontribution, your employer will also contribute an amount towards your severance pay.\n\t\t\t</p>\n\t\t\t<p>Key points:</p>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\tWhen you're eligible to receive your severance pay, you may choose to leave it in your\n\t\t\t\t\tpension fund\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tYour employer will not include bonuses or overtime in the amount they pay contributions on\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tYour employer is only required to contribute up to the equivalant amount of the national\n\t\t\t\t\taverage wage, which is {formatCurrency('il', averageWage)} a month for the {currentYear}{' '}\n\t\t\t\t\ttax year. However, you may be able to negotiate a higher limit in your contract\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tYour individual circumstances at the start of your employment will dictate when your\n\t\t\t\t\tcontributions start\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Percent</th>\n\t\t\t\t\t\t<th>Monthly Maximum</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employee Pension Contribution</td>\n\t\t\t\t\t\t<td>{employee}</td>\n\t\t\t\t\t\t<td>No limit</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employer Pension Contribution</td>\n\t\t\t\t\t\t<td>{employer}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', employerMax)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employer Severance Contribution</td>\n\t\t\t\t\t\t<td>{severance}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', severanceMax)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className='table__total'>\n\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t<td>{employee + employer + severance}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', employerMax + severanceMax)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nEmployeePensionDeposit.propTypes = {\n\tlatestPensionData: pensionProps.latestPensionData,\n\taverageWage: pensionProps.averageWage\n};\n\nexport default EmployeePensionDeposit;\n","import React from 'react';\nimport pensionData from '../../data/workplace-pension.json';\nimport taxData from '../../data/payroll.json';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport EmployeePensionDeposit from './Deposit';\nimport { currentYearIndex } from '../../utils/globalVariables';\n\nfunction EmployeePension() {\n\tconst latestPensionData = pensionData[pensionData.length - 1];\n\tconst averageWage = taxData[currentYearIndex].bituachLeumi.averageSalary;\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Workplace Pension' heroImage='pension' />\n\t\t\t<PageContainer>\n\t\t\t\t<EmployeePensionDeposit latestPensionData={latestPensionData} averageWage={averageWage} />\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default EmployeePension;\n","import React from 'react';\nimport { globalProps, studyProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction SelfEmployedStudyFundDeposit(props) {\n\tconst { ceiling, currentYear, rate, capitalGainsLimit, maxDeposit } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contributions & Allowances</h2>\n\t\t\t<p>\n\t\t\t\tA study fund allows you to save without paying capital gains tax on profit the fund\n\t\t\t\tgenerates and the contributions are a recognised expense, up to deposit limits and an income\n\t\t\t\tof ceiling of {formatCurrency('il', ceiling)} for the {currentYear} tax year. You cannot\n\t\t\t\twithdraw from the fund for 6 years in order to benefit from the capital gains exemption,\n\t\t\t\tunless using the funds to pay for a study/training programme.\n\t\t\t</p>\n\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Maximum Percent</th>\n\t\t\t\t\t\t<th>Maximum Deposit</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Recognised Expense</td>\n\t\t\t\t\t\t<td>{rate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', maxDeposit)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Capital Gains Exemption</td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td>{formatCurrency('il', capitalGainsLimit)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nSelfEmployedStudyFundDeposit.propTypes = {\n\tcurrentYear: globalProps.currentYear,\n\tceiling: studyProps.ceiling,\n\trate: studyProps.rate,\n\tcapitalGainsLimit: studyProps.capitalGainsLimit,\n\tmaxDeposit: studyProps.maxDeposit\n};\n\nexport default SelfEmployedStudyFundDeposit;\n","import React from 'react';\nimport { studyProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction SelfEmployedStudyExamples(props) {\n\tconst { rate, ceiling, capitalGainsLimit, maxDeposit } = props;\n\tconst exmpleAboveCeiling = ceiling * 1.25;\n\tconst exmpleBelowCeiling = ceiling * 0.75;\n\tconst exampleBelowMaxDeposit = exmpleBelowCeiling * (rate / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Deposit Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Above the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleAboveCeiling)}, it exceeds the\n\t\t\t\t\t\t\tincome ceiling and the following deposit amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{rate}% of your income exceeds the deposit limit, so you can deposit the maximum of{' '}\n\t\t\t\t\t\t\t\t{formatCurrency('il', maxDeposit)} to be considered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {formatCurrency('il', capitalGainsLimit - maxDeposit)} will be exempt\n\t\t\t\t\t\t\t\tfrom capital gains tax\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, over the {formatCurrency('il', capitalGainsLimit)} limit,\n\t\t\t\t\t\t\t\twon't be eligible for any tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Below the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleBelowCeiling)}, it's less than\n\t\t\t\t\t\t\tthe income ceiling and the following deposit amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{rate}% of your income, {formatCurrency('il', exampleBelowMaxDeposit)}, will be\n\t\t\t\t\t\t\t\tconsidered a recognised expense\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAn additional {formatCurrency('il', capitalGainsLimit - exampleBelowMaxDeposit)}{' '}\n\t\t\t\t\t\t\t\twill be exempt from capital gains tax\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, over the {formatCurrency('il', capitalGainsLimit)} limit,\n\t\t\t\t\t\t\t\twon't be eligible for any tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nSelfEmployedStudyExamples.propTypes = {\n\tceiling: studyProps.ceiling,\n\trate: studyProps.rate,\n\tcapitalGainsLimit: studyProps.capitalGainsLimit,\n\tmaxDeposit: studyProps.maxDeposit\n};\n\nexport default SelfEmployedStudyExamples;\n","import React from 'react';\nimport taxData from '../../data/payroll.json';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport SelfEmployedStudyFundDeposit from './Deposit';\nimport SelfEmployedStudyExamples from './Examples';\nimport { currentYearIndex, currentYear } from '../../utils/globalVariables';\n\nfunction SelfEmployedStudyFund() {\n\tconst { rate, ceiling, capitalGainsLimit } = taxData[currentYearIndex].studyFund.selfEmployed;\n\tconst maxDeposit = ceiling * (rate / 100);\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Self-employed Study Fund' heroImage='studyFund' />\n\t\t\t<PageContainer>\n\t\t\t\t<SelfEmployedStudyFundDeposit\n\t\t\t\t\tcurrentYear={currentYear}\n\t\t\t\t\trate={rate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\tcapitalGainsLimit={capitalGainsLimit}\n\t\t\t\t\tmaxDeposit={maxDeposit}\n\t\t\t\t/>\n\t\t\t\t<SelfEmployedStudyExamples\n\t\t\t\t\trate={rate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t\tcapitalGainsLimit={capitalGainsLimit}\n\t\t\t\t\tmaxDeposit={maxDeposit}\n\t\t\t\t/>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default SelfEmployedStudyFund;\n","import React from 'react';\nimport { globalProps, studyProps } from '../../prop-types';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\n\nfunction EmployeeStudyFundDeposit(props) {\n\tconst { currentYear, employeeRate, employerRate, ceiling } = props;\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Contributions & Allowances</h2>\n\t\t\t<p>\n\t\t\t\tA study fund allows you to save without paying capital gains tax on profit the fund\n\t\t\t\tgenerates, up to deposit limits and an income ceiling of {formatCurrency('il', ceiling)} (\n\t\t\t\t{formatCurrency('il', ceiling / 12)} a month) for the {currentYear} tax year.\n\t\t\t</p>\n\t\t\t<p>Key points:</p>\n\t\t\t<ul>\n\t\t\t\t<li>You can only open a study fund if your employer offers one</li>\n\t\t\t\t<li>\n\t\t\t\t\tYou cannot withdraw from the fund for 6 years in order to benefit from the tax exemptions,\n\t\t\t\t\tunless using the funds to pay for a study programme\n\t\t\t\t</li>\n\t\t\t\t<li>You don't pay income tax on your employer's contribution </li>\n\t\t\t</ul>\n\t\t\t<Table striped bordered className='table--col-3'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Maximum Percent</th>\n\t\t\t\t\t\t<th>Maximum Deposit</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employee Contribution</td>\n\t\t\t\t\t\t<td>{employeeRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', ceiling * (employeeRate / 100))}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Employer Contribution</td>\n\t\t\t\t\t\t<td>{employerRate}</td>\n\t\t\t\t\t\t<td>{formatCurrency('il', ceiling * (employerRate / 100))}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</section>\n\t);\n}\n\nEmployeeStudyFundDeposit.propTypes = {\n\tcurrentYear: globalProps.currentYear,\n\tceiling: studyProps.ceiling,\n\temployeeRate: studyProps.ceiling,\n\temployerRate: studyProps.ceiling\n};\n\nexport default EmployeeStudyFundDeposit;\n","import React from 'react';\nimport { studyProps } from '../../prop-types';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport InfoCard from '../../components/info-card';\n\nfunction EmployeeStudyFundExamples(props) {\n\tconst { employeeRate, employerRate, ceiling } = props;\n\tconst maxEmployeeDeposit = ceiling * (employeeRate / 100);\n\tconst maxEmployerDeposit = ceiling * (employerRate / 100);\n\tconst exmpleAboveCeiling = ceiling * 1.25;\n\tconst exmpleBelowCeiling = ceiling * 0.75;\n\tconst exampleBelowMaxDepositEmployee = exmpleBelowCeiling * (employeeRate / 100);\n\tconst exampleBelowMaxDepositEmployer = exmpleBelowCeiling * (employerRate / 100);\n\n\treturn (\n\t\t<section>\n\t\t\t<h2>Deposit Examples</h2>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Above the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleAboveCeiling)} (\n\t\t\t\t\t\t\t{formatCurrency('il', exmpleAboveCeiling / 12)} a month), it exceeds the income\n\t\t\t\t\t\t\tceiling and the following deposit amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employeeRate}% of your income exceeds the deposit limit, so you can deposit the\n\t\t\t\t\t\t\t\tmaximum of\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployeeDeposit / 12)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployeeDeposit)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employerRate}% of your income exceeds the deposit limit, so your employer can\n\t\t\t\t\t\t\t\tdeposit the maximum of\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployerDeposit / 12)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', maxEmployerDeposit)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, whether made by you or your employer, won't be eligible for\n\t\t\t\t\t\t\t\tany tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InfoCard\n\t\t\t\ttype='example'\n\t\t\t\ttitle='Salary Below the Income Ceiling'\n\t\t\t\tbody={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIf your annual income is {formatCurrency('il', exmpleBelowCeiling)} (\n\t\t\t\t\t\t\t{formatCurrency('il', exmpleBelowCeiling / 12)} a month), it's less than the income\n\t\t\t\t\t\t\tceiling and the following deposits amounts apply:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employeeRate}% of your income\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployee / 12)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployee)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{employerRate}% from your employer\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployer / 12)} a month</li>\n\t\t\t\t\t\t\t\t\t<li>{formatCurrency('il', exampleBelowMaxDepositEmployer)} a year</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tAny further deposits, whether made by you or your employer, won't be eligible for\n\t\t\t\t\t\t\t\tany tax benefits\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t</section>\n\t);\n}\n\nEmployeeStudyFundExamples.propTypes = {\n\tceiling: studyProps.ceiling,\n\temployeeRate: studyProps.ceiling,\n\temployerRate: studyProps.ceiling\n};\n\nexport default EmployeeStudyFundExamples;\n","import React from 'react';\nimport taxData from '../../data/payroll.json';\nimport Hero from '../../components/hero';\nimport PageContainer from '../../components/page-container';\nimport EmployeeStudyFundDeposit from './Deposit';\nimport EmployeeStudyFundExamples from './Examples';\nimport { currentYearIndex, currentYear } from '../../utils/globalVariables';\n\nfunction EmployeeStudyFund() {\n\tconst {\n\t\tstudyFund: {\n\t\t\temployee: { rate: employeeRate, ceiling },\n\t\t\temployer: { rate: employerRate }\n\t\t}\n\t} = taxData[currentYearIndex];\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Employee Study Fund' heroImage='studyFund' />\n\t\t\t<PageContainer>\n\t\t\t\t<EmployeeStudyFundDeposit\n\t\t\t\t\tcurrentYear={currentYear}\n\t\t\t\t\temployeeRate={employeeRate}\n\t\t\t\t\temployerRate={employerRate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t/>\n\t\t\t\t<EmployeeStudyFundExamples\n\t\t\t\t\temployeeRate={employeeRate}\n\t\t\t\t\temployerRate={employerRate}\n\t\t\t\t\tceiling={ceiling}\n\t\t\t\t/>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default EmployeeStudyFund;\n","import React from 'react';\nimport expensesData from '../../data/expenses.json';\nimport PageContainer from '../../components/page-container';\nimport Hero from '../../components/hero';\nimport { Table } from 'react-bootstrap';\nimport { formatCurrency } from '../../utils/formatCurrency';\nimport { Link } from 'react-router-dom';\n\nfunction ExpensesTable() {\n\tconst espenseTabel = expensesData.expenses;\n\tconst currentVatIndex = expensesData.vat.length - 1;\n\tconst vat = expensesData.vat[currentVatIndex].amount;\n\n\treturn (\n\t\t<>\n\t\t\t<Hero h1='Recognised Expenses' heroImage='expenses' />\n\t\t\t<PageContainer>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>What Is a Recognised Expense?</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAn expense that has a material benefit to your business, will be recognised by the tax\n\t\t\t\t\t\tauthorities to allow you to deduct a percentage of it from your taxable income (profit).\n\t\t\t\t\t\tThe deduction amount depends on the expense itself and the degree in which it benefits\n\t\t\t\t\t\tthe business, and categorised as fully recognised, partially recognised or a capital\n\t\t\t\t\t\texpense.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAs tax is due on your income and not revenue, this allows you to lower your tax burden\n\t\t\t\t\t\tand the amount of tax you ultimately pay. For example, if your total revenue is{' '}\n\t\t\t\t\t\t{formatCurrency('il', 15000)} and you have a deductible amount of{' '}\n\t\t\t\t\t\t{formatCurrency('il', 2000)} in recognised expenses, you will only pay tax on your\n\t\t\t\t\t\tincome of {formatCurrency('il', 13000)}. The amount of tax the this equates to will\n\t\t\t\t\t\tdepend on your <Link to='/tax-rates/income-tax'>tax bracket</Link>. The saving will be\n\t\t\t\t\t\tgreater the higher the bracket.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIf you're an osek murshe, a licensed dealer, the deduction is on the net amount\n\t\t\t\t\t\t(excludign VAT). In additon, the VAT can be offset against your VAT filings. If the\n\t\t\t\t\t\tamount of VAT you're elgibile to claim back is greater than the VAT you owe, you'll\n\t\t\t\t\t\trecieve a refund. The current rate of VAT is {vat}%. If you're osek patur, an exempt\n\t\t\t\t\t\tdealer, the deduction on the total amount.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Fully Recognised Expenses</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tA fully recognised expense is one made for the sole benefit of the business, such as\n\t\t\t\t\t\toffice stationary, work travel or accounting. These expenses can be claimed in full.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFor example, if the total amount is {formatCurrency('il', 100 + vat)}, the net is{' '}\n\t\t\t\t\t\t{formatCurrency('il', 100)} and VAT portion is {formatCurrency('il', vat)}. As a fully\n\t\t\t\t\t\trecognised expense, an osek murshe can deduct {formatCurrency('il', 100)} from their tax\n\t\t\t\t\t\tliability and offset {formatCurrency('il', vat)} from their VAT returns. An osek patur\n\t\t\t\t\t\tcan simply deduct {formatCurrency('il', 100 + vat)} from their tax liability.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Partially Recognised Expenses</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tA partially recognised expense is one that only partially applies to the business, such\n\t\t\t\t\t\tas a mobile phone that's used for both business and personal use. The deductible and VAT\n\t\t\t\t\t\toffset amounts vary depending on the expense and the level of business benefit.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFor example, if the total amount is {formatCurrency('il', 100 + vat)}, the net is{' '}\n\t\t\t\t\t\t{formatCurrency('il', 100)} and VAT portion is {formatCurrency('il', vat)}. If 25% is\n\t\t\t\t\t\tclaimable, an osek murshe can deduct {formatCurrency('il', 100 / 4)} from their tax\n\t\t\t\t\t\tliability and offset {formatCurrency('il', vat / 4)} from their VAT returns. An osek\n\t\t\t\t\t\tpatur can simply deduct {formatCurrency('il', (100 + vat) / 4)} from their tax\n\t\t\t\t\t\tliability.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Capital Expenses</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tA capital expense is the purchase or maintenance physical assets, such as equipment or\n\t\t\t\t\t\tfurniture. As these assets usually last for a longer period of time, the deductible\n\t\t\t\t\t\tamount is spread over a specified amount of years. The time varies depending on the\n\t\t\t\t\t\tdurability of the asset. The VAT is usually offset in full during the first year.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFor example, if the total amount is {formatCurrency('il', (100 + vat) * 10)}, the net is{' '}\n\t\t\t\t\t\t{formatCurrency('il', 100 * 10)} and VAT portion is {formatCurrency('il', vat * 10)}. If\n\t\t\t\t\t\t33% a year is claimable, an osek murshe can deduct{' '}\n\t\t\t\t\t\t{formatCurrency('il', (100 * 10) / 3)} a year from their tax liability and offset{' '}\n\t\t\t\t\t\t{formatCurrency('il', vat * 10)} from their VAT returns. An osek patur can simply deduct{' '}\n\t\t\t\t\t\t{formatCurrency('il', ((100 + vat) * 10) / 3)} a year from their tax liability.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<section className='table-overflow'>\n\t\t\t\t\t<h2>Table of Common Expenses</h2>\n\t\t\t\t\t<Table striped bordered className='table--col-4'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr className='table__row-header table__row-header--primary'>\n\t\t\t\t\t\t\t\t<th>Expense</th>\n\t\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t\t<th>Deduction</th>\n\t\t\t\t\t\t\t\t<th>VAT Offset</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{espenseTabel.map((expenseRow, i) => {\n\t\t\t\t\t\t\t\tconst { expense, type, deduct, vat } = expenseRow;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t<td>{expense}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{type}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t{deduct}% {type === 'Capital' && 'a year'}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t{vat}\n\t\t\t\t\t\t\t\t\t\t\t{typeof vat === 'number' && '%'}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</section>\n\t\t\t</PageContainer>\n\t\t</>\n\t);\n}\n\nexport default ExpensesTable;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './app.scss';\nimport Home from '../pages/home';\nimport Navigation from '../components/navbar';\nimport LanguageContext from '../contexts/LanguageContext';\nimport Footer from '../components/footer';\nimport NetPay from '../pages/net-pay';\nimport EndOfYear from '../pages/end-of-year';\nimport TaxBands from '../pages/tax-bands';\nimport CreditPoints from '../pages/credit-points';\nimport SelfEmployedPension from '../pages/pension-self-employed';\nimport EmployeePension from '../pages/pension-employee';\nimport SelfEmployedStudyFund from '../pages/study-fund-self-employed';\nimport EmployeeStudyFund from '../pages/study-fund-employee';\nimport RecognisedExpenses from '../pages/expenses';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tlanguage: this.getLanguage(),\n\t\t\tsetLanguage: isoCode => {\n\t\t\t\tif (this.state.language !== isoCode) {\n\t\t\t\t\tlocalStorage.setItem('languageSetting', isoCode);\n\t\t\t\t\tthis.setState({ language: isoCode });\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tgetLanguage = () => {\n\t\tconst curentLanguage = localStorage.getItem('languageSetting');\n\n\t\treturn curentLanguage === null ? 'en' : curentLanguage;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router basename='/israel-tax'>\n\t\t\t\t<LanguageContext.Provider value={this.state}>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath='/employee/net-pay-calculator'\n\t\t\t\t\t\t\trender={() => <NetPay employmentType={'employee'} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath='/self-employed/net-pay-calculator'\n\t\t\t\t\t\t\trender={() => <NetPay employmentType={'selfEmployed'} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path='/self-employed/end-of-year-calculator' component={EndOfYear} />\n\t\t\t\t\t\t<Route path='/tax-rates/income-tax' component={TaxBands} />\n\t\t\t\t\t\t<Route path='/tax-rates/credit-points' component={CreditPoints} />\n\t\t\t\t\t\t<Route path='/self-employed/pension' component={SelfEmployedPension} />\n\t\t\t\t\t\t<Route path='/employee/pension' component={EmployeePension} />\n\t\t\t\t\t\t<Route path='/self-employed/study-fund' component={SelfEmployedStudyFund} />\n\t\t\t\t\t\t<Route path='/employee/study-fund' component={EmployeeStudyFund} />\n\t\t\t\t\t\t<Route path='/self-employed/recognised-expenses' component={RecognisedExpenses} />\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<Footer />\n\t\t\t\t</LanguageContext.Provider>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/iphone-calulator.6f8e95b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canvasbag-suit.f9d191d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hour-glass-coins.1cb60e21.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/seedling-coins.699b28d7.jpg\";","module.exports = {\n\tinvalidNum: 'Enter a valid number (Up to 2 decimal places).',\n\tinvalidPercent: 'Enter a valid percentage (Up to 2 decimal places).'\n};\n"],"sourceRoot":""}